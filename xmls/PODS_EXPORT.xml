<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<root version="6.0.2.6">
    <data table="ACTIVITY_ZONE" schema="PODS" id="PODS_ACTIVITY_ZONE" comment="PODS.ACTIVITY_ZONE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>Select ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.ACTIVITY_ZONE_CL where
                    code=ZONE_CL) ЦЕЛЕВОЕ_НАЗНАЧЕНИЕ_ТЕРРИТОРИИ, DESCRIPTION ОПИСАНИЕ, (select description from
                    pods.source_gcl where code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, ZONE_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM (SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((ZONE_CL)::text , 'НЕИЗВЕСТНО') ZONE_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.ACTIVITY_ZONE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ANODE" schema="PODS" id="PODS_ANODE" comment="PODS.ANODE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>select ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from pods.anode_type_cl where code=type_cl)
                    ТИП_АНОДА, ANODE_MASS МАССА_КГ,MODEL МОДЕЛЬ,DESCRIPTION ОПИСАНИЕ,DEPTH_OF_COVER
                    ГЛУБИНА_ЗАЛОЖЕНИЯ_М,(select description from PODS.BACK_FILL_MATERIAL_GCL where
                    code=BACK_FILL_MATERIAL_GCL) МАТЕРИАЛ_ЗАСЫПКИ, ANODE_DIAMETER ДИАМЕТР_ММ,ANODE_LENGTH ДЛИНА_ММ,
                    (select description from pods.anode_manufacturer_cl where code=MANUFACTURER_CL) ПРОИЗВОДИТЕЛЬ,
                    (select description from pods.PACKAGE_FILL_CL where code=PACKAGE_FILL_CL)
                    МАТЕРИАЛ_ЗАПОЛНЕНИЯ_КОРПУСА,PACKAGE_DIAMETER ДИАМЕТР_В_КОРПУСЕ_ММ,PACKAGE_LENGTH
                    ДЛИНА_В_КОРПУСЕ_ММ,DATE_INSTALLED ДАТА_УСТАНОВКИ, GALVANIC_LF ГАЛЬВАНИЧЕСКИЙ_АНОД, (select
                    description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИЙ,ID,EVENT_ID,TYPE_CL,ANODE_MASS,MODEL,DESCRIPTION,DEPTH_OF_COVER,BACK_FILL_MATERIAL_GCL,ANODE_DIAMETER,ANODE_LENGTH,MANUFACTURER_CL,MATERIAL_CL,PACKAGE_FILL_CL,PACKAGE_DIAMETER,PACKAGE_LENGTH,DATE_INSTALLED,GALVANIC_LF,SOURCE_GCL,"comments"
                    FROM (SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((ANODE_MASS)::text , 'НЕИЗВЕСТНО') ANODE_MASS,
                    coalesce((MODEL)::text , 'НЕИЗВЕСТНО') MODEL, coalesce((GROUND_BED_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    GROUND_BED_EVENT_ID, coalesce((GROUND_BED_EVENT_GUID)::text , 'НЕИЗВЕСТНО') GROUND_BED_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((DEPTH_OF_COVER)::text ,
                    'НЕИЗВЕСТНО') DEPTH_OF_COVER, coalesce((BACK_FILL_MATERIAL_GCL)::text , 'НЕИЗВЕСТНО')
                    BACK_FILL_MATERIAL_GCL, coalesce((ANODE_DIAMETER)::text , 'НЕИЗВЕСТНО') ANODE_DIAMETER,
                    coalesce((ANODE_LENGTH)::text , 'НЕИЗВЕСТНО') ANODE_LENGTH, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((PACKAGE_FILL_CL)::text , 'НЕИЗВЕСТНО') PACKAGE_FILL_CL, coalesce((PACKAGE_DIAMETER)::text
                    , 'НЕИЗВЕСТНО') PACKAGE_DIAMETER, coalesce((PACKAGE_LENGTH)::text , 'НЕИЗВЕСТНО') PACKAGE_LENGTH,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((GALVANIC_LF)::text ,
                    'НЕИЗВЕСТНО') GALVANIC_LF, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.ANODE
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="BOND_LEAD" schema="PODS" id="PODS_BOND_LEAD" comment="PODS.BOND_LEAD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>select ID ИДЕНТИФИКАТОР_ОБЪЕКТА,NAME НАЗНАЧЕНИЕ, (select description from
                    pods.BOND_LEAD_MATERIAL_CL where code= MATERIAL_CL) МАТЕРИАЛ,DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.BOND_LEAD_TYPE_CL where code=TYPE_CL) ТИП_ПРОКЛАДКИ_ЛИНИИ,DATE_INSTALLED
                    ДАТА_ПРОКЛАДКИ, MAX_RESISTANCE МАКСИМАЛЬНОЕ_СОПРОТИВЛЕНИЕ_ОМ, (select description from
                    pods.BONDED_COMPANY_CL where code=BONDED_COMPANY_CL) КОМПАНИЯ_ВЫП_ПРОКЛАД_ЛИНИИ,(select description
                    from PODS.RESISTOR_TYPE_CL where code=RESISTOR_TYPE_CL) ТИП_РЕЗИСТОРА,RESISTOR_POWER_RATING
                    НОМИНАЛ_РЕЗИСТОРА_ОМ, (select description from PODS.GAUGE_SIZE_CL where code=GAUGE_SIZE_CL)
                    ТИПОРАЗМЕР_ПРОВОДА,(select description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS
                    КОММЕНТАРИЙ,ID,EVENT_ID,EVENT_GUID,NAME,MATERIAL_CL,DESCRIPTION,TYPE_CL,DATE_INSTALLED,REF_TEST_LEAD_EVENT_ID,REF_TEST_LEAD_EVENT_GUID,MAX_RESISTANCE,BONDED_COMPANY_CL,RESISTOR_TYPE_CL,RESISTOR_POWER_RATING,GAUGE_SIZE_CL,SOURCE_GCL,"comments"
                    FROM (SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text ,
                    'НЕИЗВЕСТНО') "name", coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL,coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((REF_TEST_LEAD_EVENT_ID)::text , 'НЕИЗВЕСТНО') REF_TEST_LEAD_EVENT_ID,
                    coalesce((REF_TEST_LEAD_EVENT_GUID)::text , 'НЕИЗВЕСТНО') REF_TEST_LEAD_EVENT_GUID,
                    coalesce((MAX_RESISTANCE)::text , 'НЕИЗВЕСТНО') MAX_RESISTANCE, coalesce((BONDED_COMPANY_CL)::text ,
                    'НЕИЗВЕСТНО') BONDED_COMPANY_CL, coalesce((RESISTOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') RESISTOR_TYPE_CL,
                    coalesce((RESISTOR_POWER_RATING)::text , 'НЕИЗВЕСТНО') RESISTOR_POWER_RATING,
                    coalesce((GAUGE_SIZE_CL)::text , 'НЕИЗВЕСТНО') GAUGE_SIZE_CL, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.BOND_LEAD t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="BRANCH_CONNECT" schema="PODS" id="PODS_BRANCH_CONNECT" comment="PODS.BRANCH_CONNECT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>Select ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from pods.BRANCH_CONNECT_TYPE_CL where code=
                    TYPE_CL) ТИП_УСИЛИВАЮЩЕЙ_НАКЛАДКИ,(select description from pods.NOMINAL_DIAMETER_GCL where
                    code::text= NOMINAL_DIAMETER_GCL) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    pods.BRANCH_CONNECT_MANUFACTURER_CL where code= MANUFACTURER_CL) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description from pods.BRANCH_CONNECT_SPEC_CL where
                    code= SPECIFICATION_CL) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select description from pods.TAP_METHOD_GCL where code=
                    TAP_METHOD_GCL) СПОСОБ_ВРЕЗКИ, DATE_INSTALLED УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select
                    description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS КОММЕНТАРИИ,
                    ID, EVENT_ID, EVENT_GUID, TYPE_CL, NOMINAL_WALL_THICKNESS_GCL, NOMINAL_DIAMETER_GCL,
                    MANUFACTURER_CL, DATE_MANUFACTURED, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE,
                    TAP_METHOD_GCL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM (SELECT coalesce((ID)::text
                    , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text
                    , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО')
                    SPECIFICATION_CL, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((TAP_METHOD_GCL)::text , 'НЕИЗВЕСТНО') TAP_METHOD_GCL, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.BRANCH_CONNECT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CASING" schema="PODS" id="PODS_CASING" comment="PODS.CASING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>select ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.CROSSING_TYPE_GCL where
                    code=CROSSING_TYPE_GCL) ТИП_ПЕРЕХОДА, (select description from PODS.CASING_INSULATOR_TYPE_CL where
                    code=INSULATOR_TYPE_CL) ТИП_ИЗОЛЯЦИИ, (select description from PODS.CASING_SEAL_TYPE_CL where
                    code=SEAL_TYPE_CL) ТИП_УПЛОТНЕНИЯ, VENTED_INDICATOR_LF ВЫТЯЖНЫЕ_СВЕЧИ, QUANTITY_OF_VENTS
                    КОЛИЧЕСТВО_ВЫТЯЖНЫХ_СВЕЧЕЙ, (select description from PODS.CASING_MANUFACTURER_CL where
                    code=MANUFACTURER_CL) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.PIPE_MILL_LOCATION_GCL where code=PIPE_MILL_LOCATION_GCL)
                    МЕСТОПОЛ_ТРУБ_ПРОИЗВОДСТВА, (select description from PODS.CASING_MATERIAL_CL where code=MATERIAL_CL)
                    МАТЕРИАЛ, (select description from PODS.PIPE_SPECIFICATION_GCL where code=PIPE_SPECIFICATION_GCL)
                    ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select description from PODS.SMYS_GCL where code::text=SMYS_GCL)
                    ПРЕДЕЛ_ТЕКУЧ_СТ_Н_ММ2, (select description from PODS.PIPE_GRADE_GCL where code=PIPE_GRADE_GCL)
                    МАРКА_СТАЛИ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    code::text=NOMINAL_DIAMETER_GCL) НОМИН_ДИАМЕТР_ТОЛЩ_СТЕНКИ_ММ, LENGTH ДЛИНА_КОЖУХА_М, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select description from pods.source_gcl where
                    code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, CROSSING_TYPE_GCL,
                    INSULATOR_TYPE_CL, SEAL_TYPE_CL, VENTED_INDICATOR_LF, QUANTITY_OF_VENTS, MANUFACTURER_CL,
                    DATE_MANUFACTURED, PIPE_MILL_LOCATION_GCL, MATERIAL_CL, PIPE_SPECIFICATION_GCL, SMYS_GCL,
                    PIPE_GRADE_GCL, NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL, LENGTH, DATE_INSTALLED,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM (SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((CROSSING_TYPE_GCL)::text , 'НЕИЗВЕСТНО') CROSSING_TYPE_GCL,
                    coalesce((INSULATOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') INSULATOR_TYPE_CL, coalesce((SEAL_TYPE_CL)::text
                    , 'НЕИЗВЕСТНО') SEAL_TYPE_CL, coalesce((VENTED_INDICATOR_LF)::text , 'НЕИЗВЕСТНО')
                    VENTED_INDICATOR_LF, coalesce((QUANTITY_OF_VENTS)::text , 'НЕИЗВЕСТНО') QUANTITY_OF_VENTS,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((PIPE_MILL_LOCATION_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_MILL_LOCATION_GCL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((PIPE_SPECIFICATION_GCL)::text , 'НЕИЗВЕСТНО') PIPE_SPECIFICATION_GCL,
                    coalesce((SMYS_GCL)::text , 'НЕИЗВЕСТНО') SMYS_GCL, coalesce((PIPE_GRADE_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_GRADE_GCL, coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((LENGTH)::text , 'НЕИЗВЕСТНО') LENGTH, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО')
                    DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.CASING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CATHODIC_PROTECTION_RANGE" schema="PODS" id="PODS_CATHODIC_PROTECTION_RANGE"
          comment="PODS.CATHODIC_PROTECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>select ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.CATHODIC_PROTECTION_TYPE_CL where
                    code=TYPE_CL) ТИП_СИСТЕМЫ_ЭХЗ, DESCRIPTION ОПИСАНИЕ, CATHODICALLY_PROTECTED_LF АКТУАЛЬНОСТЬ, (select
                    description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    EVENT_ID, EVENT_GUID, TYPE_CL, DESCRIPTION, CATHODICALLY_PROTECTED_LF, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((CATHODICALLY_PROTECTED_LF)::text , 'НЕИЗВЕСТНО') CATHODICALLY_PROTECTED_LF,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.CATHODIC_PROTECTION_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CHEMICAL_INJECTION_LOG" schema="PODS" id="PODS_CHEMICAL_INJECTION_LOG"
          comment="PODS.CHEMICAL_INJECTION_LOG">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ПЕРАЦИИ, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.CHEMICAL_TYPE_CL where code=CHEMICAL_TYPE_CL) ТИП_ХИМ_ВЕЩЕСТВА,
                    CHEMICAL_MEASUREMENT КОЛ_ХИМ_ВЕЩЕСТВА, (select description from pods.source_gcl where
                    code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE,
                    DESCRIPTION, CHEMICAL_TYPE_CL, CHEMICAL_MEASUREMENT, REF_CHEMICAL_INJECTOR_EVENT_ID,
                    REF_CHEM_INJECTOR_EVENT_GUID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((CHEMICAL_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') CHEMICAL_TYPE_CL, coalesce((CHEMICAL_MEASUREMENT)::text , 'НЕИЗВЕСТНО')
                    CHEMICAL_MEASUREMENT, coalesce((REF_CHEMICAL_INJECTOR_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_CHEMICAL_INJECTOR_EVENT_ID, coalesce((REF_CHEM_INJECTOR_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_CHEM_INJECTOR_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.CHEMICAL_INJECTION_LOG t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CHEMICAL_INJECTOR" schema="PODS" id="PODS_CHEMICAL_INJECTOR" comment="PODS.CHEMICAL_INJECTOR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,INJECTOR_NAME НАИМЕНОВАНИЕ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.CHEMICAL_INJECTOR_TYPE_CL where code=TYPE_CL) ТИП_НАГНЕТАТЕЛЯ, (select description from
                    pods.source_gcl where code=source_gcl) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, INJECTOR_NAME, DATE_INSTALLED, DESCRIPTION, TYPE_CL, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INJECTOR_NAME)::text ,
                    'НЕИЗВЕСТНО') INJECTOR_NAME, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.CHEMICAL_INJECTOR t) d WHERE
                    {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CLOSURE" schema="PODS" id="PODS_CLOSURE" comment="PODS.CLOSURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.CLOSURE_TYPE_CL where code=TYPE_CL)
                    ТИП_ЗАГЛУШКИ, (select description from PODS.CLOSURE_MANUFACTURER_CL where code=MANUFACTURER_CL)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where CODE::text=NOMINAL_DIAMETER_GCL) НОМИНАЛЬНЫЙ_ДИАМЕТР_ММ, (select
                    description from PODS.NOMINAL_WALL_THICKNESS_GCL where code::text=NOMINAL_WALL_THICKNESS_GCL)
                    ТОЛЩИНА_СТЕНКИ_ММ, (select description from PODS.CLOSURE_SPECIFICATION_CL where
                    code=SPECIFICATION_CL) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛЕНИЕ_КПА, (select description from PODS.CLOSURE_MATERIAL_CL where
                    code=MATERIAL_CL) МАТЕРИАЛ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select
                    description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL, MANUFACTURER_CL, DATE_MANUFACTURED,
                    NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING,
                    MILL_TEST_PRESSURE, MATERIAL_CL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.CLOSURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COLLAR" schema="PODS" id="PODS_COLLAR" comment="PODS.COLLAR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,COLLAR_ID ИДЕНТИФИКАТОР_МУФТЫ, (select description from
                    PODS.COLLAR_TYPE_CL where code=TYPE_CL) ТИП_ПЕРЕХОДНОЙ_МУФТЫ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,
                    PART_NUMBER НОМЕР_ПАРТИ, DESIGN_MIN_TEMPERATURE ТЕМПЕРАТУРА_МИНИМАЛЬНАЯ_ГРАДУС,
                    DESIGN_MAX_TEMPERATURE ТЕМПЕР_МАКС_ГРАДУС, (select description from PODS.COLLAR_MANUFACTURER_CL
                    where code=MANUFACTURER_CL) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.COATING_TYPE_SCL where code=COATING_TYPE_SCL) ТИП_ПОКРЫТИЯ, (select
                    description from PODS.NOMINAL_DIAMETER_GCL where code::text=INTERNAL_NOMINAL_DIAMETER_GCL)
                    НОМИН_ДИАМЕТР_НА_ВХОДЕ_ММ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    code::text=EXTERNAL_NOMINAL_DIAMETER_GCL) НОМИН_ДИАМЕТР_НА_ВЫХОДЕ_ММ, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where code::text=NOMINAL_WALL_THICKNESS_GCL) НОМИН_ТОЛЩИНА_СТЕНКИ_М,
                    (select description from PODS.COLLAR_MATERIAL_CL where code=MATERIAL_CL) МАТЕРИАЛ, (select
                    description from PODS.COLLAR_FITTING_TYPE_CL where code=FITTING_TYPE_CL) ТИП_УСТАНОВКИ, MAX_DEPTH
                    МАКС_ГЛУБИНА_М, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select description
                    from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, COLLAR_ID, TYPE_CL, SERIAL_NUMBER, HEAT_NUMBER, PART_NUMBER, DESIGN_MIN_TEMPERATURE,
                    DESIGN_MAX_TEMPERATURE, MANUFACTURER_CL, DATE_MANUFACTURED, COATING_TYPE_SCL, COATING_SUBTYPE_SCL,
                    INTERNAL_NOMINAL_DIAMETER_GCL, EXTERNAL_NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL,
                    MATERIAL_CL, FITTING_TYPE_CL, MAX_DEPTH, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((COLLAR_ID)::text ,
                    'НЕИЗВЕСТНО') COLLAR_ID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((HEAT_NUMBER)::text ,
                    'НЕИЗВЕСТНО') HEAT_NUMBER, coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER,
                    coalesce((DESIGN_MIN_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MIN_TEMPERATURE,
                    coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MAX_TEMPERATURE,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((COATING_TYPE_SCL)::text , 'НЕИЗВЕСТНО')
                    COATING_TYPE_SCL, coalesce((COATING_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_SUBTYPE_SCL,
                    coalesce((INTERNAL_NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') INTERNAL_NOMINAL_DIAMETER_GCL,
                    coalesce((EXTERNAL_NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') EXTERNAL_NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((FITTING_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') FITTING_TYPE_CL, coalesce((MAX_DEPTH)::text , 'НЕИЗВЕСТНО') MAX_DEPTH,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.COLLAR
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COLLET_CONNECTOR" schema="PODS" id="PODS_COLLET_CONNECTOR" comment="PODS.COLLET_CONNECTOR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,CONNECTOR_ID ИДЕНТИФИКАТОР_ЦАНГ_МУФТЫ, SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМЕР, PART_NUMBER НОМЕР_ПАРТИ, (select description from pods.COLLET_CONNECTOR_TYPE_CL
                    where code=TYPE_CL) ТИП_ЦАНГОВОЙ_МУФТЫ, (select description from pods.COLLET_CONNECTOR_MATERIAL_CL
                    where code=MATERIAL_CL) МАТЕРИАЛ, (select description from pods.COLLET_CONNECTOR_MFGR_CL where
                    code=MANUFACTURER_CL) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from pods.COLLET_SPECIFICATION_CL where code=SPECIFICATION_CL) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, NOMINAL_EXT_PRESSURE_RATING РАБ_ВНЕШНЕЕ_ДАВЛЕНИЕ_КПА,
                    NOMINAL_INT_PRESSURE_RATING РАБ_ВНУТ_ДАВЛЕНИЕ_КПА, DESIGN_MIN_TEMPERATURE МИН_РАБ_ТЕМП_ГРАДУС,
                    DESIGN_MAX_TEMPERATURE МАКС_РАБ_ТЕМП_ГРАДУС, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION
                    ОПИСАНИЕ, (select description from pods.source_gcl where code=source_gcl) ИСТОЧНИК_ИНФОРМАЦИИ,
                    COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, CONNECTOR_ID, SERIAL_NUMBER, PART_NUMBER, TYPE_CL,
                    MATERIAL_CL, MANUFACTURER_CL, DATE_MANUFACTURED, SPECIFICATION_CL, MILL_TEST_PRESSURE,
                    NOMINAL_EXT_PRESSURE_RATING, NOMINAL_INT_PRESSURE_RATING, DESIGN_MIN_TEMPERATURE,
                    DESIGN_MAX_TEMPERATURE, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM (SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((CONNECTOR_ID)::text ,
                    'НЕИЗВЕСТНО') CONNECTOR_ID, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER,
                    coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((MANUFACTURER_CL)::text
                    , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО')
                    DATE_MANUFACTURED, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((NOMINAL_EXT_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_EXT_PRESSURE_RATING,
                    coalesce((NOMINAL_INT_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_INT_PRESSURE_RATING,
                    coalesce((DESIGN_MIN_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MIN_TEMPERATURE,
                    coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MAX_TEMPERATURE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.COLLET_CONNECTOR t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CONCRETE_SLAB" schema="PODS" id="PODS_CONCRETE_SLAB" comment="PODS.CONCRETE_SLAB">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, NAME НАЗНАЧЕНИЕ, WEIGHT МАССА_КГ, THICKNESS ТОЛЩИНА_ММ,
                    DATE_INSTALLED ДАТА_МОНТАЖА, DESCRIPTION ОПИСАНИЕ, (select description from pods.source_gcl where
                    code=source_gcl) ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, NAME, WEIGHT,
                    THICKNESS, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM (SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((WEIGHT)::text ,
                    'НЕИЗВЕСТНО') WEIGHT, coalesce((THICKNESS)::text , 'НЕИЗВЕСТНО') THICKNESS,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.CONCRETE_SLAB t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COUNTY_BOUNDARY" schema="PODS" id="PODS_COUNTY_BOUNDARY" comment="PODS.COUNTY_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.COUNTY_CL where fips_code=FIPS_CL)
                    РЕГИОН_РАЙОН, (select description from PODS.STATE_PROVINCE_GCL where code=STATE_GCL) РЕГИОН_РАЙОН,
                    DESCRIPTION ОПИСАНИЕ, (select description from pods.source_gcl where code=source_gcl)
                    ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, STATE_GCL, FIPS_CL,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((STATE_GCL)::text , 'НЕИЗВЕСТНО') STATE_GCL, coalesce((FIPS_CL)::text ,
                    'НЕИЗВЕСТНО') FIPS_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.COUNTY_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COUPON_SITE" schema="PODS" id="PODS_COUPON_SITE" comment="PODS.COUPON_SITE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from pods.COUPON_SITE_TYPE_CL where
                    code=TYPE_CL) ТИП_МОНТАЖНОЙ_ПЛОЩАДКИ, DESCRIPTION ОПИСАНИЕ, NAME НАИМЕНОВАНИЕ, MODEL МОДЕЛЬ, (select
                    description from pods.DIRECTION_GCL where code=DIRECTION_GCL) НАПРАВЛЕНИЕ, BEARING_FROM_LINE
                    УГОЛ_К_ТРУБОПР_ГРАДУС, СМЕЩЕНИЕ_М, (select description from pods.BACK_FILL_MATERIAL_GCL where
                    code=BACK_FILL_MATERIAL_GCL) МАТЕРИАЛ_ЗАСЫПКИ, NUMBER_OF_COUPONS КОЛИЧЕСТВО_ПЛАСТИН, DATE_INSTALLED
                    ДАТА_МОНТАЖА, (select description from pods.COUPON_SITE_MANUFACTURER_CL where code=MANUFACTURER_CL)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from pods.source_gcl where code=source_gcl)
                    ИСТОЧНИК_ИНФОРМАЦИИ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, DESCRIPTION, NAME,
                    MODEL, DIRECTION_GCL, BEARING_FROM_LINE, СМЕЩЕНИЕ_М, BACK_FILL_MATERIAL_GCL, NUMBER_OF_COUPONS,
                    DATE_INSTALLED, REF_TEST_LEAD_EVENT_ID, REF_TEST_LEAD_EVENT_GUID, MANUFACTURER_CL, SOURCE_GCL,
                    "comments" FROM (SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((MODEL)::text , 'НЕИЗВЕСТНО')
                    MODEL, coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce((BEARING_FROM_LINE)::text , 'НЕИЗВЕСТНО') BEARING_FROM_LINE, coalesce(("offset")::text ,
                    'НЕИЗВЕСТНО') СМЕЩЕНИЕ_М, coalesce((BACK_FILL_MATERIAL_GCL)::text , 'НЕИЗВЕСТНО')
                    BACK_FILL_MATERIAL_GCL, coalesce((NUMBER_OF_COUPONS)::text , 'НЕИЗВЕСТНО') NUMBER_OF_COUPONS,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((REF_TEST_LEAD_EVENT_ID)::text , 'НЕИЗВЕСТНО') REF_TEST_LEAD_EVENT_ID,
                    coalesce((REF_TEST_LEAD_EVENT_GUID)::text , 'НЕИЗВЕСТНО') REF_TEST_LEAD_EVENT_GUID,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.COUPON_SITE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="CUSTOMER_INTERRUPT" schema="PODS" id="PODS_CUSTOMER_INTERRUPT" comment="PODS.CUSTOMER_INTERRUPT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,STATUS_CL СТАТУС_ОТКЛ_ПОТРЕБИТЕЛЯ, DETERMINATION_DATE
                    ДАТА_И_ВРЕМЯ_ОТКЛ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, STATUS_CL,
                    DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((STATUS_CL)::text , 'НЕИЗВЕСТНО') STATUS_CL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.CUSTOMER_INTERRUPT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DEPTH_OF_COVER" schema="PODS" id="PODS_DEPTH_OF_COVER" comment="PODS.DEPTH_OF_COVER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, MEASUREMENT ГЛУБИНА_ЗАЛОЖЕНИЯ_М, (select description from
                    PODS.DEPTH_MEASUREMENT_METHOD_CL where code= MEASUREMENT_METHOD_CL) МЕТОД_ИЗМЕРЕНИЯ,
                    DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, MEASUREMENT,
                    MEASUREMENT_METHOD_CL, DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MEASUREMENT)::text , 'НЕИЗВЕСТНО')
                    MEASUREMENT, coalesce((MEASUREMENT_METHOD_CL)::text , 'НЕИЗВЕСТНО') MEASUREMENT_METHOD_CL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.DEPTH_OF_COVER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DOT_CLASS" schema="PODS" id="PODS_DOT_CLASS" comment="PODS.DOT_CLASS">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, RATING_CL, DESIGN_CL, METHOD_CL, DETERMINATION_DATE
                    ДАТА_И_ВРЕМЯ_ОТКЛ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, RATING_CL,
                    DESIGN_CL, METHOD_CL, DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((RATING_CL)::text , 'НЕИЗВЕСТНО')
                    RATING_CL, coalesce((DESIGN_CL)::text , 'НЕИЗВЕСТНО') DESIGN_CL, coalesce((METHOD_CL)::text ,
                    'НЕИЗВЕСТНО') METHOD_CL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.DOT_CLASS t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DRAG_REDUCING_AGENT" schema="PODS" id="PODS_DRAG_REDUCING_AGENT" comment="PODS.DRAG_REDUCING_AGENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DRA_SKID_ID ИДЕНТИФИКАТОР_УЗЛА, (select description from
                    PODS.DRAG_REDUCING_AGENT_MFGR_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,(select
                    description from PODS.DRAG_REDUCING_AGENT_MATL_CL where MATERIAL_CL=code) МАТЕРИАЛ,INJECTION_RATE
                    НОРМА_РАСХОДА_АФП, (select description from PODS.UNIT_OF_MEASURE_GCL where INJECTION_RATE_OUOM=code)
                    ЕД_ИЗМ_НОРМЫ_РАСХОДА,TANK_VOLUME ОБЪЁМ_ЦИСТЕРНЫ_М3, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, DESCRIPTION ОПИСАНИЕ,ID, EVENT_ID,
                    EVENT_GUID, DRA_SKID_ID, MANUFACTURER_CL, MATERIAL_CL, INJECTION_RATE, INJECTION_RATE_OUOM,
                    TANK_VOLUME, SOURCE_GCL, COMMENTS, DESCRIPTION FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((DRA_SKID_ID)::text , 'НЕИЗВЕСТНО') DRA_SKID_ID,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((MATERIAL_CL)::text ,
                    'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((INJECTION_RATE)::text , 'НЕИЗВЕСТНО') INJECTION_RATE,
                    coalesce((INJECTION_RATE_OUOM)::text , 'НЕИЗВЕСТНО') INJECTION_RATE_OUOM,
                    coalesce((TANK_VOLUME)::text , 'НЕИЗВЕСТНО') TANK_VOLUME, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments",
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.DRAG_REDUCING_AGENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DRIP" schema="PODS" id="PODS_DRIP" comment="PODS.DRIP">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, NAME НАИМЕНОВАНИЕ, (select description from
                    PODS.DRIP_RISER_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,DATE_MANUFACTURED
                    ДАТА_ИЗГОТОВЛЕНИЯ, PURCHASE_ORDER_NUMBER ДОГОВОР_НА_ПОСТАВКУ, (select description from
                    PODS.PIPE_MILL_LOCATION_GCL where PIPE_MILL_LOCATION_GCL=code)
                    МЕСТОПОЛОЖЕНИЕ_ТРУБ_ПРОИЗВ,MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select description from
                    PODS.DRIP_RISER_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select description from
                    PODS.PIPE_SPECIFICATION_GCL where PIPE_SPECIFICATION_GCL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,(select
                    description from PODS.SMYS_GCL where SMYS_GCL=code::text) ПРЕДЕЛ_ТЕКУЧ_СТ_Н_ММ2, (select description
                    from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select
                    description from PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ, (select description from PODS.PIPE_LONG_SEAM_GCL where PIPE_LONG_SEAM_GCL=code)
                    ТИП_ПРОД_СВАР_ШВА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, NAME, MANUFACTURER_CL, DATE_MANUFACTURED, PURCHASE_ORDER_NUMBER, PIPE_MILL_LOCATION_GCL,
                    MILL_TEST_PRESSURE, MATERIAL_CL, PIPE_SPECIFICATION_GCL, SMYS_GCL, NOMINAL_DIAMETER_GCL,
                    NOMINAL_WALL_THICKNESS_GCL, PIPE_LONG_SEAM_GCL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text ,
                    'НЕИЗВЕСТНО') "name", coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((PURCHASE_ORDER_NUMBER)::text , 'НЕИЗВЕСТНО') PURCHASE_ORDER_NUMBER,
                    coalesce((PIPE_MILL_LOCATION_GCL)::text , 'НЕИЗВЕСТНО') PIPE_MILL_LOCATION_GCL,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((PIPE_SPECIFICATION_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_SPECIFICATION_GCL, coalesce((SMYS_GCL)::text , 'НЕИЗВЕСТНО') SMYS_GCL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((PIPE_LONG_SEAM_GCL)::text , 'НЕИЗВЕСТНО') PIPE_LONG_SEAM_GCL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.DRIP t)
                    d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DRIP_RISER" schema="PODS" id="PODS_DRIP_RISER" comment="PODS.DRIP_RISER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, NAME НАИМЕНОВАНИЕ, (select description
                    from PODS.DRIP_RISER_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, PURCHASE_ORDER_NUMBER ДОГОВОР_НА_ПОСТАВКУ, (select description
                    from PODS.PIPE_MILL_LOCATION_GCL where PIPE_MILL_LOCATION_GCL=code) МЕСТОПОЛ_ТРУБ_ПРОИЗВОДСТВА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select description from PODS.DRIP_RISER_MATERIAL_CL where
                    MATERIAL_CL=code) МАТЕРИАЛ, (select description from PODS.PIPE_SPECIFICATION_GCL where
                    PIPE_SPECIFICATION_GCL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select description from PODS.SMYS_GCL where
                    SMYS_GCL=code::text) ПРЕДЕЛ_ТЕКУЧ_СТАЛИ_Н_ММ2, (select description from PODS.NOMINAL_DIAMETER_GCL
                    where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(select description from PODS.PIPE_LONG_SEAM_GCL where PIPE_LONG_SEAM_GCL=code)
                    ТИП_ПРОД_СВАРНОГО_ШВА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,ID, DESCRIPTION, SOURCE_GCL, COMMENTS,
                    EVENT_ID, EVENT_GUID, NAME, MANUFACTURER_CL, DATE_MANUFACTURED, PURCHASE_ORDER_NUMBER,
                    PIPE_MILL_LOCATION_GCL, MILL_TEST_PRESSURE, MATERIAL_CL, PIPE_SPECIFICATION_GCL, SMYS_GCL,
                    NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL, PIPE_LONG_SEAM_GCL, DATE_INSTALLED FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name",
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((PURCHASE_ORDER_NUMBER)::text , 'НЕИЗВЕСТНО')
                    PURCHASE_ORDER_NUMBER, coalesce((PIPE_MILL_LOCATION_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_MILL_LOCATION_GCL, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((PIPE_SPECIFICATION_GCL)::text ,
                    'НЕИЗВЕСТНО') PIPE_SPECIFICATION_GCL, coalesce((SMYS_GCL)::text , 'НЕИЗВЕСТНО') SMYS_GCL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((PIPE_LONG_SEAM_GCL)::text , 'НЕИЗВЕСТНО') PIPE_LONG_SEAM_GCL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.DRIP_RISER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ELBOW" schema="PODS" id="PODS_ELBOW" comment="PODS.ELBOW">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_INLET_GCL=code::text)НОМИНАЛ_ДИАМЕТР_НА_ВХОДЕ, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_OUTLET_GCL=code::text)НОМИНАЛ_ДИАМЕТР_НА_ВЫХОДЕ,
                    (select description from PODS.NOMINAL_WALL_THICKNESS_GCL where
                    NOMINAL_WALL_THICKNESS_GCL=code::text) ТОЛЩИНА_СТЕНКИ_ММ,ANGLE УГОЛ_ОТВОДА_ГРАДУС, RADIUS
                    РАДИУС_ГИБА_УСЛ_ДИАМЕТР, (select description from PODS.ELBOW_MANUFACTURER_CL where
                    MANUFACTURER_CL=code)КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description
                    from PODS.ELBOW_MATERIAL_CL where MATERIAL_CL=code)МАТЕРИАЛ, (select description from
                    PODS.ELBOW_SPECIFICATION_CL where SPECIFICATION_CL=code)ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID,
                    NOMINAL_DIAMETER_INLET_GCL, NOMINAL_DIAMETER_OUTLET_GCL, NOMINAL_WALL_THICKNESS_GCL, ANGLE, RADIUS,
                    MANUFACTURER_CL, DATE_MANUFACTURED, MATERIAL_CL, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING,
                    MILL_TEST_PRESSURE, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NOMINAL_DIAMETER_INLET_GCL)::text
                    , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_INLET_GCL, coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_DIAMETER_OUTLET_GCL, coalesce((NOMINAL_WALL_THICKNESS_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL, coalesce((ANGLE)::text , 'НЕИЗВЕСТНО') ANGLE,
                    coalesce((RADIUS)::text , 'НЕИЗВЕСТНО') RADIUS, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((SPECIFICATION_CL)::text ,
                    'НЕИЗВЕСТНО') SPECIFICATION_CL, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_PRESSURE_RATING, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.ELBOW
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="EXPOSURE" schema="PODS" id="PODS_EXPOSURE" comment="PODS.EXPOSURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.EXPOSURE_TYPE_CL where
                    TYPE_CL=code) ТИП_ВОЗД_ПЕРЕХОДА, (select description from PODS.EXPOSURE_SUPPORT_TYPE_CL where
                    SUPPORT_TYPE_CL=code) ТИП_ПОДДЕР_СООРУЖЕНИЯ, INTENTIONAL_LF СОЗДАН_ПРЕДНАМ, ORIGINAL_CONSTRUCTION_LF
                    ЗАПРОЕКТИР_ПЕРЕХОД, ONSHORE_LF СУХОПУТНЫЙ_ПЕРЕХОД, HEIGHT ВЫСОТА_М, DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, TYPE_CL, SUPPORT_TYPE_CL, INTENTIONAL_LF, ORIGINAL_CONSTRUCTION_LF,
                    ONSHORE_LF, HEIGHT, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((SUPPORT_TYPE_CL)::text , 'НЕИЗВЕСТНО') SUPPORT_TYPE_CL, coalesce((INTENTIONAL_LF)::text ,
                    'НЕИЗВЕСТНО') INTENTIONAL_LF, coalesce((ORIGINAL_CONSTRUCTION_LF)::text , 'НЕИЗВЕСТНО')
                    ORIGINAL_CONSTRUCTION_LF, coalesce((ONSHORE_LF)::text , 'НЕИЗВЕСТНО') ONSHORE_LF,
                    coalesce((HEIGHT)::text , 'НЕИЗВЕСТНО') HEIGHT, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.EXPOSURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="EXTERNAL_COATING" schema="PODS" id="PODS_EXTERNAL_COATING" comment="PODS.EXTERNAL_COATING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.COATING_TYPE_SCL where
                    TYPE_SCL=code) ТИП_ПОКРЫТИЯ, (select description from PODS.COATING_MATERIAL_GCL where
                    COATING_MATERIAL_GCL=code) КОНСТРУКЦИЯ_ПОКРЫТИЯ, (select description from
                    PODS.COATING_MANUFACTURER_GCL where COATING_MANUFACTURER_GCL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    PRODUCT_NAME НАИМЕН_ПОКРЫТИЯ, (select description from PODS.COATING_APPLICATOR_GCL where
                    COATING_APPLICATOR_GCL=code) КОМП_ПОДР_ПО_НАНЕС_ПОКР, (select description from
                    PODS.WHERE_COATING_APPLIED_GCL where WHERE_COATING_APPLIED_GCL=code) УСЛОВИЯ_НАНЕСЕНИЯ_ПОКР,
                    DATE_APPLIED ДАТА_НАНЕСЕНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_SCL,
                    SUBTYPE_SCL, COATING_MATERIAL_GCL, COATING_MANUFACTURER_GCL, PRODUCT_NAME, COATING_APPLICATOR_GCL,
                    WHERE_COATING_APPLIED_GCL, DATE_APPLIED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_SCL)::text , 'НЕИЗВЕСТНО')
                    TYPE_SCL, coalesce((SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') SUBTYPE_SCL,
                    coalesce((COATING_MATERIAL_GCL)::text , 'НЕИЗВЕСТНО') COATING_MATERIAL_GCL,
                    coalesce((COATING_MANUFACTURER_GCL)::text , 'НЕИЗВЕСТНО') COATING_MANUFACTURER_GCL,
                    coalesce((PRODUCT_NAME)::text , 'НЕИЗВЕСТНО') PRODUCT_NAME, coalesce((COATING_APPLICATOR_GCL)::text
                    , 'НЕИЗВЕСТНО') COATING_APPLICATOR_GCL, coalesce((WHERE_COATING_APPLIED_GCL)::text , 'НЕИЗВЕСТНО')
                    WHERE_COATING_APPLIED_GCL, coalesce((DATE_APPLIED)::text , 'НЕИЗВЕСТНО') DATE_APPLIED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.EXTERNAL_COATING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="EXTRUSION" schema="PODS" id="PODS_EXTRUSION" comment="PODS.EXTRUSION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.EXTRUSION_TYPE_CL where
                    TYPE_CL=code) ТИП_РАСПРЕДЕЛИТЕЛЯ, (select description from PODS.EXTRUSION_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_INLET_GCL=code::text)
                    НОМИН_ДИАМ_НА_ВХОДЕ_ММ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_OUTLET_GCL=code::text) НОМИН_ДИАМ_НА_ВЫХОДЕ_ММ, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_IN_GCL=code::text)
                    НОМИН_ТОЛЩ_СТ_НА_ВХОДЕ_ММ, (select description from PODS.NOMINAL_WALL_THICKNESS_GCL where
                    NOMINAL_WALL_THICK_OUT_GCL=code::text) НОМИН_ТОЛЩ_СТ_НА_ВЫХОДЕ_ММ,(select description from
                    PODS.EXTRUSION_SPECIFICATION_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select
                    description from PODS.EXTRUSION_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    MANUFACTURER_CL, DATE_MANUFACTURED, NOMINAL_DIAMETER_INLET_GCL, NOMINAL_DIAMETER_OUTLET_GCL,
                    NOMINAL_WALL_THICKNESS_IN_GCL, NOMINAL_WALL_THICK_OUT_GCL, SPECIFICATION_CL,
                    NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE, MATERIAL_CL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((NOMINAL_DIAMETER_INLET_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_INLET_GCL,
                    coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_OUTLET_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_IN_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_IN_GCL,
                    coalesce((NOMINAL_WALL_THICK_OUT_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICK_OUT_GCL,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.EXTRUSION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="EXTRUSION_OPENING" schema="PODS" id="PODS_EXTRUSION_OPENING" comment="PODS.EXTRUSION_OPENING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,SERIES_BRANCH НАЧ_ПИКЕТ_ПОДСОЕДИНЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,
                    DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, NOMINAL_DIAMETER_GCL,
                    NOMINAL_WALL_THICKNESS_GCL, SERIES_BRANCH, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((SERIES_BRANCH)::text , 'НЕИЗВЕСТНО') SERIES_BRANCH, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.EXTRUSION_OPENING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FABRICATION" schema="PODS" id="PODS_FABRICATION" comment="PODS.FABRICATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, FABRICATOR_NAME КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from
                    PODS.FABRICATION_LOCATION_CL where LOCATION_CL=code) МЕСТОПОЛОЖЕНИЕ_ПРОИЗВОДСТВА, FABRICATION_DATE
                    ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, FABRICATOR_NAME, LOCATION_CL, FABRICATION_DATE, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((FABRICATOR_NAME)::text , 'НЕИЗВЕСТНО') FABRICATOR_NAME, coalesce((LOCATION_CL)::text ,
                    'НЕИЗВЕСТНО') LOCATION_CL, coalesce((FABRICATION_DATE)::text , 'НЕИЗВЕСТНО') FABRICATION_DATE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.FABRICATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FACILITY_RANKING" schema="PODS" id="PODS_FACILITY_RANKING" comment="PODS.FACILITY_RANKING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.RANKING_PURPOSE_CL where
                    PURPOSE_CL=code) КРИТЕРИЙ_РАНЖИРОВАНИЯ, RANKING РАНГ_ПО_УРОВНЮ_РИСКА, (select description from
                    PODS.DETERMINATION_METHOD_GCL where DETERMINATION_METHOD_GCL=code) МЕТОД_ОПРЕДЕЛЕНИЯ,
                    DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, PURPOSE_CL,
                    RANKING, DETERMINATION_METHOD_GCL, DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((PURPOSE_CL)::text ,
                    'НЕИЗВЕСТНО') PURPOSE_CL, coalesce((RANKING)::text , 'НЕИЗВЕСТНО') RANKING,
                    coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.FACILITY_RANKING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FACILITY_RATING" schema="PODS" id="PODS_FACILITY_RATING" comment="PODS.FACILITY_RATING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.RATING_PURPOSE_CL where
                    PURPOSE_CL=code)ВИД_ОПАСНОСТИ, RATING ЗНАЧ_РЕЙТИНГА_ОПАСНОСТИ, (select description from
                    PODS.DETERMINATION_METHOD_GCL where DETERMINATION_METHOD_GCL=code)МЕТОД_ОПРЕДЕЛЕНИЯ,
                    DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, DESCRIPTION ОПИСАНИЕ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, PURPOSE_CL, RATING, DETERMINATION_METHOD_GCL, DETERMINATION_DATE, DESCRIPTION,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((PURPOSE_CL)::text , 'НЕИЗВЕСТНО') PURPOSE_CL, coalesce((RATING)::text , 'НЕИЗВЕСТНО')
                    RATING, coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.FACILITY_RATING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FACILITY_RATING_VARIANCE" schema="PODS" id="PODS_FACILITY_RATING_VARIANCE"
          comment="PODS.FACILITY_RATING_VARIANCE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, VERIFIED_BY
                    КЕМ_СОГЛАСОВАНО, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, UPRATED_PRESSURE РАЗРЕШЁННОЕ_ДАВЛЕНИЕ,
                    (select description from PODS.UPRATING_DETERM_METHOD_CL where DETERMINATION_METHOD_CL=code)
                    МЕТОД_ОПРЕДЕЛЕНИЯ,ID, DETERMINATION_DATE, VERIFIED_BY, DESCRIPTION, SOURCE_GCL, COMMENTS, EVENT_ID,
                    EVENT_GUID, UPRATED_PRESSURE, DETERMINATION_METHOD_CL FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((VERIFIED_BY)::text , 'НЕИЗВЕСТНО') VERIFIED_BY, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((UPRATED_PRESSURE)::text
                    , 'НЕИЗВЕСТНО') UPRATED_PRESSURE, coalesce((DETERMINATION_METHOD_CL)::text , 'НЕИЗВЕСТНО')
                    DETERMINATION_METHOD_CL FROM (SELECT EVENT_ID ID, t.* FROM PODS.FACILITY_RATING_VARIANCE t) d WHERE
                    {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FAIRING" schema="PODS" id="PODS_FAIRING" comment="PODS.FAIRING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.FAIRING_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБТЕКАТЕЛЯ, (select description from PODS.COATING_TYPE_SCL where
                    COATING_TYPE_SCL=code) ТИП_ПОКРЫТИЯ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР, PART_NUMBER НОМЕР_ПАРТИИ,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, (select description from PODS.FAIRING_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DESCRIPTION
                    ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL, COATING_TYPE_SCL, COATING_SUBTYPE_SCL, SERIAL_NUMBER,
                    PART_NUMBER, DATE_INSTALLED, MANUFACTURER_CL, DATE_MANUFACTURED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((COATING_TYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_TYPE_SCL,
                    coalesce((COATING_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_SUBTYPE_SCL,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((PART_NUMBER)::text ,
                    'НЕИЗВЕСТНО') PART_NUMBER, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.FAIRING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FLANGE" schema="PODS" id="PODS_FLANGE" comment="PODS.FLANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, TYPE_CL, (select description from PODS.NOMINAL_DIAMETER_GCL
                    where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, MANUFACTURER_CL, DATE_MANUFACTURED
                    ДАТА_ИЗГОТОВЛЕНИЯ, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, MATERIAL_CL, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,
                    DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL, NOMINAL_DIAMETER_GCL,
                    MANUFACTURER_CL, DATE_MANUFACTURED, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE,
                    MATERIAL_CL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО')
                    SPECIFICATION_CL, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.FLANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FLEXIBLE_JOINT" schema="PODS" id="PODS_FLEXIBLE_JOINT" comment="PODS.FLEXIBLE_JOINT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, FLEXIBLE_JOINT_ID ИДЕНТИФ_ГИБКОЙ_ВСТАВКИ, SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМЕР, PART_NUMBER НОМЕР_ПАРТИИ, (select description from PODS.FLEXIBLE_JOINT_BODY_MATL_CL
                    where BODY_MATERIAL_CL=code) ОСНОВНОЙ_МАТЕРИАЛ, (select description from
                    PODS.FLEXIBLE_JOINT_EXT_MATL_CL where EXTENSION_MATERIAL_CL=code) МАТЕРИАЛ_ОКОНЕЧНЫХ_НАСАДОК,
                    (select description from PODS.FLEXIBLE_JOINT_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР,
                    NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, DESIGN_MIN_TEMPERATURE МИН_РАБ_ТЕМП_ГРАДУС,
                    DESIGN_MAX_TEMPERATURE МАКС_РАБ_ТЕМП_ГРАДУС, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select
                    description from PODS.FLEXIBLE_JOINT_CONN_TYPE_CL where CONNECTION_TYPE_CL=code)
                    ТИП_ПРИСОЕД_ГИБКОЙ_ВСТАВКИ, NOMINAL_MAX_ROTATION_ANGLE МАКС_УГОЛ_ВРАЩ_ГРАДУС, DESCRIPTION
                    ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, FLEXIBLE_JOINT_ID, SERIAL_NUMBER, PART_NUMBER,
                    BODY_MATERIAL_CL, EXTENSION_MATERIAL_CL, MANUFACTURER_CL, DATE_MANUFACTURED, NOMINAL_DIAMETER_GCL,
                    NOMINAL_PRESSURE_RATING, DESIGN_MIN_TEMPERATURE, DESIGN_MAX_TEMPERATURE, MILL_TEST_PRESSURE,
                    CONNECTION_TYPE_CL, NOMINAL_MAX_ROTATION_ANGLE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((FLEXIBLE_JOINT_ID)::text ,
                    'НЕИЗВЕСТНО') FLEXIBLE_JOINT_ID, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER,
                    coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((BODY_MATERIAL_CL)::text ,
                    'НЕИЗВЕСТНО') BODY_MATERIAL_CL, coalesce((EXTENSION_MATERIAL_CL)::text , 'НЕИЗВЕСТНО')
                    EXTENSION_MATERIAL_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((DESIGN_MIN_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MIN_TEMPERATURE,
                    coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MAX_TEMPERATURE,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((CONNECTION_TYPE_CL)::text , 'НЕИЗВЕСТНО') CONNECTION_TYPE_CL,
                    coalesce((NOMINAL_MAX_ROTATION_ANGLE)::text , 'НЕИЗВЕСТНО') NOMINAL_MAX_ROTATION_ANGLE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.FLEXIBLE_JOINT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FLOW_DIRECTION_RANGE" schema="PODS" id="PODS_FLOW_DIRECTION_RANGE" comment="PODS.FLOW_DIRECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.FLOW_DIRECTION_TYPE_CL where
                    TYPE_CL=code) НАПРАВЛЕНИЕ, DESCRIPTION ОПИСАНИЕ,ODORANT_GRANDFATHER_LF
                    ОСВОБ_УЧАСТ_ОТ_ПРЕД_ОДОРИЗАЦИИ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL, DESCRIPTION,
                    ODORANT_GRANDFATHER_LF, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((ODORANT_GRANDFATHER_LF)::text , 'НЕИЗВЕСТНО')
                    ODORANT_GRANDFATHER_LF, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.FLOW_DIRECTION_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FLOW_MEASUREMENT" schema="PODS" id="PODS_FLOW_MEASUREMENT" comment="PODS.FLOW_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, FLOW_MEASUREMENT ЗНАЧЕНИЕ, DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, FLOW_MEASUREMENT, UNIT_OF_MEASURE_GCL, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((FLOW_MEASUREMENT)::text
                    , 'НЕИЗВЕСТНО') FLOW_MEASUREMENT, coalesce((UNIT_OF_MEASURE_GCL)::text , 'НЕИЗВЕСТНО')
                    UNIT_OF_MEASURE_GCL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.FLOW_MEASUREMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="GRANDFATHER_PRESSURE" schema="PODS" id="PODS_GRANDFATHER_PRESSURE" comment="PODS.GRANDFATHER_PRESSURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, VERIFIED_BY КТО_РАЗРЕШИЛ, DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,
                    PRESSURE_RATING PRESSURE_RATING,HIGH_PRESSURE_DATE ДАТА_ПЕРЕХОДА, DETERMINATION_DATE
                    ДАТА_И_ВРЕМЯ_ОТКЛ, ID, VERIFIED_BY, DESCRIPTION, SOURCE_GCL, COMMENTS, EVENT_ID, EVENT_GUID,
                    PRESSURE_RATING, HIGH_PRESSURE_DATE, DETERMINATION_DATE FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((VERIFIED_BY)::text , 'НЕИЗВЕСТНО') VERIFIED_BY,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments",
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') PRESSURE_RATING,
                    coalesce((HIGH_PRESSURE_DATE)::text , 'НЕИЗВЕСТНО') HIGH_PRESSURE_DATE,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE FROM (SELECT EVENT_ID ID, t.*
                    FROM PODS.GRANDFATHER_PRESSURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="GROUND_BED" schema="PODS" id="PODS_GROUND_BED" comment="PODS.GROUND_BED">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, NAME НАИМЕНОВАНИЕ, (select description from
                    PODS.GROUND_BED_INSTALLATION_CL where INSTALLATION_CL=code) ТИП_УСТАНОВКИ, (select description from
                    PODS.GROUND_BED_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, ANODES_QUANTITY КОЛИЧЕСТВО_АНОДОВ,
                    DEPTH_OF_COVER ГЛУБИНА_ЗАЛОЖЕНИЯ_М, DESCRIPTION ОПИСАНИЕ,(select description from
                    PODS.GROUND_BED_TYPE_CL where TYPE_CL=code) ТИП_ЗАЗЕМЛЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,
                    ANODE_SPACING РАССТ_МЕЖДУ_АНОДАМИ_М, (select description from PODS.CABLE_INSULATION_TYPE_GCL where
                    POS_CABLE_INSULATION_TYPE_GCL=code) ТИП_ИЗОЛ_КАБЕЛЯ, (select description from PODS.CABLE_GAUGE_GCL
                    where POS_CABLE_GAUGE_GCL=code) ТИПОРАЗМЕР_КАБЕЛЯ, (select description from
                    PODS.CABLE_INSULATION_COLOR_GCL where POS_CABLE_INSULATION_COLOR_GCL=code) ЦВЕТ_ИЗОЛЯЦИИ_КАБЕЛЯ,
                    (select description from PODS.BACK_FILL_MATERIAL_GCL where BACK_FILL_MATERIAL_GCL=code)
                    МАТЕРИАЛ_ЗАСЫПКИ, RECTIFIER_ENCLOSURE_ID ПЕРЕЙТИ_К_КОРПУСУ_УКЗ_УДЗ, HORIZONTAL_LF
                    ГОРИЗОНТАЛЬНОЕ_РАСПОЛОЖЕНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, NAME, INSTALLATION_CL, MATERIAL_CL,
                    ANODES_QUANTITY, DEPTH_OF_COVER, DESCRIPTION, TYPE_CL, DATE_INSTALLED, ANODE_SPACING,
                    POS_CABLE_INSULATION_TYPE_GCL, POS_CABLE_GAUGE_GCL, POS_CABLE_INSULATION_COLOR_GCL,
                    BACK_FILL_MATERIAL_GCL, RECTIFIER_ENCLOSURE_ID, HORIZONTAL_LF, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text , 'НЕИЗВЕСТНО')
                    "name", coalesce((INSTALLATION_CL)::text , 'НЕИЗВЕСТНО') INSTALLATION_CL,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((ANODES_QUANTITY)::text ,
                    'НЕИЗВЕСТНО') ANODES_QUANTITY, coalesce((DEPTH_OF_COVER)::text , 'НЕИЗВЕСТНО') DEPTH_OF_COVER,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((ANODE_SPACING)::text , 'НЕИЗВЕСТНО') ANODE_SPACING,
                    coalesce((POS_CABLE_INSULATION_TYPE_GCL)::text , 'НЕИЗВЕСТНО') POS_CABLE_INSULATION_TYPE_GCL,
                    coalesce((POS_CABLE_GAUGE_GCL)::text , 'НЕИЗВЕСТНО') POS_CABLE_GAUGE_GCL,
                    coalesce((POS_CABLE_INSULATION_COLOR_GCL)::text , 'НЕИЗВЕСТНО') POS_CABLE_INSULATION_COLOR_GCL,
                    coalesce((BACK_FILL_MATERIAL_GCL)::text , 'НЕИЗВЕСТНО') BACK_FILL_MATERIAL_GCL,
                    coalesce((RECTIFIER_ENCLOSURE_ID)::text , 'НЕИЗВЕСТНО') RECTIFIER_ENCLOSURE_ID,
                    coalesce((HORIZONTAL_LF)::text , 'НЕИЗВЕСТНО') HORIZONTAL_LF, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.GROUND_BED t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="HCA_CA_SEGMENT" schema="PODS" id="PODS_HCA_CA_SEGMENT" comment="PODS.HCA_CA_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.HCA_INTERSECTION_METHOD_CL where
                    INTERSECTION_METHOD_CL=code) СПОСОБ_ПЕРЕСЕЧЕНИЯ, RUN_ID НОМЕР_ПРОХОДА, (select description from
                    PODS.HCA_TYPE_CL where TYPE_CL=code) ТИП_ПОСЛЕДСТВИЯ, DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ,
                    DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, INTERSECTION_METHOD_CL, RUN_ID,
                    TYPE_CL, DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INTERSECTION_METHOD_CL)::text , 'НЕИЗВЕСТНО')
                    INTERSECTION_METHOD_CL, coalesce((RUN_ID)::text , 'НЕИЗВЕСТНО') RUN_ID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.HCA_CA_SEGMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="HORIZONTAL_DIRECTIONAL_DRILL" schema="PODS" id="PODS_HORIZONTAL_DIRECTIONAL_DRILL"
          comment="PODS.HORIZONTAL_DIRECTIONAL_DRILL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, ENTRY_ANGLE УГОЛ_ВХОДА_ГРАДУС, EXIT_ANGLE УГОЛ_ВЫХОДА_ГРАДУС,
                    MAX_DEPTH_POINT НАИБОЛЬШЕЕ_ЗАГЛУБЛЕНИЕ_М, (select description from
                    PODS.HORIZ_DIR_DRILL_CONTRACTOR_CL where DRILL_CONTRACTOR_CL=code)КОМПАНИЯ_ПОДРЯДЧИК, RADIUS
                    РАДИУС_КРИВИЗНЫ_СКВАЖИНЫ_М, LENGTH_OF_BORE ДЛИНА_ГОРИЗ_УЧАСТКА_М, DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, ENTRY_ANGLE, EXIT_ANGLE, MAX_DEPTH_POINT, DRILL_CONTRACTOR_CL, RADIUS,
                    LENGTH_OF_BORE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((ENTRY_ANGLE)::text , 'НЕИЗВЕСТНО') ENTRY_ANGLE, coalesce((EXIT_ANGLE)::text ,
                    'НЕИЗВЕСТНО') EXIT_ANGLE, coalesce((MAX_DEPTH_POINT)::text , 'НЕИЗВЕСТНО') MAX_DEPTH_POINT,
                    coalesce((DRILL_CONTRACTOR_CL)::text , 'НЕИЗВЕСТНО') DRILL_CONTRACTOR_CL, coalesce((RADIUS)::text ,
                    'НЕИЗВЕСТНО') RADIUS, coalesce((LENGTH_OF_BORE)::text , 'НЕИЗВЕСТНО') LENGTH_OF_BORE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.HORIZONTAL_DIRECTIONAL_DRILL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ILI_CLUSTER" schema="PODS" id="PODS_ILI_CLUSTER" comment="PODS.ILI_CLUSTER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <param name="SYS_OBJ_ID" type="Int64" direction="Input">
                </param>
                <query>
                    WITH report
                    AS (SELECT i.*
                    ,r.event_id event_id
                    ,s.route_id
                    ,s.station_begin station_beg
                    ,s.station_end station_end
                    ,c.description company_name
                    ,CASE WHEN l.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rtc.description
                    END route_type
                    ,CASE
                    WHEN l.line_id = 0
                    THEN r.description
                    ELSE l.description
                    END line_name
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range r
                    ON r.ili_inspection_id = i.ili_inspection_id
                    JOIN pods.event_range e
                    ON e.event_id = r.event_id
                    JOIN pods.station_point sp
                    ON sp.station_id = e.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route rt
                    ON sp.route_id = rt.route_id
                    JOIN pods.line l
                    ON sp.line_id = l.line_id
                    JOIN pods.route_type_cl rtc
                    ON rt.type_cl = rtc.code
                    JOIN pods.ili_tool_vendor_cl c
                    ON c.code = i.tool_vendor_cl
                    WHERE r.ili_inspection_id = (SELECT ili_inspection_id
                    FROM pods.ili_cluster
                    WHERE ili_cluster_id = :SYS_OBJ_ID)),
                    defect
                    AS (SELECT d.*
                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)
                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID),
                    route_dia_w_thick AS (SELECT spb.route_id,d.description nominal_diameter_gcl,t.description
                    nominal_wall_thickness_gcl,d.code diameter
                    FROM pods.event_range erPS
                    JOIN pods.pipe_segment ps
                    ON erPS.event_id = ps.event_id
                    JOIN pods.station_point spb
                    ON erPS.station_id_begin = spb.station_id
                    JOIN pods.nominal_diameter_gcl d
                    ON ps.nominal_diameter_gcl = d.code
                    JOIN pods.nominal_wall_thickness_gcl t
                    ON ps.nominal_wall_thickness_gcl = t.code
                    WHERE erPS.feature_id = 'PIPE_SEGMENT'
                    AND erPS.CURRENT_INDICATOR_LF = 'Y')
                    SELECT LINE_NAME
                    ,COMPANY_NAME
                    ,BEGIN_DATE
                    ,coalesce ( (DESCRIPTION), 'НЕИЗВЕСТНО') DESCRIPTION
                    ,CALIBRATED_MEASURE
                    ,WELD_NUMBER
                    ,MARKER_DISTANCE_LEFT
                    ,MARKER_DISTANCE_RIGHT
                    ,MARKER_NAME_LEFT
                    ,MARKER_NAME_RIGHT
                    ,DEFECT_PIPE_LENGTH
                    ,DEFECT_PIPE_LENGTH_LEFT_1
                    ,DEFECT_PIPE_LENGTH_LEFT_2
                    ,DEFECT_PIPE_LENGTH_LEFT_3
                    ,DEFECT_PIPE_LENGTH_LEFT_4
                    ,DEFECT_PIPE_LENGTH_LEFT_5
                    ,DEFECT_PIPE_LENGTH_RIGHT_1
                    ,DEFECT_PIPE_LENGTH_RIGHT_2
                    ,DEFECT_PIPE_LENGTH_RIGHT_3
                    ,DEFECT_PIPE_LENGTH_RIGHT_4
                    ,DEFECT_PIPE_LENGTH_RIGHT_5
                    ,X_COORD
                    ,Y_COORD
                    ,Z_COORD
                    ,US_WELD_DISTANCE
                    ,DS_WELD_DISTANCE
                    ,DEPTH_OF_COVER
                    ,coalesce ( (EFFECTIVE_LENGTH)::text, 'НЕИЗВЕСТНО') LENGTH
                    ,coalesce ( (EFFECTIVE_WIDTH)::text, 'НЕИЗВЕСТНО') WIDTH
                    ,coalesce ( (AVG_ORIENTATION)::text, 'НЕИЗВЕСТНО') ORIENTATION_DEG
                    ,NOMINAL_DIAMETER_GCL
                    ,NOMINAL_WALL_THICKNESS
                    ,coalesce ( (AVG_DEPTH)::text, 'НЕИЗВЕСТНО') AVERAGE_DEPTH
                    ,CASE DESCRIPTION
                    WHEN 'РЕМОНТНОЕ МЕСТО' THEN 1
                    WHEN 'ГРУППА ПОВЕРХНОСТНЫХ ДЕФЕКТОВ' THEN 2
                    END ANOMALY_GROUP
                    ,1 ANOMALY_OKD_KRN
                    ,coalesce ( (AVG_RPR_CALCULATED)::text, 'НЕИЗВЕСТНО') AVG_RPR_CALCULATED
                    ,coalesce ( (AVG_BPR_CALCULATED)::text, 'НЕИЗВЕСТНО') AVG_BPR_CALCULATED
                    ,coalesce ( (AVG_BPR_VARIANCE)::text, 'НЕИЗВЕСТНО') AVG_BPR_VARIANCE
                    ,coalesce ( (AVG_RPR_VARIANCE)::text, 'НЕИЗВЕСТНО') AVG_RPR_VARIANCE
                    FROM (SELECT cl.ili_cluster_id ID
                    ,cl.*
                    ,r.route_type||' '|| r.line_name||' '||r.station_beg||' - '||r.station_end||' КМ ' line_name
                    ,coalesce(r.company_name::text , 'НЕИЗВЕСТНО') company_name
                    ,coalesce((r.begin_date)::text , 'НЕИЗВЕСТНО') begin_date
                    ,coalesce((df.calibrated_measure)::text , 'НЕИЗВЕСТНО') calibrated_measure
                    ,coalesce((df.weld_number)::text , 'НЕИЗВЕСТНО') WELD_NUMBER
                    ,coalesce((ABS(absolute_odometer - (SELECT DISTINCT FIRST_VALUE(ft.absolute_odometer) OVER (ORDER BY
                    ft.absolute_odometer DESC )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &lt; dd.absolute_odometer
                    WHERE dd.ili_data_id = df.ili_data_id
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2)
                    )))::text , 'НЕИЗВЕСТНО') marker_distance_left
                    ,coalesce((ABS(absolute_odometer - (SELECT DISTINCT FIRST_VALUE(ft.absolute_odometer) OVER (ORDER BY
                    ft.absolute_odometer )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &gt; dd.absolute_odometer
                    WHERE dd.ili_data_id = df.ili_data_id
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2)
                    )))::text , 'НЕИЗВЕСТНО') marker_distance_right /* ДИСТАНЦИЯ ДО МАРКЕРА СПРАВА */
                    ,coalesce((SELECT DISTINCT FIRST_VALUE(ft.feature_description) OVER (ORDER BY ft.absolute_odometer
                    DESC )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &lt; dd.absolute_odometer
                    WHERE dd.ili_data_id = df.ili_data_id
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )::text
                    , 'НЕИЗВЕСТНО') marker_name_left /* ИМЯ МАРКЕРА СЛЕВА */
                    ,coalesce((SELECT DISTINCT FIRST_VALUE(ft.feature_description) OVER (ORDER BY ft.absolute_odometer)
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &gt; dd.absolute_odometer
                    WHERE dd.ili_data_id = df.ili_data_id
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )::text
                    , 'НЕИЗВЕСТНО') marker_name_right /*ИМЯ МАРКЕРА СПРАВА*/
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_data dd
                    JOIN pods.ili_pipe_length pl
                    ON pl.ili_inspection_id = dd.ili_inspection_id
                    AND pl.weld_number = dd.weld_number
                    WHERE dd.ili_data_id = df.ili_data_id)::text , 'НЕИЗВЕСТНО') defect_pipe_length /*ДЛИНА ДЕФЕКТНОЙ
                    ТРУБЫ */
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x00
                    WHERE row_number = 1) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_left_1
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x01
                    WHERE row_number = 2) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_left_2
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x02
                    WHERE row_number = 3) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_left_3
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x03
                    WHERE row_number = 4) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_left_4
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x04
                    WHERE row_number = 5) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_left_5
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x05
                    WHERE row_number = 1) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_right_1
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x06
                    WHERE row_number = 2) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_right_2
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x07
                    WHERE row_number = 3) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_right_3
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x08
                    WHERE row_number = 4) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_right_4
                    ,coalesce((SELECT MIN((ABS(pl.end_odometer-pl.start_odometer)))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number

                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number

                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = (SELECT d.ili_data_id

                    FROM pods.ili_data d
                    WHERE d.absolute_odometer = (SELECT MIN(dd.absolute_odometer)

                    FROM pods.ili_data dd
                    WHERE dd.ili_cluster_id = d.ili_cluster_id )
                    AND d.ili_cluster_id = :SYS_OBJ_ID)
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x09
                    WHERE row_number = 5) and pl.ili_inspection_id = df.ili_inspection_id )::text , 'НЕИЗВЕСТНО')
                    defect_pipe_length_right_5
                    ,coalesce((c.x_coord),'-999') x_coord /*ДОЛГОТА */
                    ,coalesce((c.y_coord),'-999') y_coord /*ШИРОТА */
                    ,coalesce((c.z_coord),'-999') z_coord /*АБС. ВЫСОТА */
                    ,coalesce((df.us_weld_distance)::text , 'НЕИЗВЕСТНО') us_weld_distance
                    ,coalesce((df.ds_weld_distance)::text , 'НЕИЗВЕСТНО') ds_weld_distance
                    ,coalesce((l.depth_of_cover),'-999') depth_of_cover /* ГЛУБИНА ЗАЛОЖЕНИЯ */
                    ,coalesce((rt.nominal_diameter_gcl)::text , 'НЕИЗВЕСТНО') nominal_diameter_gcl
                    ,coalesce((df.nominal_wall_thickness)::text , 'НЕИЗВЕСТНО') nominal_wall_thickness
                    FROM pods.ili_cluster cl
                    JOIN report r
                    ON r.ili_inspection_id = CL.ILI_INSPECTION_ID
                    LEFT OUTER JOIN defect df
                    ON df.ili_cluster_id = cl.ili_cluster_id
                    LEFT OUTER JOIN pods.event_range er
                    ON er.event_id = cl.event_id
                    LEFT OUTER JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    LEFT OUTER JOIN pods.location l
                    ON spb.location_id = l.location_id
                    LEFT OUTER JOIN pods.coordinate c
                    ON l.location_id = c.location_id
                    LEFT OUTER JOIN route_dia_w_thick rt
                    ON rt.route_id = r.route_id
                    WHERE cl.ili_cluster_id = :SYS_OBJ_ID
                    ) d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ILI_PIPE_LENGTH" schema="PODS" id="PODS_ILI_PIPE_LENGTH" comment="PODS.ILI_PIPE_LENGTH">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, ILI_PIPE_LENGTH_ID ИДЕНТ_ЗАП_О_ТРУБЕ_В_РАСКЛ, DESCRIPTION
                    ОПИСАНИЕ,WELD_NUMBER НОМЕР_НАЧ_СТЫКА, SEQUENCE_NUMBER НОМЕР_ТРУБЫ, START_ODOMETER
                    ПОКАЗ_ОДОМЕТРА_НА_НАЧ_СТЫКЕ_М, END_ODOMETER ПОКАЗ_ОДОМ_НА_КОНЕЧН_СТЫКЕ_М, START_COORDINATE_ID
                    КООРДИНАТЫ_НАЧ_СТЫКА, END_COORDINATE_ID КООРДИНАТЫ_КОНЕЧ_СТЫКА, SEAM_ORIENTATION_DEG
                    ОРИЕНТ_ПРОДОЛ_ШВА_ЧАС, MEASURED_WALL_THICKNESS ИЗМЕР_ТОЛЩ_СТЕНКИ_ТРУБЫ_ММ, NOMINAL_WALL_THICKNESS
                    НОМИН_ТОЛЩ_СТЕНКИ_ТРУБЫ_ММ, ILI_INSPECTION_ID ПЕРЕЙТИ_К_ОБСЛЕДОВАНИЮ, REF_EVENT_ID
                    ИДЕНТИФ_ТРУБЫ_ПО_ПРОЕКТ_ДАННЫМ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,ILI_PIPE_LENGTH_ID,ILI_PIPE_LENGTH_GUID,EVENT_ID,EVENT_GUID,DESCRIPTION,WELD_NUMBER,SEQUENCE_NUMBER,START_ODOMETER,END_ODOMETER,START_COORDINATE_ID,START_COORDINATE_GUID,END_COORDINATE_ID,END_COORDINATE_GUID,SEAM_ORIENTATION_DEG,MEASURED_WALL_THICKNESS,NOMINAL_WALL_THICKNESS,ILI_INSPECTION_ID,ILI_INSPECTION_GUID,REF_EVENT_ID,REF_EVENT_GUID,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((ILI_PIPE_LENGTH_ID)::text ,
                    'НЕИЗВЕСТНО') ILI_PIPE_LENGTH_ID, coalesce((ILI_PIPE_LENGTH_GUID)::text , 'НЕИЗВЕСТНО')
                    ILI_PIPE_LENGTH_GUID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((WELD_NUMBER)::text , 'НЕИЗВЕСТНО') WELD_NUMBER,
                    coalesce((SEQUENCE_NUMBER)::text , 'НЕИЗВЕСТНО') SEQUENCE_NUMBER, coalesce((START_ODOMETER)::text ,
                    'НЕИЗВЕСТНО') START_ODOMETER, coalesce((END_ODOMETER)::text , 'НЕИЗВЕСТНО') END_ODOMETER,
                    coalesce((START_COORDINATE_ID)::text , 'НЕИЗВЕСТНО') START_COORDINATE_ID,
                    coalesce((START_COORDINATE_GUID)::text , 'НЕИЗВЕСТНО') START_COORDINATE_GUID,
                    coalesce((END_COORDINATE_ID)::text , 'НЕИЗВЕСТНО') END_COORDINATE_ID,
                    coalesce((END_COORDINATE_GUID)::text , 'НЕИЗВЕСТНО') END_COORDINATE_GUID,
                    coalesce((SEAM_ORIENTATION_DEG)::text , 'НЕИЗВЕСТНО') SEAM_ORIENTATION_DEG,
                    coalesce((MEASURED_WALL_THICKNESS)::text , 'НЕИЗВЕСТНО') MEASURED_WALL_THICKNESS,
                    coalesce((NOMINAL_WALL_THICKNESS)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS,
                    coalesce((ILI_INSPECTION_ID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_ID,
                    coalesce((ILI_INSPECTION_GUID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_GUID,
                    coalesce((REF_EVENT_ID)::text , 'НЕИЗВЕСТНО') REF_EVENT_ID, coalesce((REF_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') REF_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.ILI_PIPE_LENGTH t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ILI_RANGE" schema="PODS" id="PODS_ILI_RANGE" comment="PODS.ILI_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SMART_PIGGABLE_LF УЧАСТОК_ИНТЕЛЛЕКТУАЛЬНОЙ_ВТД, PIGGABLE_LF
                    ВТД_ВОЗМОЖНО, DATE_LAST_PIGGED ДАТА_ПОСЛЕДНЕЙ_ВТД, DESCRIPTION ОПИСАНИЕ,(select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,EVENT_ID,EVENT_GUID,SMART_PIGGABLE_LF,PIGGABLE_LF,DATE_LAST_PIGGED,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SMART_PIGGABLE_LF)::text
                    , 'НЕИЗВЕСТНО') SMART_PIGGABLE_LF, coalesce((PIGGABLE_LF)::text , 'НЕИЗВЕСТНО') PIGGABLE_LF,
                    coalesce((DATE_LAST_PIGGED)::text , 'НЕИЗВЕСТНО') DATE_LAST_PIGGED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.ILI_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="INJECTOR" schema="PODS" id="PODS_INJECTOR" comment="PODS.INJECTOR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.INJECTOR_TYPE_CL where
                    TYPE_CL=code) ТИП_ИНЖЕКТОРА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,EVENT_ID,EVENT_GUID,TYPE_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.INJECTOR t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="INSPECTION_INTERVAL" schema="PODS" id="PODS_INSPECTION_INTERVAL" comment="PODS.INSPECTION_INTERVAL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.INSPECTION_INTERVAL_CL where
                    INTERVAL_CL=code) ЗНАЧЕНИЕ_ИНТЕРВАЛА, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, DESCRIPTION
                    ОПИСАНИЕ,ID,EVENT_ID,EVENT_GUID,INTERVAL_CL,SOURCE_GCL,COMMENTS,DESCRIPTION FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INTERVAL_CL)::text , 'НЕИЗВЕСТНО')
                    INTERVAL_CL, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments", coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.INSPECTION_INTERVAL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="INTERFACE_DETECTOR" schema="PODS" id="PODS_INTERFACE_DETECTOR" comment="PODS.INTERFACE_DETECTOR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.INTERFACE_DETECTOR_MFGR_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from
                    PODS.INTERFACE_DETECTOR_TYPE_CL where TYPE_CL=code) ТИП_СИГНАЛ_РАЗДЕЛА_СРЕД, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,EVENT_ID,EVENT_GUID,MANUFACTURER_CL,TYPE_CL,DATE_INSTALLED,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.INTERFACE_DETECTOR t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="INTERNAL_COATING" schema="PODS" id="PODS_INTERNAL_COATING" comment="PODS.INTERNAL_COATING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.COATING_TYPE_SCL where
                    TYPE_SCL=code) ТИП_ПОКРЫТИЯ,(select description from PODS.COATING_MATERIAL_GCL where
                    COATING_MATERIAL_GCL=code) КОНСТРУКЦИЯ_ПОКРЫТИЯ,(select description from
                    PODS.COATING_MANUFACTURER_GCL where COATING_MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,PRODUCT_NAME
                    НАИМЕНОВАНИЕ_ПОКРЫТИЯ,DATE_APPLIED ДАТА_НАНЕСЕНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, TYPE_SCL, SUBTYPE_SCL, COATING_MATERIAL_GCL, COATING_MANUFACTURER_CL, PRODUCT_NAME,
                    DATE_APPLIED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_SCL)::text , 'НЕИЗВЕСТНО') TYPE_SCL, coalesce((SUBTYPE_SCL)::text ,
                    'НЕИЗВЕСТНО') SUBTYPE_SCL, coalesce((COATING_MATERIAL_GCL)::text , 'НЕИЗВЕСТНО')
                    COATING_MATERIAL_GCL, coalesce((COATING_MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    COATING_MANUFACTURER_CL, coalesce((PRODUCT_NAME)::text , 'НЕИЗВЕСТНО') PRODUCT_NAME,
                    coalesce((DATE_APPLIED)::text , 'НЕИЗВЕСТНО') DATE_APPLIED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.INTERNAL_COATING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="JUNCTION_BOX" schema="PODS" id="PODS_JUNCTION_BOX" comment="PODS.JUNCTION_BOX">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,BOX_SIZE ГАБАРИТЫ_ИЗДЕЛИЯ,WEATHERPROOF
                    КЛИМАТИЧЕСКОЕ_ИСПОЛНЕНИЕ,NEMA_RATING СТЕПЕНЬ_ВЗРЫВОЗАЩИЩЕННОСТИ,DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ,POLE МАРКИРОВКА_СТОЛБА,NUMBER_OF_WIRES
                    КОЛИЧЕСТВО_ПРОВОДОВ,NAME НАИМЕНОВАНИЕ,ANODE_CONNECTED_LF CОЕДИНЕНИЯ_С_АНОДОМ,RECTIFIER_CONNECTED_LF
                    CОЕДИНЕНИЯ_С_СКЗ,GROUND_BED_CONNECTED_LF CОЕДИНЕНИЯ_С_АНОД_ЗАЗЕМЛ,(select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, BOX_SIZE, WEATHERPROOF, NEMA_RATING, DATE_INSTALLED, DESCRIPTION, POLE, NUMBER_OF_WIRES,
                    NAME, ANODE_CONNECTED_LF, RECTIFIER_CONNECTED_LF, GROUND_BED_CONNECTED_LF, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((BOX_SIZE)::text ,
                    'НЕИЗВЕСТНО') BOX_SIZE, coalesce((WEATHERPROOF)::text , 'НЕИЗВЕСТНО') WEATHERPROOF,
                    coalesce((NEMA_RATING)::text , 'НЕИЗВЕСТНО') NEMA_RATING, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((POLE)::text , 'НЕИЗВЕСТНО') POLE, coalesce((NUMBER_OF_WIRES)::text , 'НЕИЗВЕСТНО')
                    NUMBER_OF_WIRES, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((ANODE_CONNECTED_LF)::text ,
                    'НЕИЗВЕСТНО') ANODE_CONNECTED_LF, coalesce((RECTIFIER_CONNECTED_LF)::text , 'НЕИЗВЕСТНО')
                    RECTIFIER_CONNECTED_LF, coalesce((GROUND_BED_CONNECTED_LF)::text , 'НЕИЗВЕСТНО')
                    GROUND_BED_CONNECTED_LF, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.JUNCTION_BOX t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LAND_USE" schema="PODS" id="PODS_LAND_USE" comment="PODS.LAND_USE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.LAND_USE_CL where USE_CL=code)
                    ТИП_ЗЕМЛЕПОЛЬЗОВАНИЯ,DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, USE_CL, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((USE_CL)::text , 'НЕИЗВЕСТНО') USE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.LAND_USE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LAUNCHER_RECEIVER" schema="PODS" id="PODS_LAUNCHER_RECEIVER" comment="PODS.LAUNCHER_RECEIVER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (SELECT DESCRIPTION FROM PODS.LAUNCHER_RECEIVER_TYPE_CL where
                    TYPE_CL=code) ТИП_КАМЕРЫ, NAME НАИМЕНОВАНИЕ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА, DESCRIPTION
                    ОПИСАНИЕ,CLOSURE_VALVE_LENGTH ДЛИНА_ЗАГЛ_ЗРА_КАМЕРЫ_ММ, CLOSURE_REDUCER_LENGTH
                    ДЛИНА_ЗАГЛ_ПЕРЕХОДНИКА_ММ, TRAY_LENGTH ДЛИНА_ПОЛКИ_ММ, SAG_RADIUS РАДИУС_ИЗГ_ТРУБ_ПО_ВЕРТ_ММ,
                    OVERBEND_RADIUS РАДИУС_ИЗГИБА_ТРУБЫ_ММ, WORKSHOP_NEAR_TRAP_LF НАЛИЧИЕ_ЦЕХА, TRAP_PRESSURE_RATING
                    РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, (SELECT DESCRIPTION FROM PODS.TRAP_CLOSURE_CL where TRAP_CLOSURE_TYPE_CL=code)
                    ТИП_ЗАТВОРА_КАМЕРЫ, (SELECT DESCRIPTION FROM PODS.TRAP_STATUS_CL where TRAP_STATUS_CL=code)
                    СОСТОЯНИЕ_КАМЕРЫ, ELECTRICITY_AVAILABLE_LF ПОДКЛ_К_СЕТИ_ПЕРЕМЕН_ТОКА, HOIST_AVAILABLE_LF
                    НАЛИЧИЕ_ПОДЪЁМ_УСТР, TRAP_ANGLE УГОЛ_КАМЕРЫ_К_ТРУБ_ГРАД, TRAP_HEIGHT ВЫСОТА_КАМЕРЫ_М, (SELECT
                    DESCRIPTION FROM PODS.NOMINAL_DIAMETER_GCL where TRAP_VALVE_DIAMETER_GCL=code::text) ЗРА, (SELECT
                    DESCRIPTION FROM PODS.VALVE_TYPE_GCL where TRAP_VALVE_TYPE_GCL=code) ТИП_ЗРА_КАМЕРЫ, (SELECT
                    DESCRIPTION FROM PODS.KICKER_BYPASS_LOCATION_CL where KICKER_BYPASS_LOCATION_CL=code::text)
                    ВИД_РАЗМЕЩ_РЕГУЛ_ОГРАН, (SELECT DESCRIPTION FROM PODS.NOMINAL_DIAMETER_GCL where
                    KICKER_BYPASS_DIAMETER_GCL=code::text) РЕГУЛЯТОРА_ОГРАНИЧИТЕЛЯ,
                    (SELECT DESCRIPTION FROM PODS.NOMINAL_DIAMETER_GCL where BRIDLE_DIAMETER_GCL=code::text)
                    УРОВНЕМЕРНОЙ_КОЛОНКИ,
                    REDUCER_VALVE_LENGTH ДЛИН_ПЕРЕХ_К_ТР_ДО_ЗРА_М,
                    (SELECT DESCRIPTION FROM PODS.NOMINAL_WALL_THICKNESS_GCL where
                    REDUCER_WALL_THICKNESS_GCL=code::text) ТОЛЩ_СТЕН_ПЕРЕХ_К_ТРУБ_ММ,
                    (SELECT DESCRIPTION FROM PODS.REDUCER_TYPE_GCL where REDUCER_TYPE_GCL=code)
                    ТИП_ПЕРЕХ_ОТ_КАМЕРЫ_К_ТРУБ,
                    REDUCER_LENGTH ДЛИНА_ЗАГЛ_ПЕРЕХОД_ММ,
                    AXIAL_CLEARANCE_WIDTH ДЛИНА_ММ,
                    AXIAL_CLEARANCE_LENGTH ШИРИНА_ММ,
                    (SELECT DESCRIPTION FROM PODS.NOMINAL_DIAMETER_GCL where OVERBORE_DIAMETER_GCL=code::text)
                    ВНУТРЕННИЙ,
                    CLOSURE_BRIDLE_LENGTH ДЛИНА_ЗАГЛ_УРОВН_КОЛОНКИ_ММ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, NAME, DATE_INSTALLED, DESCRIPTION,
                    CLOSURE_VALVE_LENGTH, CLOSURE_REDUCER_LENGTH, TRAY_LENGTH, SAG_RADIUS, OVERBEND_RADIUS,
                    WORKSHOP_NEAR_TRAP_LF, TRAP_PRESSURE_RATING, TRAP_CLOSURE_TYPE_CL, TRAP_STATUS_CL,
                    ELECTRICITY_AVAILABLE_LF, HOIST_AVAILABLE_LF, TRAP_ANGLE, TRAP_HEIGHT, TRAP_VALVE_DIAMETER_GCL,
                    TRAP_VALVE_TYPE_GCL, KICKER_BYPASS_LOCATION_CL, KICKER_BYPASS_DIAMETER_GCL, BRIDLE_DIAMETER_GCL,
                    REDUCER_VALVE_LENGTH, REDUCER_WALL_THICKNESS_GCL, REDUCER_TYPE_GCL, REDUCER_LENGTH,
                    AXIAL_CLEARANCE_WIDTH, AXIAL_CLEARANCE_LENGTH, OVERBORE_DIAMETER_GCL, CLOSURE_BRIDLE_LENGTH,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name",
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((CLOSURE_VALVE_LENGTH)::text , 'НЕИЗВЕСТНО')
                    CLOSURE_VALVE_LENGTH, coalesce((CLOSURE_REDUCER_LENGTH)::text , 'НЕИЗВЕСТНО')
                    CLOSURE_REDUCER_LENGTH, coalesce((TRAY_LENGTH)::text , 'НЕИЗВЕСТНО') TRAY_LENGTH,
                    coalesce((SAG_RADIUS)::text , 'НЕИЗВЕСТНО') SAG_RADIUS, coalesce((OVERBEND_RADIUS)::text ,
                    'НЕИЗВЕСТНО') OVERBEND_RADIUS, coalesce((WORKSHOP_NEAR_TRAP_LF)::text , 'НЕИЗВЕСТНО')
                    WORKSHOP_NEAR_TRAP_LF, coalesce((TRAP_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') TRAP_PRESSURE_RATING,
                    coalesce((TRAP_CLOSURE_TYPE_CL)::text , 'НЕИЗВЕСТНО') TRAP_CLOSURE_TYPE_CL,
                    coalesce((TRAP_STATUS_CL)::text , 'НЕИЗВЕСТНО') TRAP_STATUS_CL,
                    coalesce((ELECTRICITY_AVAILABLE_LF)::text , 'НЕИЗВЕСТНО') ELECTRICITY_AVAILABLE_LF,
                    coalesce((HOIST_AVAILABLE_LF)::text , 'НЕИЗВЕСТНО') HOIST_AVAILABLE_LF, coalesce((TRAP_ANGLE)::text
                    , 'НЕИЗВЕСТНО') TRAP_ANGLE, coalesce((TRAP_HEIGHT)::text , 'НЕИЗВЕСТНО') TRAP_HEIGHT,
                    coalesce((TRAP_VALVE_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') TRAP_VALVE_DIAMETER_GCL,
                    coalesce((TRAP_VALVE_TYPE_GCL)::text , 'НЕИЗВЕСТНО') TRAP_VALVE_TYPE_GCL,
                    coalesce((KICKER_BYPASS_LOCATION_CL)::text , 'НЕИЗВЕСТНО') KICKER_BYPASS_LOCATION_CL,
                    coalesce((KICKER_BYPASS_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') KICKER_BYPASS_DIAMETER_GCL,
                    coalesce((BRIDLE_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') BRIDLE_DIAMETER_GCL,
                    coalesce((REDUCER_VALVE_LENGTH)::text , 'НЕИЗВЕСТНО') REDUCER_VALVE_LENGTH,
                    coalesce((REDUCER_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') REDUCER_WALL_THICKNESS_GCL,
                    coalesce((REDUCER_TYPE_GCL)::text , 'НЕИЗВЕСТНО') REDUCER_TYPE_GCL, coalesce((REDUCER_LENGTH)::text
                    , 'НЕИЗВЕСТНО') REDUCER_LENGTH, coalesce((AXIAL_CLEARANCE_WIDTH)::text , 'НЕИЗВЕСТНО')
                    AXIAL_CLEARANCE_WIDTH, coalesce((AXIAL_CLEARANCE_LENGTH)::text , 'НЕИЗВЕСТНО')
                    AXIAL_CLEARANCE_LENGTH, coalesce((OVERBORE_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО')
                    OVERBORE_DIAMETER_GCL, coalesce((CLOSURE_BRIDLE_LENGTH)::text , 'НЕИЗВЕСТНО') CLOSURE_BRIDLE_LENGTH,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.LAUNCHER_RECEIVER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LEAK_HISTORY" schema="PODS" id="PODS_LEAK_HISTORY" comment="PODS.LEAK_HISTORY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,LEAK_ID ИДЕНТИФИКАТОР_УТЕЧКИ,LEAK_DATE
                    ДАТА_УТЕЧКИ,TELEPHONIC_REPORT_DATE ДАТА_ТЕЛЕФОННОГО_УВЕД,ENVIRONMENTAL_REMEDIATION_COST
                    СТОИМОСТЬ_МЕРОПРИЯТ,CITY АДРЕС,STATE_GCL РЕГИОН_РАЙОН,LEAK_REPORT_DATE
                    ДАТА_ПОЛУЧЕНИЯ_СВЕДЕНИЙ,VOLUME_LOST ПОТЕРИ_ПРОД_ОБЪЁМ_СТОИМ,(select description from
                    PODS.LEAK_CAUSE_CL where PRIMARY_CAUSE_CL=code) ПРИЧИНА_УТЕЧКИ,LOST_PRODUCT_COST
                    М3,BUSINESS_INTERRUPTION_COST УБЫТКИ_БИЗНЕСА_РУБ,DESCRIPTION ОПИСАНИЕ,(select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, LEAK_ID, LEAK_GUID,
                    EVENT_ID, EVENT_GUID, LEAK_DATE, TELEPHONIC_REPORT_DATE, NRC_REPORT_NUMBER,
                    ENVIRONMENTAL_REMEDIATION_COST, CITY, STATE_GCL, ZIP, LEAK_REPORT_DATE, PRODUCT_TYPE_SCL,
                    PRODUCT_SUBTYPE_SCL, VOLUME_LOST, PRIMARY_CAUSE_CL, LOST_PRODUCT_COST, BUSINESS_INTERRUPTION_COST,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((LEAK_ID)::text , 'НЕИЗВЕСТНО') LEAK_ID, coalesce((LEAK_GUID)::text , 'НЕИЗВЕСТНО')
                    LEAK_GUID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((LEAK_DATE)::text , 'НЕИЗВЕСТНО') LEAK_DATE,
                    coalesce((TELEPHONIC_REPORT_DATE)::text , 'НЕИЗВЕСТНО') TELEPHONIC_REPORT_DATE,
                    coalesce((NRC_REPORT_NUMBER)::text , 'НЕИЗВЕСТНО') NRC_REPORT_NUMBER,
                    coalesce((ENVIRONMENTAL_REMEDIATION_COST)::text , 'НЕИЗВЕСТНО') ENVIRONMENTAL_REMEDIATION_COST,
                    coalesce((CITY)::text , 'НЕИЗВЕСТНО') CITY, coalesce((STATE_GCL)::text , 'НЕИЗВЕСТНО') STATE_GCL,
                    coalesce((ZIP)::text , 'НЕИЗВЕСТНО') ZIP, coalesce((LEAK_REPORT_DATE)::text , 'НЕИЗВЕСТНО')
                    LEAK_REPORT_DATE, coalesce((PRODUCT_TYPE_SCL)::text , 'НЕИЗВЕСТНО') PRODUCT_TYPE_SCL,
                    coalesce((PRODUCT_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') PRODUCT_SUBTYPE_SCL,
                    coalesce((VOLUME_LOST)::text , 'НЕИЗВЕСТНО') VOLUME_LOST, coalesce((PRIMARY_CAUSE_CL)::text ,
                    'НЕИЗВЕСТНО') PRIMARY_CAUSE_CL, coalesce((LOST_PRODUCT_COST)::text , 'НЕИЗВЕСТНО')
                    LOST_PRODUCT_COST, coalesce((BUSINESS_INTERRUPTION_COST)::text , 'НЕИЗВЕСТНО')
                    BUSINESS_INTERRUPTION_COST, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.LEAK_HISTORY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LEGACY_LINE_BOUNDARY" schema="PODS" id="PODS_LEGACY_LINE_BOUNDARY" comment="PODS.LEGACY_LINE_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, LEGACY_LINE_ID ИДЕНТИФ_ПРЕЖНЕГО_НАИМЕН, DESCRIPTION
                    ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, LEGACY_LINE_ID, LEGACY_LINE_GUID, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((LEGACY_LINE_ID)::text , 'НЕИЗВЕСТНО') LEGACY_LINE_ID, coalesce((LEGACY_LINE_GUID)::text ,
                    'НЕИЗВЕСТНО') LEGACY_LINE_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.LEGACY_LINE_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MAINTENANCE" schema="PODS" id="PODS_MAINTENANCE" comment="PODS.MAINTENANCE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, MAINT_ID ИДЕНТИФИКАТОР_РАБОТЫ, (select description from
                    PODS.MAINTENANCE_TYPE_CL where TYPE_CL=code) ТИП_РАБОТ, MAINT_DATE ДАТА_ОКОНЧАНИЯ, MAINT_COST
                    СТОИМОСТЬ_РАБОТ_РУБ, REMEDIATION_COST СТОИМ_РАБОТ_ПО_РЕКУЛЬТ_РУБ, WORK_ORDER_ID
                    ПЕРЕЙТИ_К_НАРЯД_ЗАКАЗУ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, MAINT_ID, MAINT_GUID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, MAINT_DATE, MAINT_COST, REMEDIATION_COST, WORK_ORDER_ID, WORK_ORDER_GUID,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((MAINT_ID)::text , 'НЕИЗВЕСТНО') MAINT_ID, coalesce((MAINT_GUID)::text , 'НЕИЗВЕСТНО')
                    MAINT_GUID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((MAINT_DATE)::text , 'НЕИЗВЕСТНО') MAINT_DATE, coalesce((MAINT_COST)::text , 'НЕИЗВЕСТНО')
                    MAINT_COST, coalesce((REMEDIATION_COST)::text , 'НЕИЗВЕСТНО') REMEDIATION_COST,
                    coalesce((WORK_ORDER_ID)::text , 'НЕИЗВЕСТНО') WORK_ORDER_ID, coalesce((WORK_ORDER_GUID)::text ,
                    'НЕИЗВЕСТНО') WORK_ORDER_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.MAINTENANCE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MAOP_RATING" schema="PODS" id="PODS_MAOP_RATING" comment="PODS.MAOP_RATING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,MAOP_RATING ПРОЕКТ_РАБ_ДАВЛЕНИЕ_КПА,MOP
                    УСТАНОВЛ_РАБ_ДАВЛ_КПА,(select description from PODS.MAOP_DETERMINATION_METHOD_CL where
                    DETERMINATION_METHOD_CL=code)
                    МЕТОД_ОПРЕД_РАБ_ДАВЛЕНИЯ,DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ,VERIFIED_BY ПРОВЕР_ЛИЦО,ESTABLISHED_BY
                    УТВЕРДИВШЕЕ_ЛИЦО,LIMITING_FACTORS ОГРАНИЧ_ФАКТОРЫ,DESCRIPTION ОПИСАНИЕ,(select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, MAOP_RATING, MOP, DETERMINATION_METHOD_CL, DETERMINATION_DATE, VERIFIED_BY,
                    ESTABLISHED_BY, LIMITING_FACTORS, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MAOP_RATING)::text , 'НЕИЗВЕСТНО')
                    MAOP_RATING, coalesce((MOP)::text , 'НЕИЗВЕСТНО') MOP, coalesce((DETERMINATION_METHOD_CL)::text ,
                    'НЕИЗВЕСТНО') DETERMINATION_METHOD_CL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО')
                    DETERMINATION_DATE, coalesce((VERIFIED_BY)::text , 'НЕИЗВЕСТНО') VERIFIED_BY,
                    coalesce((ESTABLISHED_BY)::text , 'НЕИЗВЕСТНО') ESTABLISHED_BY, coalesce((LIMITING_FACTORS)::text ,
                    'НЕИЗВЕСТНО') LIMITING_FACTORS, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.MAOP_RATING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="METER" schema="PODS" id="PODS_METER" comment="PODS.METER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.METER_TYPE_CL where TYPE_CL=code)
                    ТИП_ИЗМЕР_ПРИБОРА,METER_NUMBER МАРКА_ИЗМЕРИТ_ПРИБОРА,SERIAL_NUMBER ЗАВОДСКОЙ_НОМЕР,(select
                    description from PODS.METER_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,(select description from PODS.METER_SPECIFICATION_CL where
                    SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,NOMINAL_PRESSURE_RATING
                    РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛЕНИЕ_КПА,DATE_MANUFACTURED
                    ДАТА_ИЗГОТОВЛЕНИЯ,VANES_LF ИСПОЛЬЗОВАНИЕ_СТРУЕВЫПРЯМИТЕЛЯ,DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    METER_NUMBER, SERIAL_NUMBER, MANUFACTURER_CL, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING,
                    MILL_TEST_PRESSURE, DATE_MANUFACTURED, VANES_LF, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((METER_NUMBER)::text , 'НЕИЗВЕСТНО') METER_NUMBER,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((VANES_LF)::text ,
                    'НЕИЗВЕСТНО') VANES_LF, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.METER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="METER_STATION" schema="PODS" id="PODS_METER_STATION" comment="PODS.METER_STATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,STATION_NUMBER НОМЕР_СТАНЦИИ,LEASE_NAME
                    НОМЕР_ДОГОВОРА_АРЕНДЫ,LEASE_OPERATOR ОПЕРАТОР_ДОГОВОРА_АРЕНДЫ,(select description from
                    PODS.METER_STATION_TYPE_CL where TYPE_CL=code) ТИП_ИЗМЕРИТЕЛЬНОЙ_СТАНЦИИ,(select description from
                    PODS.METER_STATION_STATUS_CL where STATUS_CL=code) СОСТОЯНИЕ_ИЗМЕР_СТАНЦИИ,(select description from
                    PODS.METER_STATION_CLASS_CL where CLASS_CL=code) КЛАСС_ИЗМЕРИТЕЛЬНОЙ_СТАНЦИИ,DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, STATION_NUMBER, LEASE_NAME, LEASE_OPERATOR, TYPE_CL,
                    STATUS_CL, CLASS_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((STATION_NUMBER)::text , 'НЕИЗВЕСТНО') STATION_NUMBER,
                    coalesce((LEASE_NAME)::text , 'НЕИЗВЕСТНО') LEASE_NAME, coalesce((LEASE_OPERATOR)::text ,
                    'НЕИЗВЕСТНО') LEASE_OPERATOR, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((STATUS_CL)::text , 'НЕИЗВЕСТНО') STATUS_CL, coalesce((CLASS_CL)::text , 'НЕИЗВЕСТНО')
                    CLASS_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.METER_STATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="NETWORK_SEGMENT" schema="PODS" id="PODS_NETWORK_SEGMENT" comment="PODS.NETWORK_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, FROM_JUNCTION_ID,TO_JUNCTION_ID,DESCRIPTION ОПИСАНИЕ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, FROM_JUNCTION_ID, FROM_JUNCTION_GUID, TO_JUNCTION_ID,
                    TO_JUNCTION_GUID, DESCRIPTION, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((FROM_JUNCTION_ID)::text , 'НЕИЗВЕСТНО') FROM_JUNCTION_ID,
                    coalesce((FROM_JUNCTION_GUID)::text , 'НЕИЗВЕСТНО') FROM_JUNCTION_GUID,
                    coalesce((TO_JUNCTION_ID)::text , 'НЕИЗВЕСТНО') TO_JUNCTION_ID, coalesce((TO_JUNCTION_GUID)::text ,
                    'НЕИЗВЕСТНО') TO_JUNCTION_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.NETWORK_SEGMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ODORANT_MEASUREMENT" schema="PODS" id="PODS_ODORANT_MEASUREMENT" comment="PODS.ODORANT_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.ODORANT_TYPE_CL where TYPE_CL=code)
                    ТИП_ОДОРАНТА,MEASUREMENT_STATION_NAME ПУНКТ_ИЗМЕРЕНИЯ,MEASUREMENT
                    ИЗМЕРЕННАЯ_ВЕЛИЧИНА_МГ_М3,DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ,DESCRIPTION ОПИСАНИЕ,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, TYPE_CL, MEASUREMENT_STATION_NAME, MEASUREMENT, DETERMINATION_DATE,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((MEASUREMENT_STATION_NAME)::text , 'НЕИЗВЕСТНО') MEASUREMENT_STATION_NAME,
                    coalesce((MEASUREMENT)::text , 'НЕИЗВЕСТНО') MEASUREMENT, coalesce((DETERMINATION_DATE)::text ,
                    'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.ODORANT_MEASUREMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ODORANT_RANGE" schema="PODS" id="PODS_ODORANT_RANGE" comment="PODS.ODORANT_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.ODORANT_TYPE_CL where
                    TYPE_CL=code) ТИП_ОДОРАНТА, DESCRIPTION ОПИСАНИЕ,ODORANT_GRANDFATHER_LF
                    ОСВОБ_УЧАСТКА_ОТ_ПРЕД_ОДОРИЗ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, DESCRIPTION,
                    ODORANT_GRANDFATHER_LF, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((ODORANT_GRANDFATHER_LF)::text , 'НЕИЗВЕСТНО')
                    ODORANT_GRANDFATHER_LF, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.ODORANT_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="OFFSHORE_RISER" schema="PODS" id="PODS_OFFSHORE_RISER" comment="PODS.OFFSHORE_RISER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(SELECT DESCRIPTION FROM PODS.OFFSHORE_RISER_TYPE_CL where
                    TYPE_CL=code) ТИП_РАЙЗЕРА,PART_NUMBER НОМЕР_ПАРТИИ,SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,(SELECT DESCRIPTION
                    FROM PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР,(SELECT
                    DESCRIPTION FROM PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(SELECT DESCRIPTION FROM PODS.OFFSHORE_RISER_MATL_GRADE_CL where
                    MATERIAL_GRADE_CL=code) КАТЕГОРИЯ_ПРОЧНОСТИ_МАТЕРИАЛА,DESIGN_FACTOR
                    ДОПУСТ_ОТНОСИТ_РАСТЯЖЕНИЕ,DEPARTURE_ANGLE УГОЛ_ОТХОДА_ОТ_ПЛАТФ_ГР,(SELECT DESCRIPTION FROM
                    PODS.OFFSHORE_RISER_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ,MAXIMUM_DEPTH
                    МАКС_ГЛУБИНА_М,DEPTH_AT_TOUCHDOWN ГЛУБИНА_ВОДЫ_М,DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(SELECT
                    DESCRIPTION FROM PODS.OFFSHORE_RISER_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ,(SELECT
                    DESCRIPTION FROM PODS.OFFSHORE_RISER_SPEC_CL where SPECIFICATION_CL=code)
                    ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,(SELECT DESCRIPTION FROM PODS.PIPE_LONG_SEAM_GCL where
                    PIPE_LONG_SEAM_GCL=code) ТИП_ПРОДОЛ_СВАР_ШВА,NOMINAL_PRESSURE_RATING
                    РАБОЧЕЕ_ДАВЛ_КПА,MILL_TEST_PRESSURE ЗАВОД_ИСП_ДАВЛЕНИЕ_КПА,DESCRIPTION ОПИСАНИЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, PART_NUMBER, SERIAL_NUMBER, NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL,
                    MATERIAL_GRADE_CL, DESIGN_FACTOR, DEPARTURE_ANGLE, MANUFACTURER_CL, DATE_MANUFACTURED,
                    MAXIMUM_DEPTH, DEPTH_AT_TOUCHDOWN, DATE_INSTALLED, MATERIAL_CL, SPECIFICATION_CL,
                    PIPE_LONG_SEAM_GCL, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((NOMINAL_DIAMETER_GCL)::text
                    , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL, coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICKNESS_GCL, coalesce((MATERIAL_GRADE_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_GRADE_CL,
                    coalesce((DESIGN_FACTOR)::text , 'НЕИЗВЕСТНО') DESIGN_FACTOR, coalesce((DEPARTURE_ANGLE)::text ,
                    'НЕИЗВЕСТНО') DEPARTURE_ANGLE, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((MAXIMUM_DEPTH)::text
                    , 'НЕИЗВЕСТНО') MAXIMUM_DEPTH, coalesce((DEPTH_AT_TOUCHDOWN)::text , 'НЕИЗВЕСТНО')
                    DEPTH_AT_TOUCHDOWN, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((SPECIFICATION_CL)::text ,
                    'НЕИЗВЕСТНО') SPECIFICATION_CL, coalesce((PIPE_LONG_SEAM_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_LONG_SEAM_GCL, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_PRESSURE_RATING, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.OFFSHORE_RISER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="OWNER_OPERATOR_RANGE" schema="PODS" id="PODS_OWNER_OPERATOR_RANGE" comment="PODS.OWNER_OPERATOR_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.COMPANY_GCL where COMPANY_GCL=code)
                    КОМП_ВЛАД_ИЛИ_ОПЕРАТОР,(select description from PODS.OWNER_OPERATOR_TYPE_CL where TYPE_CL=code)
                    ПРАВОВОЙ_СТАТУС_КОМПАНИИ,PERCENT_INTEREST ДОЛЯ_КОМП_В_СОБСТВ,DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, COMPANY_GCL, TYPE_CL, PERCENT_INTEREST, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((COMPANY_GCL)::text ,
                    'НЕИЗВЕСТНО') COMPANY_GCL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((PERCENT_INTEREST)::text , 'НЕИЗВЕСТНО') PERCENT_INTEREST, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.OWNER_OPERATOR_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PHYSICAL_INSPECTION" schema="PODS" id="PODS_PHYSICAL_INSPECTION" comment="PODS.PHYSICAL_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,(select description from PODS.PHYSICAL_INSPECTION_REASON_CL where
                    REASON_CL=code) ОСНОВ_ПРОВЕД_ОБСЛЕДОВАНИЯ,(select description from PODS.PHYSICAL_INSPECTION_CLASS_CL
                    where CLASS_CL=code) КАТЕГОРИЯ_ОБСЛ,INSPECTION_START_DATE ДАТА_НАЧАЛА,INSPECTION_END_DATE
                    ДАТА_ОКОНЧАНИЯ,PERFORMED_BY ИСПОЛНИТЕЛЬ_РАБОТ,(select description from PODS.INSPECTION_TYPE_GCL
                    where INSPECTION_TYPE_GCL=code) ТИП_ОБСЛЕДОВАНИЯ,PHYSICAL_INSPECTION_IDENTIFIER
                    РЕГИСТР_НОМЕР,DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, REASON_CL, CLASS_CL,
                    INSPECTION_START_DATE, INSPECTION_END_DATE, PERFORMED_BY, INSPECTION_TYPE_GCL,
                    PHYSICAL_INSPECTION_IDENTIFIER, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text
                    , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text
                    , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((REASON_CL)::text , 'НЕИЗВЕСТНО') REASON_CL,
                    coalesce((CLASS_CL)::text , 'НЕИЗВЕСТНО') CLASS_CL, coalesce((INSPECTION_START_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_START_DATE, coalesce((INSPECTION_END_DATE)::text , 'НЕИЗВЕСТНО')
                    INSPECTION_END_DATE, coalesce((PERFORMED_BY)::text , 'НЕИЗВЕСТНО') PERFORMED_BY,
                    coalesce((INSPECTION_TYPE_GCL)::text , 'НЕИЗВЕСТНО') INSPECTION_TYPE_GCL,
                    coalesce((PHYSICAL_INSPECTION_IDENTIFIER)::text , 'НЕИЗВЕСТНО') PHYSICAL_INSPECTION_IDENTIFIER,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.PHYSICAL_INSPECTION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_ADJACENT_CONSTRUCTION" schema="PODS" id="PODS_PI_ADJACENT_CONSTRUCTION"
          comment="PODS.PI_ADJACENT_CONSTRUCTION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ,(select description from
                    PODS.NEAREST_FACILITY_CL where NEAREST_FACILITY_CL=code) ТИП_СООРУЖЕНИЯ,DISTANCE_TO_FACILITY
                    РАССТОЯНИЕ_ДО_СООРУЖЕНИЯ_М,(select description from PODS.DIRECTION_GCL where
                    DIRECTION_TO_FACILITY_GCL=code) НАПРАВЛЕНИЕ_НА_СООРУЖЕНИЕ,(select description from
                    PODS.MARKER_TYPE_GCL where MARKER_TYPE_GCL=code) ТИП_УКАЗАТЕЛЬНОГО_ЗНАКА,PERSON_NOTIFIED
                    ОПОВЕЩАЕМОЕ_ЛИЦО,DESCRIPTION_OF_CONSTRUCTION ОПИСАНИЕ_СООРУЖЕНИЯ,ESTIMATED_OCCUPANCY
                    РАСЧЁТНОЕ_ЧИСЛО_ЛЮДЕЙ_В_ЗДАНИИ,PI_EVENT_ID ОБСЛЕДОВАНИЕ,DESCRIPTION ОПИСАНИЕ,(select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, INSPECTION_DATE, NEAREST_FACILITY_CL, DISTANCE_TO_FACILITY, DIRECTION_TO_FACILITY_GCL,
                    MARKER_TYPE_GCL, PERSON_NOTIFIED, DESCRIPTION_OF_CONSTRUCTION, ESTIMATED_OCCUPANCY, PI_EVENT_ID,
                    PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((NEAREST_FACILITY_CL)::text , 'НЕИЗВЕСТНО') NEAREST_FACILITY_CL,
                    coalesce((DISTANCE_TO_FACILITY)::text , 'НЕИЗВЕСТНО') DISTANCE_TO_FACILITY,
                    coalesce((DIRECTION_TO_FACILITY_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_TO_FACILITY_GCL,
                    coalesce((MARKER_TYPE_GCL)::text , 'НЕИЗВЕСТНО') MARKER_TYPE_GCL, coalesce((PERSON_NOTIFIED)::text ,
                    'НЕИЗВЕСТНО') PERSON_NOTIFIED, coalesce((DESCRIPTION_OF_CONSTRUCTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION_OF_CONSTRUCTION, coalesce((ESTIMATED_OCCUPANCY)::text , 'НЕИЗВЕСТНО')
                    ESTIMATED_OCCUPANCY, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.PI_ADJACENT_CONSTRUCTION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_ANODE_READING" schema="PODS" id="PODS_PI_ANODE_READING" comment="PODS.PI_ANODE_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION
                    ОПИСАНИЕ,POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В, CURRENT_READING СИЛА_ТОКА_А, RESISTANCE_READING
                    ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ, PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID,
                    INSPECTION_DATE, DESCRIPTION, POTENTIAL_READING, CURRENT_READING, RESISTANCE_READING,
                    PI_CP_EVENT_ID, PI_CP_EVENT_GUID, REF_ANODE_EVENT_ID, REF_ANODE_EVENT_GUID, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((POTENTIAL_READING)::text , 'НЕИЗВЕСТНО') POTENTIAL_READING,
                    coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((REF_ANODE_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_ANODE_EVENT_ID, coalesce((REF_ANODE_EVENT_GUID)::text , 'НЕИЗВЕСТНО') REF_ANODE_EVENT_GUID,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_ANODE_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_BOND_READING" schema="PODS" id="PODS_PI_BOND_READING" comment="PODS.PI_BOND_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,
                    INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В,
                    CURRENT_READING СИЛА_ТОКА_А, RESISTANCE_READING ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ, PI_CP_EVENT_ID
                    ОБСЛЕДОВАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, DESCRIPTION, POTENTIAL_READING,
                    CURRENT_READING, RESISTANCE_READING, PI_CP_EVENT_ID, PI_CP_EVENT_GUID, REF_BOND_LEAD_EVENT_ID,
                    REF_BOND_LEAD_EVENT_GUID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((POTENTIAL_READING)::text ,
                    'НЕИЗВЕСТНО') POTENTIAL_READING, coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((REF_BOND_LEAD_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_BOND_LEAD_EVENT_ID, coalesce((REF_BOND_LEAD_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_BOND_LEAD_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.PI_BOND_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CASING_READING" schema="PODS" id="PODS_PI_CASING_READING" comment="PODS.PI_CASING_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,
                    SHORTED_LF ЗАКОРОЧЕННЫЙ,CURRENT_READING СИЛА_ТОКА_А, POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В,
                    RESISTANCE_READING ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ,PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, DESCRIPTION, SHORTED_LF, CURRENT_READING,
                    POTENTIAL_READING, RESISTANCE_READING, PI_CP_EVENT_ID, PI_CP_EVENT_GUID, REF_CASING_EVENT_ID,
                    REF_CASING_EVENT_GUID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SHORTED_LF)::text ,
                    'НЕИЗВЕСТНО') SHORTED_LF, coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((POTENTIAL_READING)::text , 'НЕИЗВЕСТНО') POTENTIAL_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((REF_CASING_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_CASING_EVENT_ID, coalesce((REF_CASING_EVENT_GUID)::text , 'НЕИЗВЕСТНО') REF_CASING_EVENT_GUID,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CASING_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CIS_READING" schema="PODS" id="PODS_PI_CIS_READING" comment="PODS.PI_CIS_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, PS_ON ПОТЕНЦИАЛ_ВКЛ_UВКЛ_В,
                    PS_OFF ПОТЕНЦИАЛ_ОТКЛЮЧЕНИЯ_UОТКЛ, STATIC ПОЛЯРИЗАЦИОННЫЙ_ПОТЕНЦИАЛ_В, DC_POTENTIAL_VOLTS
                    ПОТЕНЦИАЛ_ПОСТОЯННОГО_ТОКА_В, PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ,(select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_GUID,
                    INSPECTION_DATE, PS_ON, PS_OFF, STATIC, DC_POTENTIAL_VOLTS, PI_CP_EVENT_ID, PI_CP_EVENT_GUID,
                    DESCRIPTION, SOURCE_GCL, COMMENTS, GRAD_ON, GRAD_OFF, D_GRAD, DD_GRAD, EVENT_ID FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((PS_ON)::text ,
                    'НЕИЗВЕСТНО') PS_ON, coalesce((PS_OFF)::text , 'НЕИЗВЕСТНО') PS_OFF, coalesce((STATIC)::text ,
                    'НЕИЗВЕСТНО') STATIC, coalesce((DC_POTENTIAL_VOLTS)::text , 'НЕИЗВЕСТНО') DC_POTENTIAL_VOLTS,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments", coalesce((GRAD_ON)::text , 'НЕИЗВЕСТНО') GRAD_ON, coalesce((GRAD_OFF)::text ,
                    'НЕИЗВЕСТНО') GRAD_OFF, coalesce((D_GRAD)::text , 'НЕИЗВЕСТНО') D_GRAD, coalesce((DD_GRAD)::text ,
                    'НЕИЗВЕСТНО') DD_GRAD, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CIS_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_COATING_DATA" schema="PODS" id="PODS_PI_COATING_DATA" comment="PODS.PI_COATING_DATA">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.COATING_TYPE_SCL where COATING_TYPE_SCL=code) ТИП_ПОКРЫТИЯ,(select description from
                    PODS.COATING_CONDITION_CL where CONDITION_CL=code) СОСТОЯНИЕ_ПОКРЫТИЯ,(select description from
                    PODS.COATING_DEFECT_TYPE_CL where DEFECT_TYPE_CL=code) ДЕФЕКТ_ПОКРЫТИЯ,MOISTURE_UNDER_COATING_LF
                    ВЛАГА_ПОД_ПОКРЫТИЕМ,AXIAL_LENGTH ДЛИНА_ВДОЛЬ_ОСИ_М,CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_М,MAX_WIDTH
                    ШИРИНА_В_РАЗВЁРТКЕ_М,DISBOND_DRY_LF ОТСЛОЕНИЕ_СУХОЕ,LONG_SEAM_TENT_LEFT
                    ШИРИНА_НАХЛЁСТА_СЛЕВА_М,LONG_SEAM_TENT_RIGHT СПРАВА_М,THICKNESS_AT_0
                    ТОЛЩИНА_В_ТОЧКЕ_0_ГРАД,THICKNESS_AT_45 ТОЛЩИНА_В_ТОЧКЕ_45_ГРАД,THICKNESS_AT_90
                    ТОЛЩИНА_В_ТОЧКЕ_90_ГРАД,THICKNESS_AT_135 ТОЛЩИНА_В_ТОЧКЕ_135_ГРАД,THICKNESS_AT_180
                    ТОЛЩИНА_В_ТОЧКЕ_180_ГРАД,THICKNESS_AT_225 ТОЛЩИНА_В_ТОЧКЕ_225_ГРАД,THICKNESS_AT_270
                    ТОЛЩИНА_В_ТОЧКЕ_270_ГРАД,THICKNESS_AT_315 ТОЛЩИНА_В_ТОЧКЕ_315_ГРАД,PI_EVENT_ID
                    ОБСЛЕДОВАНИЕ,DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ,COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, COATING_TYPE_SCL,
                    COATING_SUBTYPE_SCL, CONDITION_CL, DEFECT_TYPE_CL, MOISTURE_UNDER_COATING_LF, AXIAL_LENGTH,
                    CIRCUM_LENGTH, MAX_WIDTH, DISBOND_DRY_LF, LONG_SEAM_TENT_LEFT, LONG_SEAM_TENT_RIGHT, THICKNESS_AT_0,
                    THICKNESS_AT_45, THICKNESS_AT_90, THICKNESS_AT_135, THICKNESS_AT_180, THICKNESS_AT_225,
                    THICKNESS_AT_270, THICKNESS_AT_315, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((COATING_TYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_TYPE_SCL,
                    coalesce((COATING_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_SUBTYPE_SCL,
                    coalesce((CONDITION_CL)::text , 'НЕИЗВЕСТНО') CONDITION_CL, coalesce((DEFECT_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') DEFECT_TYPE_CL, coalesce((MOISTURE_UNDER_COATING_LF)::text , 'НЕИЗВЕСТНО')
                    MOISTURE_UNDER_COATING_LF, coalesce((AXIAL_LENGTH)::text , 'НЕИЗВЕСТНО') AXIAL_LENGTH,
                    coalesce((CIRCUM_LENGTH)::text , 'НЕИЗВЕСТНО') CIRCUM_LENGTH, coalesce((MAX_WIDTH)::text ,
                    'НЕИЗВЕСТНО') MAX_WIDTH, coalesce((DISBOND_DRY_LF)::text , 'НЕИЗВЕСТНО') DISBOND_DRY_LF,
                    coalesce((LONG_SEAM_TENT_LEFT)::text , 'НЕИЗВЕСТНО') LONG_SEAM_TENT_LEFT,
                    coalesce((LONG_SEAM_TENT_RIGHT)::text , 'НЕИЗВЕСТНО') LONG_SEAM_TENT_RIGHT,
                    coalesce((THICKNESS_AT_0)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_0, coalesce((THICKNESS_AT_45)::text ,
                    'НЕИЗВЕСТНО') THICKNESS_AT_45, coalesce((THICKNESS_AT_90)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_90,
                    coalesce((THICKNESS_AT_135)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_135,
                    coalesce((THICKNESS_AT_180)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_180,
                    coalesce((THICKNESS_AT_225)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_225,
                    coalesce((THICKNESS_AT_270)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_270,
                    coalesce((THICKNESS_AT_315)::text , 'НЕИЗВЕСТНО') THICKNESS_AT_315, coalesce((PI_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.PI_COATING_DATA t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CORROSION" schema="PODS" id="PODS_PI_CORROSION" comment="PODS.PI_CORROSION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, REF_GIRTH_WELD
                    НОМЕР_СВАРНОГО_ШВА, DIST_FROM_GIRTH_WELD РАССТОЯНИЕ_ОТ_СВАРНОГО_ШВА_М, FEATURE_NUMBER
                    КОЛИЧЕСТВО_ДЕФЕКТОВ, ORIENTATION ОРИЕНТАЦИЯ, SITE_ID ИДЕНТИФ_ГРУППЫ_ДЕФЕКТОВ, DEFECT_TYPE_CL
                    ТИП_КОРРОЗИИ, AXIAL_LENGTH ДЛИНА_ВДОЛЬ_ОСИ_ММ, CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_ММ, MAX_WIDTH
                    ШИРИНА_В_РАЗВЕРТКЕ_ММ, DISBOND_DRY_LF ОТСЛОЕНИЕ_СУХОЕ, LONG_SEAM_TENT_LEFT ШИРИНА_НАХЛЁСТА_СЛЕВА_ММ,
                    LONG_SEAM_TENT_RIGHT СПРАВА_ММ, DEPOSIT_DESCRIPTION ПРОДУКТЫ_КОРРОЗИИ, SURFACE_CL ПОВЕРХНОСТЬ_ТРУБЫ,
                    PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE,
                    REF_GIRTH_WELD, DIST_FROM_GIRTH_WELD, FEATURE_NUMBER, ORIENTATION, SITE_ID, DEFECT_TYPE_CL,
                    AXIAL_LENGTH, CIRCUM_LENGTH, MAX_WIDTH, DISBOND_DRY_LF, LONG_SEAM_TENT_LEFT, LONG_SEAM_TENT_RIGHT,
                    DEPOSIT_DESCRIPTION, SURFACE_CL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((REF_GIRTH_WELD)::text , 'НЕИЗВЕСТНО') REF_GIRTH_WELD,
                    coalesce((DIST_FROM_GIRTH_WELD)::text , 'НЕИЗВЕСТНО') DIST_FROM_GIRTH_WELD,
                    coalesce((FEATURE_NUMBER)::text , 'НЕИЗВЕСТНО') FEATURE_NUMBER, coalesce((ORIENTATION)::text ,
                    'НЕИЗВЕСТНО') ORIENTATION, coalesce((SITE_ID)::text , 'НЕИЗВЕСТНО') SITE_ID,
                    coalesce((DEFECT_TYPE_CL)::text , 'НЕИЗВЕСТНО') DEFECT_TYPE_CL, coalesce((AXIAL_LENGTH)::text ,
                    'НЕИЗВЕСТНО') AXIAL_LENGTH, coalesce((CIRCUM_LENGTH)::text , 'НЕИЗВЕСТНО') CIRCUM_LENGTH,
                    coalesce((MAX_WIDTH)::text , 'НЕИЗВЕСТНО') MAX_WIDTH, coalesce((DISBOND_DRY_LF)::text ,
                    'НЕИЗВЕСТНО') DISBOND_DRY_LF, coalesce((LONG_SEAM_TENT_LEFT)::text , 'НЕИЗВЕСТНО')
                    LONG_SEAM_TENT_LEFT, coalesce((LONG_SEAM_TENT_RIGHT)::text , 'НЕИЗВЕСТНО') LONG_SEAM_TENT_RIGHT,
                    coalesce((DEPOSIT_DESCRIPTION)::text , 'НЕИЗВЕСТНО') DEPOSIT_DESCRIPTION,
                    coalesce((SURFACE_CL)::text , 'НЕИЗВЕСТНО') SURFACE_CL, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.PI_CORROSION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CP_INSPECTION" schema="PODS" id="PODS_PI_CP_INSPECTION" comment="PODS.PI_CP_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, CRITERIA_CL КРИТЕРИЙ_ОЦЕНКИ,
                    (select description from PODS.CP_TYPE_CL where TYPE_CL=code) ВИД_КОНТРОЛЯ, (select description from
                    PODS.CP_RESULT_CL where RESULT_CL=code) ВИД_ЗАКЛЮЧЕНИЯ, NOMINAL_SPACING ШАГ_ИЗМЕРЕНИЯ_М, (select
                    description from PODS.CP_TOOL_CL where TOOL_CL=code) ТИП_ИЗМЕРИТЕЛЬНОГО_ПРИБОРА, PI_EVENT_ID
                    ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, CRITERIA_CL,
                    TYPE_CL, RESULT_CL, NOMINAL_SPACING, TOOL_CL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((CRITERIA_CL)::text ,
                    'НЕИЗВЕСТНО') CRITERIA_CL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((RESULT_CL)::text , 'НЕИЗВЕСТНО') RESULT_CL, coalesce((NOMINAL_SPACING)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_SPACING, coalesce((TOOL_CL)::text , 'НЕИЗВЕСТНО') TOOL_CL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_INSPECTION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CP_READING" schema="PODS" id="PODS_PI_CP_READING" comment="PODS.PI_CP_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, PI_CP_READING_ID ИДЕНТИФИКАТОР_ИЗМЕРЕНИЯ, (select description
                    from PODS.PI_CP_READING_TYPE_CL where TYPE_CL=code) ТИП_ИЗМЕРЕНИЯ, INSPECTION_DATE
                    ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В, CURRENT_READING
                    СИЛА_ТОКА_А, RESISTANCE_READING ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ, PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ, PS_ON
                    ПОТЕНЦИАЛ_ПОЛЯРИЗАЦ_ВКЛЮЧЕНИЯ, PS_OFF ПОТЕНЦИАЛ_ПОЛЯРИЗАЦ_ОТКЛЮЧЕНИЯ, REF_TEST_LEAD_EVENT_ID
                    ПЕРЕЙТИ_К_КИП, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ, ID, PI_CP_READING_ID, PI_CP_READING_GUID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    INSPECTION_DATE, DESCRIPTION, POTENTIAL_READING, CURRENT_READING, RESISTANCE_READING,
                    PI_CP_EVENT_ID, PI_CP_EVENT_GUID, PS_ON, PS_OFF, REF_TEST_LEAD_EVENT_ID, REF_TEST_LEAD_EVENT_GUID,
                    SOURCE_GCL, COMMENTS, GRAD_ON, GRAD_OFF, D_GRAD, DD_GRAD FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((PI_CP_READING_ID)::text , 'НЕИЗВЕСТНО') PI_CP_READING_ID,
                    coalesce((PI_CP_READING_GUID)::text , 'НЕИЗВЕСТНО') PI_CP_READING_GUID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО')
                    INSPECTION_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((POTENTIAL_READING)::text , 'НЕИЗВЕСТНО') POTENTIAL_READING,
                    coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((PS_ON)::text , 'НЕИЗВЕСТНО') PS_ON,
                    coalesce((PS_OFF)::text , 'НЕИЗВЕСТНО') PS_OFF, coalesce((REF_TEST_LEAD_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') REF_TEST_LEAD_EVENT_ID, coalesce((REF_TEST_LEAD_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_TEST_LEAD_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((GRAD_ON)::text , 'НЕИЗВЕСТНО')
                    GRAD_ON, coalesce((GRAD_OFF)::text , 'НЕИЗВЕСТНО') GRAD_OFF, coalesce((D_GRAD)::text , 'НЕИЗВЕСТНО')
                    D_GRAD, coalesce((DD_GRAD)::text , 'НЕИЗВЕСТНО') DD_GRAD
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CP_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_CRACK" schema="PODS" id="PODS_PI_CRACK" comment="PODS.PI_CRACK">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА,INSPECTION_DATE ДАТА_ИЗМЕРЕНИЯ, ORIENTATION ОРИЕНТАЦИЯ, (select
                    description from PODS.CRACK_TYPE_CL where TYPE_CL=code) ТИП_ТРЕЩИНЫ,CORROSION_PRESENT_LF
                    НАЛИЧИЕ_КОРРОЗИИ,AXIAL_LENGTH ДЛИНА_ПО_ОСИ_ТРУБЫ_М,CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_ММ, MAX_WIDTH
                    ШИРИНА_В_РАЗВЕРТКЕ_ММ, MAX_DEPTH МАКСИМАЛЬНАЯ_ГЛУБИНА_ММ,AVG_DEPTH СРЕДНЯЯ_ГЛУБИНА_ММ,(select
                    description from PODS.WT_MEASUREMENT_METHOD_CL where MEASUREMENT_METHOD_CL=code)
                    МЕТОД_ИЗМЕР_ТОЛЩИНЫ_СТЕНКИ,TIP_TO_TIP_DIST РАССТ_МЕЖДУ_КОН_ТРЕЩ_ММ,SIDE_TO_SIDE_SEPARATION
                    ШИРИНА_РАСКРЫТИЯ_ММ,SIDE_TO_SIDE_TO_WT_RATIO ОТНОШ_РАСКРЫТ_К_ТОЛЩ_СТЕНКИ,LINEAR_AT_WELD_TOE_FLAG_LF
                    НА_ПРОДОЛЬНОМ_ШВЕ,SIGNIFICANT_CRACK_LF КРИТИЧЕСКАЯ_ТРЕЩИНА,INTERLINKING_LF
                    РАЗВЕТВЛЕНИЕ,FAILURE_PRESSURE ПРЕДЕЛЬНОЕ_ДАВЛЕНИЕ_КПА,(select description from
                    PODS.FAILURE_ALGORITHM_GCL where FAILURE_ALGORITHM_GCL=code) КАТ_ПРЕДЕЛЬНОГО_СОСТОЯНИЯ,(select
                    description from PODS.WT_MEASUREMENT_METHOD_CL where WT_MEASUREMENT_METHOD_CL=code)
                    МЕТОД_ИЗМЕР_ТОЛЩ_СТЕНКИ,METALOGRAPHY МЕТОД_МЕТАЛЛОГРАФИИ,PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION
                    ОПИСАНИЕ,(select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, ORIENTATION, TYPE_CL, CORROSION_PRESENT_LF,
                    AXIAL_LENGTH, CIRCUM_LENGTH, MAX_WIDTH, MAX_DEPTH, AVG_DEPTH, MEASUREMENT_METHOD_CL,
                    TIP_TO_TIP_DIST, SIDE_TO_SIDE_SEPARATION, SIDE_TO_SIDE_TO_WT_RATIO, LINEAR_AT_WELD_TOE_FLAG_LF,
                    SIGNIFICANT_CRACK_LF, INTERLINKING_LF, FAILURE_PRESSURE, FAILURE_ALGORITHM_GCL,
                    WT_MEASUREMENT_METHOD_CL, METALOGRAPHY, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((ORIENTATION)::text ,
                    'НЕИЗВЕСТНО') ORIENTATION, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((CORROSION_PRESENT_LF)::text , 'НЕИЗВЕСТНО') CORROSION_PRESENT_LF,
                    coalesce((AXIAL_LENGTH)::text , 'НЕИЗВЕСТНО') AXIAL_LENGTH, coalesce((CIRCUM_LENGTH)::text ,
                    'НЕИЗВЕСТНО') CIRCUM_LENGTH, coalesce((MAX_WIDTH)::text , 'НЕИЗВЕСТНО') MAX_WIDTH,
                    coalesce((MAX_DEPTH)::text , 'НЕИЗВЕСТНО') MAX_DEPTH, coalesce((AVG_DEPTH)::text , 'НЕИЗВЕСТНО')
                    AVG_DEPTH, coalesce((MEASUREMENT_METHOD_CL)::text , 'НЕИЗВЕСТНО') MEASUREMENT_METHOD_CL,
                    coalesce((TIP_TO_TIP_DIST)::text , 'НЕИЗВЕСТНО') TIP_TO_TIP_DIST,
                    coalesce((SIDE_TO_SIDE_SEPARATION)::text , 'НЕИЗВЕСТНО') SIDE_TO_SIDE_SEPARATION,
                    coalesce((SIDE_TO_SIDE_TO_WT_RATIO)::text , 'НЕИЗВЕСТНО') SIDE_TO_SIDE_TO_WT_RATIO,
                    coalesce((LINEAR_AT_WELD_TOE_FLAG_LF)::text , 'НЕИЗВЕСТНО') LINEAR_AT_WELD_TOE_FLAG_LF,
                    coalesce((SIGNIFICANT_CRACK_LF)::text , 'НЕИЗВЕСТНО') SIGNIFICANT_CRACK_LF,
                    coalesce((INTERLINKING_LF)::text , 'НЕИЗВЕСТНО') INTERLINKING_LF, coalesce((FAILURE_PRESSURE)::text
                    , 'НЕИЗВЕСТНО') FAILURE_PRESSURE, coalesce((FAILURE_ALGORITHM_GCL)::text , 'НЕИЗВЕСТНО')
                    FAILURE_ALGORITHM_GCL, coalesce((WT_MEASUREMENT_METHOD_CL)::text , 'НЕИЗВЕСТНО')
                    WT_MEASUREMENT_METHOD_CL, coalesce((METALOGRAPHY)::text , 'НЕИЗВЕСТНО') METALOGRAPHY,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_CRACK t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_DEBRIS" schema="PODS" id="PODS_PI_DEBRIS" comment="PODS.PI_DEBRIS">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.PI_DEBRIS_TYPE_CL where TYPE_CL=code) ТИП_ОТХОДОВ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,EVENT_ID,EVENT_GUID,INSPECTION_DATE,TYPE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_DEBRIS t) d WHERE {FILTER} ) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_ENVIRONMENT" schema="PODS" id="PODS_PI_ENVIRONMENT" comment="PODS.PI_ENVIRONMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, PERFORMED_BY ИСПОЛНИТЕЛЬ,
                    (select description from PODS.PIPELINE_LOCATION_CL where PIPELINE_LOCATION_CL=code)
                    СПОСОБ_ПРОКЛ_ТРУБ, AMBIENT_TEMPERATURE ТЕМПЕРАТУРА_ОКР_СРЕДЫ_Г_С, PIPELINE_TEMPERATURE
                    ТЕМПЕРАТУРА_ТРУБЫ_ГРАДУС_С, (select description from PODS.TERRAIN_CL where TERRAIN_CL=code)
                    ТИП_ЛАНДШАФТА, FAULT_ZONE_LF ЗОНА_ТЕКТОНИЧ_РАЗРЫВОВ, (select description from PODS.STABILITY_CL
                    where STABILITY_CL=code) ХАРАКТЕР_СТАБИЛ_ГРУНТА, (select description from PODS.SURFACE_DRAINAGE_CL
                    where SURFACE_DRAINAGE_CL=code) ХАРАКТЕР_ПОВЕРХ_СТОКА, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,
                    ID,EVENT_ID,EVENT_GUID,INSPECTION_DATE,PERFORMED_BY,PIPELINE_LOCATION_CL,AMBIENT_TEMPERATURE,PIPELINE_TEMPERATURE,TERRAIN_CL,FAULT_ZONE_LF,STABILITY_CL,SURFACE_DRAINAGE_CL,PI_EVENT_ID,PI_EVENT_GUID,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((PERFORMED_BY)::text , 'НЕИЗВЕСТНО') PERFORMED_BY,
                    coalesce((PIPELINE_LOCATION_CL)::text , 'НЕИЗВЕСТНО') PIPELINE_LOCATION_CL,
                    coalesce((AMBIENT_TEMPERATURE)::text , 'НЕИЗВЕСТНО') AMBIENT_TEMPERATURE,
                    coalesce((PIPELINE_TEMPERATURE)::text , 'НЕИЗВЕСТНО') PIPELINE_TEMPERATURE,
                    coalesce((TERRAIN_CL)::text , 'НЕИЗВЕСТНО') TERRAIN_CL, coalesce((FAULT_ZONE_LF)::text ,
                    'НЕИЗВЕСТНО') FAULT_ZONE_LF, coalesce((STABILITY_CL)::text , 'НЕИЗВЕСТНО') STABILITY_CL,
                    coalesce((SURFACE_DRAINAGE_CL)::text , 'НЕИЗВЕСТНО') SURFACE_DRAINAGE_CL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_ENVIRONMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_EXCAVATION" schema="PODS" id="PODS_PI_EXCAVATION" comment="PODS.PI_EXCAVATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, EXCAVATION_PROJECT_ID ИДЕНТИФ_РАБОЧЕЙ_ДОКУМЕНТ, INSPECTION_DATE
                    ДАТА_ОБСЛЕДОВАНИЯ, SITE_NAME НАИМЕНОВАНИЕ_ШУРФА, SITE_DESCRIPTION ОПИСАНИЕ_ШУРФА, EXCAVATION_DATE
                    ДАТА_ВСКРЫТИЯ_ТРАНШЕИ, EXCAVATION_CONTRACTOR ПОДРЯДЧИК_НА_ШУРФОВКУ, MPI_CONTRACTOR
                    ПОДРЯДЧИК_НА_ОБСЛЕДОВАНИЕ, MPI_METHOD_CL МЕТОД_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.SURFACE_PREP_METHOD_CL where SURFACE_PREP_METHOD_CL=code) СПОСОБ_РАЗРАБОТКИ_ТРАНШЕИ,
                    PIPE_EXCAVATED_TOP_LF ВСКРЫТИЕ_ВЕРХА_ТРУБЫ, PIPE_EXCAVATED_LEFT_LF ВСКРЫТИЕ_ЛЕВОЙ_СТЕНКИ,
                    PIPE_EXCAVATED_RIGHT_LF ВСКРЫТИЕ_ПРАВОЙ_СТЕНКИ, PIPE_EXCAVATED_BOTTOM_LF ВСКРЫТИЕ_НИЗА_ТРУБЫ,
                    PI_EVENT_ID ОБСЛЕДОВАНИЕ, (select description from PODS.EXCAVATION_RESPONSE_CL where
                    RESPONSE_CL=code) ВИД_ЗАКЛЮЧЕНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,EVENT_ID,EVENT_GUID,EXCAVATION_PROJECT_ID,INSPECTION_DATE,SITE_NAME,SITE_DESCRIPTION,EXCAVATION_DATE,EXCAVATION_CONTRACTOR,MPI_CONTRACTOR,MPI_METHOD_CL,SURFACE_PREP_METHOD_CL,PIPE_EXCAVATED_TOP_LF,PIPE_EXCAVATED_LEFT_LF,PIPE_EXCAVATED_RIGHT_LF,PIPE_EXCAVATED_BOTTOM_LF,PI_EVENT_ID,PI_EVENT_GUID,RESPONSE_CL,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((EXCAVATION_PROJECT_ID)::text , 'НЕИЗВЕСТНО') EXCAVATION_PROJECT_ID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((SITE_NAME)::text ,
                    'НЕИЗВЕСТНО') SITE_NAME, coalesce((SITE_DESCRIPTION)::text , 'НЕИЗВЕСТНО') SITE_DESCRIPTION,
                    coalesce((EXCAVATION_DATE)::text , 'НЕИЗВЕСТНО') EXCAVATION_DATE,
                    coalesce((EXCAVATION_CONTRACTOR)::text , 'НЕИЗВЕСТНО') EXCAVATION_CONTRACTOR,
                    coalesce((MPI_CONTRACTOR)::text , 'НЕИЗВЕСТНО') MPI_CONTRACTOR, coalesce((MPI_METHOD_CL)::text ,
                    'НЕИЗВЕСТНО') MPI_METHOD_CL, coalesce((SURFACE_PREP_METHOD_CL)::text , 'НЕИЗВЕСТНО')
                    SURFACE_PREP_METHOD_CL, coalesce((PIPE_EXCAVATED_TOP_LF)::text , 'НЕИЗВЕСТНО')
                    PIPE_EXCAVATED_TOP_LF, coalesce((PIPE_EXCAVATED_LEFT_LF)::text , 'НЕИЗВЕСТНО')
                    PIPE_EXCAVATED_LEFT_LF, coalesce((PIPE_EXCAVATED_RIGHT_LF)::text , 'НЕИЗВЕСТНО')
                    PIPE_EXCAVATED_RIGHT_LF, coalesce((PIPE_EXCAVATED_BOTTOM_LF)::text , 'НЕИЗВЕСТНО')
                    PIPE_EXCAVATED_BOTTOM_LF, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((RESPONSE_CL)::text ,
                    'НЕИЗВЕСТНО') RESPONSE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_EXCAVATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_GIRTH_WELD" schema="PODS" id="PODS_PI_GIRTH_WELD" comment="PODS.PI_GIRTH_WELD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, WELD_THICKNESS
                    ТОЛЩ_СВАР_ШВА_ММ, (select description from PODS.WELD_CONDITION_GCL where WELD_CONDITION_GCL=code)
                    ВИД_ЗАКЛЮЧЕНИЯ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, INSPECTION_DATE,
                    WELD_THICKNESS, WELD_CONDITION_GCL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, COMMENTS,
                    EVENT_ID, EVENT_GUID FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((WELD_THICKNESS)::text ,
                    'НЕИЗВЕСТНО') WELD_THICKNESS, coalesce((WELD_CONDITION_GCL)::text , 'НЕИЗВЕСТНО')
                    WELD_CONDITION_GCL, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_GIRTH_WELD t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_GROUND_BED_READING" schema="PODS" id="PODS_PI_GROUND_BED_READING"
          comment="PODS.PI_GROUND_BED_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,
                    POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В, CURRENT_READING СИЛА_ТОКА_А, RESISTANCE_READING
                    ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ, PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ, REF_GROUND_BED_EVENT_ID
                    ПЕРЕЙТИ_К_АНОД_ЗАЗЕМЛЕНИЮ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, DESCRIPTION,
                    POTENTIAL_READING, CURRENT_READING, RESISTANCE_READING, PI_CP_EVENT_ID, PI_CP_EVENT_GUID,
                    REF_GROUND_BED_EVENT_ID, REF_GROUND_BED_EVENT_GUID, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((POTENTIAL_READING)::text , 'НЕИЗВЕСТНО') POTENTIAL_READING,
                    coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((REF_GROUND_BED_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_GROUND_BED_EVENT_ID, coalesce((REF_GROUND_BED_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_GROUND_BED_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_GROUND_BED_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIG_SIGNAL" schema="PODS" id="PODS_PIG_SIGNAL" comment="PODS.PIG_SIGNAL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PIG_SIGNAL_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from PODS.PIG_SIGNAL_TYPE_CL where
                    TYPE_CL=code) ТИП_ДАТЧИКА, REMOTE_LF ДАТЧИК_ПОДКЛЮЧЕН_К_SCADA, TRAP_LF ДАТЧ_КАМЕР_ПР_ЗАП,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID,
                    MANUFACTURER_CL, TYPE_CL, REMOTE_LF, TRAP_LF, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((REMOTE_LF)::text , 'НЕИЗВЕСТНО') REMOTE_LF, coalesce((TRAP_LF)::text , 'НЕИЗВЕСТНО')
                    TRAP_LF, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIG_SIGNAL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_IC_COUPON_READING" schema="PODS" id="PODS_PI_IC_COUPON_READING" comment="PODS.PI_IC_COUPON_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,
                    MASS_AT_INSPECTION МАССА_ПЛАСТ_ПРИ_ОСМОТРЕ_КГ, SURFACE_AREA_AT_INSPECTION
                    ПЛОЩАДЬ_ПЛАСТ_ПРИ_ОСМОТРЕ_СМ2, REF_COUPON_ID ПЕРЕЙТИ_К_КОНТР_ПЛАСТИНЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, INSPECTION_DATE, DESCRIPTION, MASS_AT_INSPECTION, SURFACE_AREA_AT_INSPECTION,
                    REF_COUPON_ID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((MASS_AT_INSPECTION)::text ,
                    'НЕИЗВЕСТНО') MASS_AT_INSPECTION, coalesce((SURFACE_AREA_AT_INSPECTION)::text , 'НЕИЗВЕСТНО')
                    SURFACE_AREA_AT_INSPECTION, coalesce((REF_COUPON_ID)::text , 'НЕИЗВЕСТНО') REF_COUPON_ID,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_IC_COUPON_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_LEAK_SURVEY" schema="PODS" id="PODS_PI_LEAK_SURVEY" comment="PODS.PI_LEAK_SURVEY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.LEAK_SURVEY_TYPE_CL where TYPE_CL=code) ТИП_ОБСЛЕДОВАНИЯ, NOMINAL_SPACING ШАГ_ИЗМЕРЕНИЯ_М,
                    LS_TOOL_ID ИДЕНТИФ_ГАЗОИЗМЕРИТ_ПРИБОРА, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    EVENT_ID, EVENT_GUID, INSPECTION_DATE, TYPE_CL, NOMINAL_SPACING, LS_TOOL_ID, PI_EVENT_ID,
                    PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_SPACING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_SPACING, coalesce((LS_TOOL_ID)::text , 'НЕИЗВЕСТНО') LS_TOOL_ID,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LEAK_SURVEY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_LEAK_SURVEY_READING" schema="PODS" id="PODS_PI_LEAK_SURVEY_READING"
          comment="PODS.PI_LEAK_SURVEY_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, MEASUREMENT
                    ГЛУБИНА_ЗАЛОЖЕНИЯ_М, (select description from PODS.DETECTED_PRODUCT_CL where
                    DETECTED_PRODUCT_CL=code) ВИД_ОБНАРУЖ_ПРОДУКТА, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, MEASUREMENT, DETECTED_PRODUCT_CL,
                    PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((MEASUREMENT)::text , 'НЕИЗВЕСТНО') MEASUREMENT, coalesce((DETECTED_PRODUCT_CL)::text ,
                    'НЕИЗВЕСТНО') DETECTED_PRODUCT_CL, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LEAK_SURVEY_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_LONG_WELD" schema="PODS" id="PODS_PI_LONG_WELD" comment="PODS.PI_LONG_WELD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, WELD_THICKNESS
                    ТОЛЩ_СВАРНОГО_ШВА_ММ, (select description from PODS.WELD_CONDITION_GCL where
                    WELD_CONDITION_GCL=code) ВИД_ЗАКЛЮЧЕНИЯ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    EVENT_ID, EVENT_GUID, INSPECTION_DATE, WELD_THICKNESS, WELD_CONDITION_GCL, PI_EVENT_ID,
                    PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((WELD_THICKNESS)::text , 'НЕИЗВЕСТНО') WELD_THICKNESS, coalesce((WELD_CONDITION_GCL)::text
                    , 'НЕИЗВЕСТНО') WELD_CONDITION_GCL, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_LONG_WELD t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_MARINE_GROWTH" schema="PODS" id="PODS_PI_MARINE_GROWTH" comment="PODS.PI_MARINE_GROWTH">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.PERCENT_COVERAGE_CL where PERCENT_COVERAGE_CL=code) СТЕПЕНЬ_ОБРАСТАНИЯ, (select description
                    from PODS.MARINE_GROWTH_TYPE_CL where TYPE_CL=code) ВИД_ОБРАСТАНИЯ, PI_EVENT_ID ОБСЛЕДОВАНИЕ,
                    DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE,
                    PERCENT_COVERAGE_CL, TYPE_CL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((PERCENT_COVERAGE_CL)::text , 'НЕИЗВЕСТНО')
                    PERCENT_COVERAGE_CL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((PI_EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MARINE_GROWTH t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_MATERIAL_DEFECT" schema="PODS" id="PODS_PI_MATERIAL_DEFECT" comment="PODS.PI_MATERIAL_DEFECT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.MATERIAL_DEFECT_TYPE_GCL where MATERIAL_DEFECT_TYPE_GCL=code) ТИП_ДЕФЕКТА, ORIENTATION
                    ОРИЕНТАЦИЯ, AXIAL_LENGTH ДЛИНА_ВДОЛЬ_ОСИ_М, CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_ММ, MAX_WIDTH
                    ШИРИНА_В_РАЗВЕРТКЕ_ММ, (select description from PODS.SURFACE_GCL where SURFACE_GCL=code)
                    ПОВЕРХНОСТЬ_ТРУБЫ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, INSPECTION_DATE, MATERIAL_DEFECT_TYPE_GCL, ORIENTATION, AXIAL_LENGTH, CIRCUM_LENGTH,
                    MAX_WIDTH, SURFACE_GCL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((MATERIAL_DEFECT_TYPE_GCL)::text , 'НЕИЗВЕСТНО')
                    MATERIAL_DEFECT_TYPE_GCL, coalesce((ORIENTATION)::text , 'НЕИЗВЕСТНО') ORIENTATION,
                    coalesce((AXIAL_LENGTH)::text , 'НЕИЗВЕСТНО') AXIAL_LENGTH, coalesce((CIRCUM_LENGTH)::text ,
                    'НЕИЗВЕСТНО') CIRCUM_LENGTH, coalesce((MAX_WIDTH)::text , 'НЕИЗВЕСТНО') MAX_WIDTH,
                    coalesce((SURFACE_GCL)::text , 'НЕИЗВЕСТНО') SURFACE_GCL, coalesce((PI_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MATERIAL_DEFECT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_MECHANICAL_DAMAGE" schema="PODS" id="PODS_PI_MECHANICAL_DAMAGE" comment="PODS.PI_MECHANICAL_DAMAGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, (select description from
                    PODS.MECHANICAL_DEFECT_TYPE_GCL where MECHANICAL_DEFECT_TYPE_GCL=code) ТИП_ДЕФЕКТА, ORIENTATION
                    ОРИЕНТАЦИЯ, AXIAL_LENGTH ДЛИНА_ВДОЛЬ_ОСИ_М, CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_ММ, WIDTH ШИРИНА_ММ,
                    PEAK_TO_PEAK_DEPTH ГЛУБИНА_СКЛАДОК_ММ, WAVE_LENGTH ДЛИНА_СКЛАДОК_ММ, PI_EVENT_ID ОБСЛЕДОВАНИЕ,
                    DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE,
                    MECHANICAL_DEFECT_TYPE_GCL, ORIENTATION, AXIAL_LENGTH, CIRCUM_LENGTH, WIDTH, PEAK_TO_PEAK_DEPTH,
                    WAVE_LENGTH, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((MECHANICAL_DEFECT_TYPE_GCL)::text , 'НЕИЗВЕСТНО')
                    MECHANICAL_DEFECT_TYPE_GCL, coalesce((ORIENTATION)::text , 'НЕИЗВЕСТНО') ORIENTATION,
                    coalesce((AXIAL_LENGTH)::text , 'НЕИЗВЕСТНО') AXIAL_LENGTH, coalesce((CIRCUM_LENGTH)::text ,
                    'НЕИЗВЕСТНО') CIRCUM_LENGTH, coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH,
                    coalesce((PEAK_TO_PEAK_DEPTH)::text , 'НЕИЗВЕСТНО') PEAK_TO_PEAK_DEPTH, coalesce((WAVE_LENGTH)::text
                    , 'НЕИЗВЕСТНО') WAVE_LENGTH, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_MECHANICAL_DAMAGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_METAL_LOSS" schema="PODS" id="PODS_PI_METAL_LOSS" comment="PODS.PI_METAL_LOSS">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, ORIENTATION ОРИЕНТАЦИЯ,
                    (select description from PODS.METAL_LOSS_TYPE_CL where TYPE_CL=code) ТИП_ДЕФЕКТА, (select
                    description from PODS.SURFACE_GCL where SURFACE_GCL=code) ПОВЕРХНОСТЬ_ТРУБЫ, AXIAL_LENGTH
                    ДЛИНА_ВДОЛЬ_ОСИ_ММ, CIRCUM_LENGTH ПО_ОКРУЖНОСТИ_ММ, MAX_WIDTH ШИРИНА_В_РАЗВЕРТКЕ_ММ, MAX_DEPTH
                    МАКС_ГЛУБИНА_ММ,FAILURE_PRESSURE ПРЕДЕЛЬНОЕ_ДАВЛЕНИЕ_КПА, (select description from
                    PODS.FAILURE_ALGORITHM_GCL where FAILURE_ALGORITHM_GCL=code) КАТЕГОРИЯ_ПРЕДЕЛ_СОСТОЯНИЯ, PI_EVENT_ID
                    ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, ORIENTATION,
                    TYPE_CL, SURFACE_GCL, AXIAL_LENGTH, CIRCUM_LENGTH, MAX_WIDTH, MAX_DEPTH, FAILURE_PRESSURE,
                    FAILURE_ALGORITHM_GCL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((ORIENTATION)::text , 'НЕИЗВЕСТНО') ORIENTATION,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((SURFACE_GCL)::text , 'НЕИЗВЕСТНО')
                    SURFACE_GCL, coalesce((AXIAL_LENGTH)::text , 'НЕИЗВЕСТНО') AXIAL_LENGTH,
                    coalesce((CIRCUM_LENGTH)::text , 'НЕИЗВЕСТНО') CIRCUM_LENGTH, coalesce((MAX_WIDTH)::text ,
                    'НЕИЗВЕСТНО') MAX_WIDTH, coalesce((MAX_DEPTH)::text , 'НЕИЗВЕСТНО') MAX_DEPTH,
                    coalesce((FAILURE_PRESSURE)::text , 'НЕИЗВЕСТНО') FAILURE_PRESSURE,
                    coalesce((FAILURE_ALGORITHM_GCL)::text , 'НЕИЗВЕСТНО') FAILURE_ALGORITHM_GCL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_METAL_LOSS t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_BEND" schema="PODS" id="PODS_PIPE_BEND" comment="PODS.PIPE_BEND">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PIPE_BEND_TYPE_CL where
                    TYPE_CL=code) ТИП_ОТВОДА, (select description from PODS.PIPE_BEND_TECHNIQUE_CL where
                    TECHNIQUE_CL=code) СПОСОБ_ГИБКИ_ТРУБ, BEND_RADIUS РАДИУС_ГИБА_М, HORIZ_ANGLE
                    УГОЛ_ИЗГИБ_В_ГОРИЗ_ПЛ_ГР, VERT_ANGLE УГОЛ_ИЗГИБ_В_ВЕРТ_ПЛОСК_ГРАДУС, (select description from
                    PODS.BEND_FABRICATOR_NAME_CL where FABRICATOR_NAME_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    TECHNIQUE_CL, BEND_RADIUS, HORIZ_ANGLE, VERT_ANGLE, FABRICATOR_NAME_CL, DATE_INSTALLED, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((TECHNIQUE_CL)::text , 'НЕИЗВЕСТНО')
                    TECHNIQUE_CL, coalesce((BEND_RADIUS)::text , 'НЕИЗВЕСТНО') BEND_RADIUS, coalesce((HORIZ_ANGLE)::text
                    , 'НЕИЗВЕСТНО') HORIZ_ANGLE, coalesce((VERT_ANGLE)::text , 'НЕИЗВЕСТНО') VERT_ANGLE,
                    coalesce((FABRICATOR_NAME_CL)::text , 'НЕИЗВЕСТНО') FABRICATOR_NAME_CL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_BEND t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_JOIN" schema="PODS" id="PODS_PIPE_JOIN" comment="PODS.PIPE_JOIN">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PIPE_JOIN_TYPE_CL where
                    TYPE_CL=code) ТИП_СОЕДИНЕНИЯ, JOIN_IDENTIFIER ТИП_НУМЕР_СОЕДИНЕНИЙ, (select description from
                    PODS.JOIN_IDENTIFIER_TYPE_CL where IDENTIFIER_TYPE_CL=code) ТИП_НУМЕР_СОЕДИНЕНИЙ, (select
                    description from PODS.PIPE_JOIN_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select description
                    from PODS.PIPE_JOIN_SPEC_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, JOIN_IDENTIFIER, IDENTIFIER_TYPE_CL, MATERIAL_CL,
                    SPECIFICATION_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((JOIN_IDENTIFIER)::text , 'НЕИЗВЕСТНО') JOIN_IDENTIFIER,
                    coalesce((IDENTIFIER_TYPE_CL)::text , 'НЕИЗВЕСТНО') IDENTIFIER_TYPE_CL, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_JOIN t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_LENGTH" schema="PODS" id="PODS_PIPE_LENGTH" comment="PODS.PIPE_LENGTH">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, LENGTH_IDENTIFIER НОМЕР_СТЫКА, HEAT_NUMBER НОМЕР_ПАРТИИ,
                    COIL_NUMBER НОМЕР_КАТУШКИ_ПОДОГРЕВА, (select description from PODS.END_TREATMENT_CL where
                    END_TREATMENT_CL=code) ВИД_ОБРАБОТ_КОНЦ_ТРУБЫ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, LENGTH_IDENTIFIER, HEAT_NUMBER, COIL_NUMBER, END_TREATMENT_CL, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((LENGTH_IDENTIFIER)::text , 'НЕИЗВЕСТНО') LENGTH_IDENTIFIER, coalesce((HEAT_NUMBER)::text ,
                    'НЕИЗВЕСТНО') HEAT_NUMBER, coalesce((COIL_NUMBER)::text , 'НЕИЗВЕСТНО') COIL_NUMBER,
                    coalesce((END_TREATMENT_CL)::text , 'НЕИЗВЕСТНО') END_TREATMENT_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_LENGTH t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_OPERATING_HISTORY" schema="PODS" id="PODS_PIPE_OPERATING_HISTORY"
          comment="PODS.PIPE_OPERATING_HISTORY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, MIN_OPERATING_PRESSURE МИН_ДАВЛ_ПРИ_ОПЕРАЦ_КПА,
                    MAX_OPERATING_PRESSURE МАКС_ДАВЛ_ПРИ_ОПЕРАЦ_КПА, MAX_PERCENT_PRESSURE МАКС_ОТНОСИТ_ДАВЛ_К_ПРЕДЕЛ,
                    MIN_OPERATING_TEMP МИН_СКОРОСТЬ_ОПЕРАЦИИ, MAX_OPERATING_TEMP МАКС_СКОРОСТЬ_ОПЕРАЦИИ, H2S_PPM
                    КОНЦЕНТ_СЕРОВОДОР_МГ_М3, MIN_VOL_FLOW_RATE МИН_РАСХОД_ПРОД_ПРИ_ОПЕРАЦ_М3, MAX_VOL_FLOW_RATE
                    МАКС_РАСХОД_ПРОД_ПРИ_ОПЕРАЦ_М3, CONTAMINANTS_PRESENT_LF ОБРАЗОВАНИЕ_ЗАГРЯЗНЕНИЙ, CONTAMINANT_MSDS_LF
                    СВЕД_ОБ_ОПАСНОСТИ_ЗАГРЯЗНЕНИЙ, DRAG_REDUCER_USED_LF ИСПОЛ_АНТИФРИКЦИОН_ПРИСАДОК,
                    DRAG_REDUCER_LAST_DATE ИСПОЛ_АНТИФРИКЦИОН_ДАТА_ВВОДА, CORROSION_INHIBITOR_USED_LF
                    ИСПОЛ_ИНГИБИТОРОВ_КОРРОЗИИ, (select description from PODS.CORROSION_INHIBITOR_TYPE_CL where
                    CORROSION_INHIBITOR_TYPE_CL=code) ТИП_ИНГИБИТОРА_КОРРОЗИИ, CORROSION_INHIBITOR_LAST_DATE
                    ИСПОЛ_ИНГИБИТОРОВ_ДАТА_ВВОДА, INTERNAL_CLEANING_PROGRAM_LF НАЛ_ПРОГРАМ_ВНУТР_ОЧИСТКИ, (select
                    description from PODS.CLEANING_FREQUENCY_CL where CLEANING_FREQUENCY_CL=code) ЧАСТОТА_ОЧИСТКИ_ТРУБ,
                    SUSPECTED_FES_LF ОБРАЗ_СЕРНИСТОГО_ЖЕЛЕЗА, VERIFIED_DATE ДАТА_РАЗРЕШЕНИЯ, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, MIN_OPERATING_PRESSURE, MAX_OPERATING_PRESSURE,
                    MAX_PERCENT_PRESSURE, MIN_OPERATING_TEMP, MAX_OPERATING_TEMP, H2S_PPM, MIN_VOL_FLOW_RATE,
                    MAX_VOL_FLOW_RATE, CONTAMINANTS_PRESENT_LF, CONTAMINANT_MSDS_LF, DRAG_REDUCER_USED_LF,
                    DRAG_REDUCER_LAST_DATE, CORROSION_INHIBITOR_USED_LF, CORROSION_INHIBITOR_TYPE_CL,
                    CORROSION_INHIBITOR_LAST_DATE, INTERNAL_CLEANING_PROGRAM_LF, CLEANING_FREQUENCY_CL,
                    SUSPECTED_FES_LF, VERIFIED_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text
                    , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text
                    , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MIN_OPERATING_PRESSURE)::text , 'НЕИЗВЕСТНО')
                    MIN_OPERATING_PRESSURE, coalesce((MAX_OPERATING_PRESSURE)::text , 'НЕИЗВЕСТНО')
                    MAX_OPERATING_PRESSURE, coalesce((MAX_PERCENT_PRESSURE)::text , 'НЕИЗВЕСТНО') MAX_PERCENT_PRESSURE,
                    coalesce((MIN_OPERATING_TEMP)::text , 'НЕИЗВЕСТНО') MIN_OPERATING_TEMP,
                    coalesce((MAX_OPERATING_TEMP)::text , 'НЕИЗВЕСТНО') MAX_OPERATING_TEMP, coalesce((H2S_PPM)::text ,
                    'НЕИЗВЕСТНО') H2S_PPM, coalesce((MIN_VOL_FLOW_RATE)::text , 'НЕИЗВЕСТНО') MIN_VOL_FLOW_RATE,
                    coalesce((MAX_VOL_FLOW_RATE)::text , 'НЕИЗВЕСТНО') MAX_VOL_FLOW_RATE,
                    coalesce((CONTAMINANTS_PRESENT_LF)::text , 'НЕИЗВЕСТНО') CONTAMINANTS_PRESENT_LF,
                    coalesce((CONTAMINANT_MSDS_LF)::text , 'НЕИЗВЕСТНО') CONTAMINANT_MSDS_LF,
                    coalesce((DRAG_REDUCER_USED_LF)::text , 'НЕИЗВЕСТНО') DRAG_REDUCER_USED_LF,
                    coalesce((DRAG_REDUCER_LAST_DATE)::text , 'НЕИЗВЕСТНО') DRAG_REDUCER_LAST_DATE,
                    coalesce((CORROSION_INHIBITOR_USED_LF)::text , 'НЕИЗВЕСТНО') CORROSION_INHIBITOR_USED_LF,
                    coalesce((CORROSION_INHIBITOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') CORROSION_INHIBITOR_TYPE_CL,
                    coalesce((CORROSION_INHIBITOR_LAST_DATE)::text , 'НЕИЗВЕСТНО') CORROSION_INHIBITOR_LAST_DATE,
                    coalesce((INTERNAL_CLEANING_PROGRAM_LF)::text , 'НЕИЗВЕСТНО') INTERNAL_CLEANING_PROGRAM_LF,
                    coalesce((CLEANING_FREQUENCY_CL)::text , 'НЕИЗВЕСТНО') CLEANING_FREQUENCY_CL,
                    coalesce((SUSPECTED_FES_LF)::text , 'НЕИЗВЕСТНО') SUSPECTED_FES_LF, coalesce((VERIFIED_DATE)::text ,
                    'НЕИЗВЕСТНО') VERIFIED_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_OPERATING_HISTORY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_SEGMENT" schema="PODS" id="PODS_PIPE_SEGMENT" comment="PODS.PIPE_SEGMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PIPE_SEGMENT_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.PIPE_MILL_LOCATION_GCL where PIPE_MILL_LOCATION_GCL=code)
                    МЕСТОПОЛ_ТРУБ_ПРОИЗВОДСТВА, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select description from
                    PODS.PIPE_SEGMENT_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select description from
                    PODS.PIPE_SPECIFICATION_GCL where PIPE_SPECIFICATION_GCL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select
                    description from PODS.PIPE_GRADE_GCL where PIPE_GRADE_GCL=code) МАРКА_СТАЛИ, (select description
                    from PODS.SMYS_GCL where SMYS_GCL=code::text) ПРЕД_ТЕКУЧ_СТ_Н_ММ2, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select
                    description from PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(select description from PODS.PIPE_LONG_SEAM_GCL where PIPE_LONG_SEAM_GCL=code)
                    ТИП_ПРОД_СВАР_ШВА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, MANUFACTURER_CL, DATE_MANUFACTURED, PIPE_MILL_LOCATION_GCL, MILL_TEST_PRESSURE,
                    MATERIAL_CL, PIPE_SPECIFICATION_GCL, PIPE_GRADE_GCL, SMYS_GCL, NOMINAL_DIAMETER_GCL,
                    NOMINAL_WALL_THICKNESS_GCL, PIPE_LONG_SEAM_GCL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((PIPE_MILL_LOCATION_GCL)::text , 'НЕИЗВЕСТНО') PIPE_MILL_LOCATION_GCL,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((PIPE_SPECIFICATION_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_SPECIFICATION_GCL, coalesce((PIPE_GRADE_GCL)::text , 'НЕИЗВЕСТНО') PIPE_GRADE_GCL,
                    coalesce((SMYS_GCL)::text , 'НЕИЗВЕСТНО') SMYS_GCL, coalesce((NOMINAL_DIAMETER_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL, coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICKNESS_GCL, coalesce((PIPE_LONG_SEAM_GCL)::text , 'НЕИЗВЕСТНО') PIPE_LONG_SEAM_GCL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PIPE_SEGMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_PIPE_CONDITION" schema="PODS" id="PODS_PI_PIPE_CONDITION" comment="PODS.PI_PIPE_CONDITION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SITE_ID ИДЕНТИФ_ГРУППЫ_ДЕФЕКТОВ, INSPECTION_DATE
                    ДАТА_ОБСЛЕДОВАНИЯ, ACTUAL_DIAMETER ФАКТИЧ_ДИАМЕТР_ММ, ACTUAL_WALL_THICKNESS
                    ФАКТИЧ_ТОЛЩИНА_СТЕНКИ_ММ, (select description from PODS.EXTERNAL_PIPE_CONDITION_CL where
                    EXTERNAL_PIPE_CONDITION_CL=code) ВИД_ЗАКЛЮЧ_О_СОСТ_НАРУЖ_СТ, (select description from
                    PODS.INTERNAL_PIPE_CONDITION_CL where INTERNAL_PIPE_CONDITION_CL=code) ВИД_ЗАКЛЮЧ_О_СОСТ_ВНУТР_СТ,
                    PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, SITE_ID,
                    INSPECTION_DATE, ACTUAL_DIAMETER, ACTUAL_WALL_THICKNESS, EXTERNAL_PIPE_CONDITION_CL,
                    INTERNAL_PIPE_CONDITION_CL, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SITE_ID)::text ,
                    'НЕИЗВЕСТНО') SITE_ID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((ACTUAL_DIAMETER)::text , 'НЕИЗВЕСТНО') ACTUAL_DIAMETER,
                    coalesce((ACTUAL_WALL_THICKNESS)::text , 'НЕИЗВЕСТНО') ACTUAL_WALL_THICKNESS,
                    coalesce((EXTERNAL_PIPE_CONDITION_CL)::text , 'НЕИЗВЕСТНО') EXTERNAL_PIPE_CONDITION_CL,
                    coalesce((INTERNAL_PIPE_CONDITION_CL)::text , 'НЕИЗВЕСТНО') INTERNAL_PIPE_CONDITION_CL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_PIPE_CONDITION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_PIPELINE_MOVEMENT" schema="PODS" id="PODS_PI_PIPELINE_MOVEMENT" comment="PODS.PI_PIPELINE_MOVEMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.DISPLACEMENT_TYPE_CL where
                    DISPLACEMENT_TYPE_CL=code) ТИП_СМЕЩЕНИЯ, (select description from PODS.DIRECTION_GCL where
                    DIRECTION_GCL=code) НАПРАВЛЕНИЕ_СМЕЩЕНИЯ, MAXIMUM_DISPLACEMENT МАКС_СМЕЩЕНИЕ_ММ, PI_EVENT_ID
                    ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, DISPLACEMENT_TYPE_CL,
                    DIRECTION_GCL, MAXIMUM_DISPLACEMENT, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((DISPLACEMENT_TYPE_CL)::text , 'НЕИЗВЕСТНО') DISPLACEMENT_TYPE_CL,
                    coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL, coalesce((MAXIMUM_DISPLACEMENT)::text
                    , 'НЕИЗВЕСТНО') MAXIMUM_DISPLACEMENT, coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID,
                    coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_PIPELINE_MOVEMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_RECTIFIER_READING" schema="PODS" id="PODS_PI_RECTIFIER_READING" comment="PODS.PI_RECTIFIER_READING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ,
                    POTENTIAL_READING ЗАЩИТНЫЙ_ПОТЕНЦИАЛ_В, CURRENT_READING СИЛА_ТОКА_А, RESISTANCE_READING
                    ПЕРЕХОДНОЕ_СОПРОТИВЛЕНИЕ_ОМ, PI_CP_EVENT_ID ОБСЛЕДОВАНИЕ, REF_RECTIFIER_EVENT_ID ПЕРЕЙТИ_К_УКЗ_УДЗ,
                    (select description from PODS.PI_RECT_READING_AC_VOLTAGE_CL where AC_VOLTAGE_CL=code::text)
                    ВИД_НАПРЯЖЕНИЯ_УКЗ_УДЗ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, DESCRIPTION,
                    POTENTIAL_READING, CURRENT_READING, RESISTANCE_READING, PI_CP_EVENT_ID, PI_CP_EVENT_GUID,
                    REF_RECTIFIER_EVENT_ID, REF_RECTIFIER_EVENT_GUID, AC_VOLTAGE_CL, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((POTENTIAL_READING)::text , 'НЕИЗВЕСТНО') POTENTIAL_READING,
                    coalesce((CURRENT_READING)::text , 'НЕИЗВЕСТНО') CURRENT_READING,
                    coalesce((RESISTANCE_READING)::text , 'НЕИЗВЕСТНО') RESISTANCE_READING,
                    coalesce((PI_CP_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_CP_EVENT_ID, coalesce((PI_CP_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_CP_EVENT_GUID, coalesce((REF_RECTIFIER_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_RECTIFIER_EVENT_ID, coalesce((REF_RECTIFIER_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_RECTIFIER_EVENT_GUID, coalesce((AC_VOLTAGE_CL)::text , 'НЕИЗВЕСТНО') AC_VOLTAGE_CL,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RECTIFIER_READING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_RELIEF_VALVE" schema="PODS" id="PODS_PI_RELIEF_VALVE" comment="PODS.PI_RELIEF_VALVE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ,
                    RELIEF_VALVE_ID ИДЕНТИФ_ИЗДЕЛИЯ_АРМАТУРЫ, PERFORMED_BY ИСПОЛНИТЕЛЬ, (select description from
                    PODS.RELIEF_VALVE_SERVICE_TYPE_CL where SERVICE_TYPE_CL=code) ТИП_ОБСЛУЖИВАНИЯ, CONTROLS_TESTED_LF
                    УПРАВЛЕНИЕ_ПРОВЕРЕНО, VALVES_CLEANED_LF ТО_КЛАПАНА_ПРОВЕДЕНО, VALVE_REPAIRED_LF
                    КЛАПАН_ОТРЕМОНТИРОВАН, CONTROLS_CLEANED_LF ТО_УПРАВЛЕНИЯ_ПРОВЕДЕНО, CONTROLS_REPAIRED_LF
                    УПРАВЛЕНИЕ_ОТРЕМОНТИРОВАНО, INITIAL_PRESSURE_SETTING ПОРОГ_НАЧ_СБРОСА_ДАВЛ_КПА,
                    FINAL_PRESSURE_SETTING ПОРОГ_ОКОНЧ_СБРОСА_ДАВЛ_КПА, PI_EVENT_ID ОБСЛЕДОВАНИЕ, ID, DESCRIPTION,
                    SOURCE_GCL, COMMENTS, EVENT_ID, EVENT_GUID, INSPECTION_DATE, RELIEF_VALVE_ID, PERFORMED_BY,
                    SERVICE_TYPE_CL, CONTROLS_TESTED_LF, VALVES_CLEANED_LF, VALVE_REPAIRED_LF, CONTROLS_CLEANED_LF,
                    CONTROLS_REPAIRED_LF, INITIAL_PRESSURE_SETTING, FINAL_PRESSURE_SETTING, PI_EVENT_ID, PI_EVENT_GUID
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text ,
                    'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((RELIEF_VALVE_ID)::text , 'НЕИЗВЕСТНО') RELIEF_VALVE_ID,
                    coalesce((PERFORMED_BY)::text , 'НЕИЗВЕСТНО') PERFORMED_BY, coalesce((SERVICE_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') SERVICE_TYPE_CL, coalesce((CONTROLS_TESTED_LF)::text , 'НЕИЗВЕСТНО')
                    CONTROLS_TESTED_LF, coalesce((VALVES_CLEANED_LF)::text , 'НЕИЗВЕСТНО') VALVES_CLEANED_LF,
                    coalesce((VALVE_REPAIRED_LF)::text , 'НЕИЗВЕСТНО') VALVE_REPAIRED_LF,
                    coalesce((CONTROLS_CLEANED_LF)::text , 'НЕИЗВЕСТНО') CONTROLS_CLEANED_LF,
                    coalesce((CONTROLS_REPAIRED_LF)::text , 'НЕИЗВЕСТНО') CONTROLS_REPAIRED_LF,
                    coalesce((INITIAL_PRESSURE_SETTING)::text , 'НЕИЗВЕСТНО') INITIAL_PRESSURE_SETTING,
                    coalesce((FINAL_PRESSURE_SETTING)::text , 'НЕИЗВЕСТНО') FINAL_PRESSURE_SETTING,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RELIEF_VALVE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_RIGHT_OF_WAY" schema="PODS" id="PODS_PI_RIGHT_OF_WAY" comment="PODS.PI_RIGHT_OF_WAY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, ACTION_REQUIRED_LF
                    ТРЕБУЕТСЯ_ПРЕДУПР_МЕРА, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, INSPECTION_DATE, ACTION_REQUIRED_LF, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((ACTION_REQUIRED_LF)::text , 'НЕИЗВЕСТНО') ACTION_REQUIRED_LF, coalesce((PI_EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_RIGHT_OF_WAY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_SOIL" schema="PODS" id="PODS_PI_SOIL" comment="PODS.PI_SOIL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, SOIL_PH
                    ВОДОРОД_ПОКАЗАТ_ГРУНТА_pH, SOIL_TEMPERATURE ТЕМПЕР_ГРУНТА_ГРАДУС_С, (select description from
                    PODS.SOIL_DEPOSITION_CL where DEPOSITION_CL=code) ТИП_НАСЛОЕНИЯ_ГРУНТА, (select description from
                    PODS.SOIL_TEXTURE_CL where TEXTURE_CL=code) ВИД_ГРУНТ_ПО_МИНЕРАЛ_СОСТАВУ, COVER_THICKNESS
                    РАСТИТЕЛЬНЫЙ_СЛОЙ_М, ORGANIC_DEPTH ГУМУСОВЫЙ_ГОРИЗОНТ_М, GLEYING_DEPTH ГЛЕЕВЫЙ_ГОРИЗОНТ_М,
                    MOTTLING_DEPTH ПЕРЕХОДНЫЙ_ГОРИЗОНТ_М, BEDROCK_DEPTH ГЛУБ_ЗАЛЕГ_КОРЕН_ПОРОД_М, CARBONATE_DEPTH
                    КАРБОНАТНЫЙ_ГОРИЗОНТ_М, WATER_TABLE_DEPTH УРОВЕНЬ_ГРУНТОВЫХ_ВОД_М, PI_EVENT_ID ОБСЛЕДОВАНИЕ, (select
                    description from PODS.SOIL_TYPE_CL where TYPE_CL=code) ТИП_ГРУНТ_ПО_ОСНОВ_МИНЕРАЛУ, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, INSPECTION_DATE, SOIL_PH, SOIL_TEMPERATURE, DEPOSITION_CL,
                    TEXTURE_CL, COVER_THICKNESS, ORGANIC_DEPTH, GLEYING_DEPTH, MOTTLING_DEPTH, BEDROCK_DEPTH,
                    CARBONATE_DEPTH, WATER_TABLE_DEPTH, PI_EVENT_ID, PI_EVENT_GUID, TYPE_CL, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((SOIL_PH)::text ,
                    'НЕИЗВЕСТНО') SOIL_PH, coalesce((SOIL_TEMPERATURE)::text , 'НЕИЗВЕСТНО') SOIL_TEMPERATURE,
                    coalesce((DEPOSITION_CL)::text , 'НЕИЗВЕСТНО') DEPOSITION_CL, coalesce((TEXTURE_CL)::text ,
                    'НЕИЗВЕСТНО') TEXTURE_CL, coalesce((COVER_THICKNESS)::text , 'НЕИЗВЕСТНО') COVER_THICKNESS,
                    coalesce((ORGANIC_DEPTH)::text , 'НЕИЗВЕСТНО') ORGANIC_DEPTH, coalesce((GLEYING_DEPTH)::text ,
                    'НЕИЗВЕСТНО') GLEYING_DEPTH, coalesce((MOTTLING_DEPTH)::text , 'НЕИЗВЕСТНО') MOTTLING_DEPTH,
                    coalesce((BEDROCK_DEPTH)::text , 'НЕИЗВЕСТНО') BEDROCK_DEPTH, coalesce((CARBONATE_DEPTH)::text ,
                    'НЕИЗВЕСТНО') CARBONATE_DEPTH, coalesce((WATER_TABLE_DEPTH)::text , 'НЕИЗВЕСТНО') WATER_TABLE_DEPTH,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_SOIL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_SUBSEA_INSPECTION" schema="PODS" id="PODS_PI_SUBSEA_INSPECTION" comment="PODS.PI_SUBSEA_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, UNIT_NUMBER
                    НОМ_ПОДВОДНОГО_АППАРАТА, MODEL МОД_ПОДВОДНОГО_АППАРАТА, CONTRACTOR_NAME ИСПОЛНИТЕЛЬ, (select
                    description from PODS.INSPECTION_TYPE_GCL where INSPECTION_TYPE_GCL=code) ТИП_ОБСЛЕДОВАНИЯ,
                    PI_EVENT_ID ОБСЛЕДОВАНИЕ, (select description from PODS.PI_SUBSEA_SENSOR_USED_CL where
                    SENSOR_USED_CL=code) ТИП_ДАТЧИКОВ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID,
                    INSPECTION_DATE, UNIT_NUMBER, MODEL, CONTRACTOR_NAME, INSPECTION_TYPE_GCL, PI_EVENT_ID,
                    PI_EVENT_GUID, SENSOR_USED_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE,
                    coalesce((UNIT_NUMBER)::text , 'НЕИЗВЕСТНО') UNIT_NUMBER, coalesce((MODEL)::text , 'НЕИЗВЕСТНО')
                    MODEL, coalesce((CONTRACTOR_NAME)::text , 'НЕИЗВЕСТНО') CONTRACTOR_NAME,
                    coalesce((INSPECTION_TYPE_GCL)::text , 'НЕИЗВЕСТНО') INSPECTION_TYPE_GCL,
                    coalesce((PI_EVENT_ID)::text , 'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_GUID, coalesce((SENSOR_USED_CL)::text , 'НЕИЗВЕСТНО') SENSOR_USED_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_SUBSEA_INSPECTION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_TANK" schema="PODS" id="PODS_PI_TANK" comment="PODS.PI_TANK">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, OFFLINE_ID ЦИСТЕРНА, (select description from
                    PODS.INSPECTION_TYPE_GCL where INSPECTION_TYPE_GCL=code) ТИП_ОБСЛЕДОВАНИЯ, NEXT_SCHEDULED_DATE
                    ДАТА_СЛЕДУЮЩЕГО_ОБСЛЕДОВАНИЯ, DESCRIPTION ОПИСАНИЕ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, OFFLINE_ID, OFFLINE_GUID, INSPECTION_TYPE_GCL, NEXT_SCHEDULED_DATE, DESCRIPTION,
                    PI_EVENT_ID, PI_EVENT_GUID, SOURCE_GCL, COMMENTS FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((INSPECTION_TYPE_GCL)::text , 'НЕИЗВЕСТНО')
                    INSPECTION_TYPE_GCL, coalesce((NEXT_SCHEDULED_DATE)::text , 'НЕИЗВЕСТНО') NEXT_SCHEDULED_DATE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((PI_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_TANK t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PI_WATER" schema="PODS" id="PODS_PI_WATER" comment="PODS.PI_WATER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, INSPECTION_DATE ДАТА_ОБСЛЕДОВАНИЯ, SAMPLE_NUMBER НОМЕР_ПРОБЫ,
                    (select description from PODS.SAMPLE_LOCATION_CL where SAMPLE_LOCATION_CL=code)
                    МЕСТОПОЛОЖЕНИЕ_ВЗЯТИЯ_ПРОБЫ, PH ВОДОРОДНЫЙ_ПОКАЗАТЕЛЬ_РH, SO2 ДИОКСИД_СЕРЫ_МГ_ДМ3, H2S
                    СЕРОВОДОРОД_МГ_ДМ3, CO2 УГЛЕКИСЛОТА_СВОБОДНАЯ_МГ_ДМ3, CARBONATE КАРБОНАТЫ_МГ_ДМ3, BICARBONATE
                    БИКАРБОНАТЫ_МГ_ДМ3, NA НАТРИЙ_МГ_ДМ3, K КАЛИЙ_МГ_ДМ3, CA КАЛЬЦИЙ_МГ_ДМ3, MG МАГНИЙ_МГ_ДМ3,
                    BACTERIA_LF НАЛИЧИЕ_БАКТЕРИЙ, PI_EVENT_ID ОБСЛЕДОВАНИЕ, DESCRIPTION ОПИСАНИЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, INSPECTION_DATE, SAMPLE_NUMBER, SAMPLE_LOCATION_CL, PH, SO2, H2S, CO2, CARBONATE,
                    BICARBONATE, NA, K, CA, MG, BACTERIA_LF, PI_EVENT_ID, PI_EVENT_GUID, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((INSPECTION_DATE)::text , 'НЕИЗВЕСТНО') INSPECTION_DATE, coalesce((SAMPLE_NUMBER)::text ,
                    'НЕИЗВЕСТНО') SAMPLE_NUMBER, coalesce((SAMPLE_LOCATION_CL)::text , 'НЕИЗВЕСТНО') SAMPLE_LOCATION_CL,
                    coalesce((PH)::text , 'НЕИЗВЕСТНО') PH, coalesce((SO2)::text , 'НЕИЗВЕСТНО') SO2,
                    coalesce((H2S)::text , 'НЕИЗВЕСТНО') H2S, coalesce((CO2)::text , 'НЕИЗВЕСТНО') CO2,
                    coalesce((CARBONATE)::text , 'НЕИЗВЕСТНО') CARBONATE, coalesce((BICARBONATE)::text , 'НЕИЗВЕСТНО')
                    BICARBONATE, coalesce((NA)::text , 'НЕИЗВЕСТНО') NA, coalesce((K)::text , 'НЕИЗВЕСТНО') K,
                    coalesce((CA)::text , 'НЕИЗВЕСТНО') CA, coalesce((MG)::text , 'НЕИЗВЕСТНО') MG,
                    coalesce((BACTERIA_LF)::text , 'НЕИЗВЕСТНО') BACTERIA_LF, coalesce((PI_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') PI_EVENT_ID, coalesce((PI_EVENT_GUID)::text , 'НЕИЗВЕСТНО') PI_EVENT_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PI_WATER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PRESSURE_CAP" schema="PODS" id="PODS_PRESSURE_CAP" comment="PODS.PRESSURE_CAP">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, PRESSURE_CAP_ID ИДЕНТИФИКАТОР_КРЫШКИ, (select description from
                    PODS.PRESSURE_CAP_TYPE_CL where TYPE_CL=code) ТИП_КРЫШКИ, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select
                    description from PODS.PRESSURE_CAP_SPECIFICATION_CL where SPECIFICATION_CL=code)
                    ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select description from PODS.PRESSURE_CAP_MATERIAL_CL where
                    MATERIAL_CL=code) МАТЕРИАЛ, (select description from PODS.PRESSURE_CAP_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМЕР,PART_NUMBER НОМЕР_ПАРТИИ,DESIGN_MIN_TEMPERATURE МИН_РАБ_ТЕМПЕРАТУРА_ГРАДУС,
                    DESIGN_MAX_TEMPERATURE МАКС_РАБ_ТЕМПЕРАТУРА_ГРАДУС, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, PRESSURE_CAP_ID, TYPE_CL, NOMINAL_DIAMETER_GCL,
                    SPECIFICATION_CL, MATERIAL_CL, MANUFACTURER_CL, DATE_MANUFACTURED, SERIAL_NUMBER, PART_NUMBER,
                    DESIGN_MIN_TEMPERATURE, DESIGN_MAX_TEMPERATURE, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE,
                    DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((PRESSURE_CAP_ID)::text , 'НЕИЗВЕСТНО') PRESSURE_CAP_ID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_DIAMETER_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО')
                    SPECIFICATION_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text
                    , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER,
                    coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((DESIGN_MIN_TEMPERATURE)::text ,
                    'НЕИЗВЕСТНО') DESIGN_MIN_TEMPERATURE, coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО')
                    DESIGN_MAX_TEMPERATURE, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_PRESSURE_RATING, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRESSURE_CAP t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PRESSURE_MEASUREMENT" schema="PODS" id="PODS_PRESSURE_MEASUREMENT" comment="PODS.PRESSURE_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, PRESSURE ДАВЛЕНИЕ_КПА, (select description from
                    PODS.PRESSURE_MEASURE_METHOD_CL where METHOD_CL=code) МЕТОД_ИЗМЕРЕНИЯ_ДАВЛЕНИЯ,
                    MEASUREMENT_STATION_NAME НАИМЕН_ГАЗОИЗМ_СТАНЦ_ИЛИ_ДАТЧ, DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ,
                    DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, PRESSURE, METHOD_CL,
                    MEASUREMENT_STATION_NAME, DETERMINATION_DATE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((PRESSURE)::text , 'НЕИЗВЕСТНО')
                    PRESSURE, coalesce((METHOD_CL)::text , 'НЕИЗВЕСТНО') METHOD_CL,
                    coalesce((MEASUREMENT_STATION_NAME)::text , 'НЕИЗВЕСТНО') MEASUREMENT_STATION_NAME,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRESSURE_MEASUREMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PRODUCT_RANGE" schema="PODS" id="PODS_PRODUCT_RANGE" comment="PODS.PRODUCT_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PRODUCT_TYPE_SCL where
                    PRODUCT_TYPE_SCL=code) ТИП_ПРОДУКТА, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID,
                    PRODUCT_TYPE_SCL, PRODUCT_SUBTYPE_SCL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((PRODUCT_TYPE_SCL)::text ,
                    'НЕИЗВЕСТНО') PRODUCT_TYPE_SCL, coalesce((PRODUCT_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО')
                    PRODUCT_SUBTYPE_SCL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PRODUCT_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PROFILE" schema="PODS" id="PODS_PROFILE" comment="PODS.PROFILE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.PROFILE_TYPE_CL where
                    TYPE_CL=code) ТИП_ПРОФИЛЯ, ELEVATION ВЫСОТА, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, ACTIVE_INDICATOR_LF АКТУАЛЬНОСТЬ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, ELEVATION, ELEVATION_OUOM, DESCRIPTION, SOURCE_GCL,
                    ACTIVE_INDICATOR_LF, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((ELEVATION)::text ,
                    'НЕИЗВЕСТНО') ELEVATION, coalesce((ELEVATION_OUOM)::text , 'НЕИЗВЕСТНО') ELEVATION_OUOM,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((ACTIVE_INDICATOR_LF)::text , 'НЕИЗВЕСТНО') ACTIVE_INDICATOR_LF,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.PROFILE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="RECTIFIER" schema="PODS" id="PODS_RECTIFIER" comment="PODS.RECTIFIER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, RECTIFIER_ID ИДЕНТИФИКАТОР_УКЗ_УДЗ, AMP_RATING
                    НОМИНАЛЬНЫЙ_ТОК_А, (select description from PODS.RECTIFIER_TYPE_CL where TYPE_CL=code) ТИП_УКЗ_УДЗ,
                    (select description from PODS.RECTIFIER_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DESCRIPTION ОПИСАНИЕ, VOLT_RATING НОМИНАЛ_НАПРЯЖЕНИЕ_МВ, MODEL_NUMBER МОДЕЛЬ,
                    (select description from PODS.SHUNT_TYPE_CL where SHUNT_TYPE_CL=code) ТИП_ШУНТА,(select description
                    from PODS.LIGHTNING_ARRESTOR_TYPE_CL where LIGHTNING_ARRESTOR_TYPE_CL=code) ТИП_МОЛНИЕОТВОДА,
                    (select description from PODS.COOLING_SYSTEM_CL where COOLING_SYSTEM_CL=code)
                    ТИП_СИСТЕМЫ_ОХЛАЖДЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DIODE_NUMBER КОЛИЧЕСТВО_ДИОДОВ,
                    STACK_SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР_ВЫПРЯМИТЕЛЯ, STACK_FUSE_SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМ_ПРЕДОХРАН_ВЫПРЯМ, REF_RECT_ENCLOSURE_EVENT_ID ПЕРЕЙТИ_К_КОРПУСУ_УКЗ_УДЗ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    EVENT_ID, EVENT_GUID, RECTIFIER_ID, AMP_RATING, TYPE_CL, MANUFACTURER_CL, DESCRIPTION, VOLT_RATING,
                    MODEL_NUMBER, SHUNT_TYPE_CL, LIGHTNING_ARRESTOR_TYPE_CL, COOLING_SYSTEM_CL, DATE_INSTALLED,
                    DIODE_NUMBER, STACK_SERIAL_NUMBER, STACK_FUSE_SERIAL_NUMBER, REF_RECT_ENCLOSURE_EVENT_ID,
                    REF_RECT_ENCLOSURE_EVENT_GUID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((RECTIFIER_ID)::text , 'НЕИЗВЕСТНО') RECTIFIER_ID,
                    coalesce((AMP_RATING)::text , 'НЕИЗВЕСТНО') AMP_RATING, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((VOLT_RATING)::text ,
                    'НЕИЗВЕСТНО') VOLT_RATING, coalesce((MODEL_NUMBER)::text , 'НЕИЗВЕСТНО') MODEL_NUMBER,
                    coalesce((SHUNT_TYPE_CL)::text , 'НЕИЗВЕСТНО') SHUNT_TYPE_CL,
                    coalesce((LIGHTNING_ARRESTOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') LIGHTNING_ARRESTOR_TYPE_CL,
                    coalesce((COOLING_SYSTEM_CL)::text , 'НЕИЗВЕСТНО') COOLING_SYSTEM_CL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DIODE_NUMBER)::text ,
                    'НЕИЗВЕСТНО') DIODE_NUMBER, coalesce((STACK_SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО')
                    STACK_SERIAL_NUMBER, coalesce((STACK_FUSE_SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО')
                    STACK_FUSE_SERIAL_NUMBER, coalesce((REF_RECT_ENCLOSURE_EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    REF_RECT_ENCLOSURE_EVENT_ID, coalesce((REF_RECT_ENCLOSURE_EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    REF_RECT_ENCLOSURE_EVENT_GUID, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.RECTIFIER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="RECTIFIER_ENCLOSURE" schema="PODS" id="PODS_RECTIFIER_ENCLOSURE" comment="PODS.RECTIFIER_ENCLOSURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, RECTIFIER_ENCLOSURE_ID ИДЕНТИФ_КОРПУСА_УКЗ_УДЗ, (select
                    description from PODS.RECTIFIER_ENCLOSURE_TYPE_CL where TYPE_CL=code) ТИП_КОРПУСА_УКЗ_УДЗ, (select
                    description from PODS.RECTIFIER_ENCLOSURE_MFGR_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    (select description from PODS.RECTIFIER_POWER_BILL_SOURCE_CL where POWER_BILLING_SOURCE_CL=code)
                    ТИП_ИСТОЧНИКА_ЭЛЕКТРОЭНЕРГИИ, DESCRIPTION ОПИСАНИЕ, NAME НАИМЕНОВАНИЕ, MODEL_NUMBER МОДЕЛЬ,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select description from PODS.CABLE_INSULATION_TYPE_GCL where
                    NEG_CABLE_INSULATION_TYPE_GCL=code) ТИП_ИЗОЛЯЦИИ_ОСНОВНОГО_КАБЕЛЯ, (select description from
                    PODS.CABLE_GAUGE_GCL where NEG_CABLE_GAUGE_GCL=code) ТИПОРАЗМЕР_ОСНОВНОГО_КАБЕЛЯ, (select
                    description from PODS.CABLE_INSULATION_COLOR_GCL where NEG_CABLE_INSULATION_COLOR_GCL=code)
                    ЦВЕТ_ИЗОЛЯЦИИ_ОСНОВНОГО_КАБЕЛЯ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, RECTIFIER_ENCLOSURE_ID, TYPE_CL,
                    MANUFACTURER_CL, POWER_BILLING_SOURCE_CL, DESCRIPTION, NAME, MODEL_NUMBER, DATE_INSTALLED,
                    NEG_CABLE_INSULATION_TYPE_GCL, NEG_CABLE_GAUGE_GCL, NEG_CABLE_INSULATION_COLOR_GCL, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((RECTIFIER_ENCLOSURE_ID)::text , 'НЕИЗВЕСТНО') RECTIFIER_ENCLOSURE_ID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((POWER_BILLING_SOURCE_CL)::text , 'НЕИЗВЕСТНО') POWER_BILLING_SOURCE_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((NAME)::text , 'НЕИЗВЕСТНО')
                    "name", coalesce((MODEL_NUMBER)::text , 'НЕИЗВЕСТНО') MODEL_NUMBER, coalesce((DATE_INSTALLED)::text
                    , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((NEG_CABLE_INSULATION_TYPE_GCL)::text , 'НЕИЗВЕСТНО')
                    NEG_CABLE_INSULATION_TYPE_GCL, coalesce((NEG_CABLE_GAUGE_GCL)::text , 'НЕИЗВЕСТНО')
                    NEG_CABLE_GAUGE_GCL, coalesce((NEG_CABLE_INSULATION_COLOR_GCL)::text , 'НЕИЗВЕСТНО')
                    NEG_CABLE_INSULATION_COLOR_GCL, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.RECTIFIER_ENCLOSURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="REDUCER" schema="PODS" id="PODS_REDUCER" comment="PODS.REDUCER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.REDUCER_TYPE_GCL where
                    TYPE_CL=code) ТИП_ПЕРЕХОДА, (select description from PODS.REDUCER_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from PODS.NOMINAL_DIAMETER_GCL
                    where NOMINAL_DIAMETER_INLET_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_OUTLET_GCL=code::text) НОМИН_ДИАМ_НА_ВЫХОДЕ_ММ,
                    (select description from PODS.NOMINAL_WALL_THICKNESS_GCL where
                    NOMINAL_WALL_THICKNESS_IN_GCL=code::text) НОМИН_ТОЛЩ_СТЕНКИ_НА_ВХ_ВЫХ_ММ, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICK_OUT_GCL=code::text)
                    НОМИН_ТОЛЩ_СТЕНКИ_НА_ВХ_ВЫХ_ММ, (select description from PODS.REDUCER_SPECIFICATION_CL where
                    SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА,
                    MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА, (select description from PODS.REDUCER_MATERIAL_CL where
                    MATERIAL_CL=code) МАТЕРИАЛ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    MANUFACTURER_CL, NOMINAL_DIAMETER_INLET_GCL, NOMINAL_DIAMETER_OUTLET_GCL,
                    NOMINAL_WALL_THICKNESS_IN_GCL, NOMINAL_WALL_THICK_OUT_GCL, SPECIFICATION_CL,
                    NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE, MATERIAL_CL, DATE_MANUFACTURED, DATE_INSTALLED,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((NOMINAL_DIAMETER_INLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_INLET_GCL, coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_OUTLET_GCL, coalesce((NOMINAL_WALL_THICKNESS_IN_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICKNESS_IN_GCL, coalesce((NOMINAL_WALL_THICK_OUT_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICK_OUT_GCL, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.REDUCER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="REPAIR_CLAMP" schema="PODS" id="PODS_REPAIR_CLAMP" comment="PODS.REPAIR_CLAMP">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, REPAIR_CLAMP_ID НОМЕР_НА_СХЕМЕ, PART_NUMBER
                    НОМЕР_ПАРТИИ,SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,(select description from PODS.REPAIR_CLAMP_TYPE_CL where
                    TYPE_CL=code) ТИП_РЕМОНТНОГО_ХОМУТА, (select description from PODS.REPAIR_CLAMP_REMOTE_ACTIVAT_CL
                    where REMOTE_ACTIVATOR_CL=code) ТИП_МЕХАНИЗМА_ЗАМЫКАНИЯ, (select description from
                    PODS.REPAIR_CLAMP_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select description from
                    PODS.REPAIR_CLAMP_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, NOMINAL_EXT_PRESSURE_RATING РАБОЧЕЕ_ВНУТР_ДАВЛЕНИЕ_КПА,
                    NOMINAL_INT_PRESSURE_RATING РАБОЧЕЕ_ВНЕШ_ДАВЛЕНИЕ_КПА,DESIGN_MIN_TEMPERATURE
                    МИН_РАБОЧАЯ_ТЕМП_ГРАДУС, DESIGN_MAX_TEMPERATURE МАКС_РАБОЧАЯ_ТЕМП_ГРАДУС, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, REPAIR_CLAMP_ID, PART_NUMBER, SERIAL_NUMBER, TYPE_CL,
                    REMOTE_ACTIVATOR_CL, MATERIAL_CL, MANUFACTURER_CL, DATE_MANUFACTURED, DATE_INSTALLED,
                    MILL_TEST_PRESSURE, NOMINAL_EXT_PRESSURE_RATING, NOMINAL_INT_PRESSURE_RATING,
                    DESIGN_MIN_TEMPERATURE, DESIGN_MAX_TEMPERATURE, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((REPAIR_CLAMP_ID)::text ,
                    'НЕИЗВЕСТНО') REPAIR_CLAMP_ID, coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((REMOTE_ACTIVATOR_CL)::text , 'НЕИЗВЕСТНО') REMOTE_ACTIVATOR_CL,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((MILL_TEST_PRESSURE)::text
                    , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((NOMINAL_EXT_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_EXT_PRESSURE_RATING, coalesce((NOMINAL_INT_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_INT_PRESSURE_RATING, coalesce((DESIGN_MIN_TEMPERATURE)::text , 'НЕИЗВЕСТНО')
                    DESIGN_MIN_TEMPERATURE, coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО')
                    DESIGN_MAX_TEMPERATURE, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments"
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.REPAIR_CLAMP t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="RIVER_WEIGHT" schema="PODS" id="PODS_RIVER_WEIGHT" comment="PODS.RIVER_WEIGHT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.RIVER_WEIGHT_TYPE_CL where
                    TYPE_CL=code) ТИП_ГРУЗА_УТЯЖЕЛИТЕЛЯ, QUANTITY КОЛИЧЕСТВО_ГРУЗОВ, WEIGHT_EACH
                    МАССА_ГРУЗА_УТЯЖЕЛИТЕЛЯ_КГ, SPACING_DISTANCE РАССТОЯНИЕ_МЕЖДУ_ГРУЗАМИ_ММ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, QUANTITY,
                    WEIGHT_EACH, SPACING_DISTANCE, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((QUANTITY)::text , 'НЕИЗВЕСТНО') QUANTITY, coalesce((WEIGHT_EACH)::text ,
                    'НЕИЗВЕСТНО') WEIGHT_EACH, coalesce((SPACING_DISTANCE)::text , 'НЕИЗВЕСТНО') SPACING_DISTANCE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.RIVER_WEIGHT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ROUTING_NOTE" schema="PODS" id="PODS_ROUTING_NOTE" comment="PODS.ROUTING_NOTE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.ROUTING_NOTE_TYPE_CL where
                    TYPE_CL=code) ТИП_ОПОРНОЙ_ТОЧКИ, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, ANG_DEGREES
                    УГОЛ_ИЗГИБА_ГРАДУСЫ, ANG_MINUTES МИНУТЫ, ANG_SECONDS СЕКУНДЫ, BRG_NORTHING
                    ПРЕДЫДЫУЩАЯ_ТОЧКА_СЕВЕРНЕЕ, BRG_DEGREES АЗИМУТ_ГРАДУСЫ, BRG_MINUTES МИНУТЫ, BRG_SECONDS СЕКУНДЫ,
                    BRG_EASTING ПРЕДЫДЫУЩАЯ_ТОЧКА_ВОСТОЧНЕЕ, (select description from PODS.SCALED_GCL where
                    SCALED_GCL=code) СПОСОБ_ОПРЕД_РАССТОЯНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, SOURCE_NUMBER, ANG_DEGREES, ANG_MINUTES, ANG_SECONDS, BRG_NORTHING,
                    BRG_DEGREES, BRG_MINUTES, BRG_SECONDS, BRG_EASTING, SCALED_GCL, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО') SOURCE_NUMBER,
                    coalesce((ANG_DEGREES)::text , 'НЕИЗВЕСТНО') ANG_DEGREES, coalesce((ANG_MINUTES)::text ,
                    'НЕИЗВЕСТНО') ANG_MINUTES, coalesce((ANG_SECONDS)::text , 'НЕИЗВЕСТНО') ANG_SECONDS,
                    coalesce((BRG_NORTHING)::text , 'НЕИЗВЕСТНО') BRG_NORTHING, coalesce((BRG_DEGREES)::text ,
                    'НЕИЗВЕСТНО') BRG_DEGREES, coalesce((BRG_MINUTES)::text , 'НЕИЗВЕСТНО') BRG_MINUTES,
                    coalesce((BRG_SECONDS)::text , 'НЕИЗВЕСТНО') BRG_SECONDS, coalesce((BRG_EASTING)::text ,
                    'НЕИЗВЕСТНО') BRG_EASTING, coalesce((SCALED_GCL)::text , 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.ROUTING_NOTE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SCC_PIPE_SUSCEPTIBILITY" schema="PODS" id="PODS_SCC_PIPE_SUSCEPTIBILITY"
          comment="PODS.SCC_PIPE_SUSCEPTIBILITY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SCC_PIPE_SUSCEPTIBILITY_CL where
                    SUSCEPTIBILITY_CL=code) ПОДВЕРЖЕННОСТЬ_СТРЕСС_КОРРОЗИИ, DESCRIPTION ОПИСАНИЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, SUSCEPTIBILITY_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SUSCEPTIBILITY_CL)::text , 'НЕИЗВЕСТНО') SUSCEPTIBILITY_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SCC_PIPE_SUSCEPTIBILITY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SCC_SOIL_POTENTIAL" schema="PODS" id="PODS_SCC_SOIL_POTENTIAL" comment="PODS.SCC_SOIL_POTENTIAL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SCC_SOIL_POTENTIAL_CL where
                    POTENTIAL_CL=code) ЗНАЧ_ПОТ_ГР_ВЫЗ_СТРЕСС_КОР, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, POTENTIAL_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((POTENTIAL_CL)::text , 'НЕИЗВЕСТНО') POTENTIAL_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SCC_SOIL_POTENTIAL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SHEET_NOTE_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБЪЕКТА, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛ, (select description from
                    PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ОПРЕДЕЛЕНИЯ_РАССТОЯНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_ОБЪЕКТА, INTERSECTION_ANGLE
                    УГОЛ_ПЕРЕСЕЧЕНИЯ, WIDTH ШИРИНА_ОБЪЕКТА_М, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, INTERSECTION_ANGLE, WIDTH,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((SOURCE_NUMBER)::text ,
                    'НЕИЗВЕСТНО') SOURCE_NUMBER, coalesce((SCALED_GCL)::text , 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL, coalesce((INTERSECTION_ANGLE)::text ,
                    'НЕИЗВЕСТНО') INTERSECTION_ANGLE, coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SHEET_NOTE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SLEEVE" schema="PODS" id="PODS_SLEEVE" comment="PODS.SLEEVE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SLEEVE_TYPE_CL where TYPE_CL=code)
                    ТИП_ИЗДЕЛИЯ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(select description from PODS.SLEEVE_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description from
                    PODS.SLEEVE_SPECIFICATION_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select
                    description from PODS.SLEEVE_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    NOMINAL_DIAMETER_GCL, NOMINAL_WALL_THICKNESS_GCL, MANUFACTURER_CL, DATE_MANUFACTURED,
                    SPECIFICATION_CL, MATERIAL_CL, MILL_TEST_PRESSURE, NOMINAL_PRESSURE_RATING, DATE_INSTALLED,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_DIAMETER_GCL)::text
                    , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL, coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICKNESS_GCL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL, coalesce((MATERIAL_CL)::text ,
                    'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.SLEEVE
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SRV_DISTRICT_BOUNDARY" schema="PODS" id="PODS_SRV_DISTRICT_BOUNDARY"
          comment="PODS.SRV_DISTRICT_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SRV_DISTRICT_ID ФИЛИАЛ_КОМПАНИИ_ОПЕРАТОРА, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, SRV_DISTRICT_ID, SRV_DISTRICT_GUID, EVENT_ID, EVENT_GUID, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((SRV_DISTRICT_ID)::text ,
                    'НЕИЗВЕСТНО') SRV_DISTRICT_ID, coalesce((SRV_DISTRICT_GUID)::text , 'НЕИЗВЕСТНО') SRV_DISTRICT_GUID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SRV_DISTRICT_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STABILIZATION" schema="PODS" id="PODS_STABILIZATION" comment="PODS.STABILIZATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STABILIZATION_TYPE_CL where
                    TYPE_CL=code) ТИП_СТАБИЛ_УСТРОЙСТВА, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,PART_NUMBER НОМЕР_ПАРТИИ,WIDTH
                    ШИРИНА_М, HEIGHT ВЫСОТА_М, THICKNESS СПЕЦИФ_ТОЛЩИНА_ММ, DRY_WEIGHT МАКС_СУХОЙ_ВЕС_КГ, (select
                    description from PODS.STABILIZATION_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    SERIAL_NUMBER, PART_NUMBER, WIDTH, HEIGHT, THICKNESS, DRY_WEIGHT, MANUFACTURER_CL,
                    DATE_MANUFACTURED, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((PART_NUMBER)::text
                    , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH, coalesce((HEIGHT)::text ,
                    'НЕИЗВЕСТНО') HEIGHT, coalesce((THICKNESS)::text , 'НЕИЗВЕСТНО') THICKNESS,
                    coalesce((DRY_WEIGHT)::text , 'НЕИЗВЕСТНО') DRY_WEIGHT, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.STABILIZATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STATUS_RANGE" schema="PODS" id="PODS_STATUS_RANGE" comment="PODS.STATUS_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.OPERATING_STATUS_GCL where
                    OPERATING_STATUS_GCL=code) ОПЕРАЦИОННЫЙ_СТАТУС, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    OPERATING_STATUS_GCL, DESCRIPTION, SOURCE_GCL, COMMENTS, EVENT_ID, EVENT_GUID FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((OPERATING_STATUS_GCL)::text , 'НЕИЗВЕСТНО')
                    OPERATING_STATUS_GCL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID FROM (SELECT EVENT_ID ID, t.* FROM PODS.STATUS_RANGE t) d WHERE {FILTER})
                    dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRAIGHTENING_VANES" schema="PODS" id="PODS_STRAIGHTENING_VANES" comment="PODS.STRAIGHTENING_VANES">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STRAIGHTENING_VANE_TYPE_CL where
                    TYPE_CL=code) ТИП_СТРУЕВЫПРЯМИТЕЛЯ, (select description from PODS.STRAIGHTENING_VANE_MFGR_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from
                    PODS.STRAIGHTENING_VANE_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, MODEL НОМЕР_МОДЕЛИ,
                    NOMINAL_PIPE_SIZE ДЛИНА_ПРЯМОЛИН_УЧАСТКА_ТРУБЫ_М, NUMBER_OF_VANES КОЛ_РАЗБИВАЕМЫХ_СТРУЙ_ПОТОК,
                    PRESSURE_DROP ПОТЕРЯ_ДАВЛЕНИЯ_КПА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, MANUFACTURER_CL, MATERIAL_CL, MODEL,
                    NOMINAL_PIPE_SIZE, NUMBER_OF_VANES, PRESSURE_DROP, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((MODEL)::text ,
                    'НЕИЗВЕСТНО') MODEL, coalesce((NOMINAL_PIPE_SIZE)::text , 'НЕИЗВЕСТНО') NOMINAL_PIPE_SIZE,
                    coalesce((NUMBER_OF_VANES)::text , 'НЕИЗВЕСТНО') NUMBER_OF_VANES, coalesce((PRESSURE_DROP)::text ,
                    'НЕИЗВЕСТНО') PRESSURE_DROP, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.STRAIGHTENING_VANES t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRAKE" schema="PODS" id="PODS_STRAKE" comment="PODS.STRAKE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, LENGTH ДЛИНА_ОБШИВКИ_М, HEIGHT ВЫСОТА_М, PITCH ШАГ_ОБШИВКИ,
                    (select description from PODS.STRAKE_FASTENER_CL where FASTENER_CL=code) ТИП_КРЕПЛ_ОБШИВКИ_РАЙЗЕРА,
                    SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,PART_NUMBER НОМЕР_ПАРТИИ,NUMBER_OF_STARTS КОЛИЧЕСТВО_РЁБЕР_ЖЁСТКОСТИ,
                    (select description from PODS.COATING_TYPE_SCL where COATING_TYPE_SCL=code) ТИП_ПОКРЫТИЯ,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select description from PODS.STRAKE_MANUFACTURER_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.STRAKE_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, LENGTH, HEIGHT, PITCH, FASTENER_CL, SERIAL_NUMBER,
                    PART_NUMBER, NUMBER_OF_STARTS, COATING_TYPE_SCL, COATING_SUBTYPE_SCL, DATE_INSTALLED,
                    MANUFACTURER_CL, DATE_MANUFACTURED, MATERIAL_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((LENGTH)::text , 'НЕИЗВЕСТНО')
                    LENGTH, coalesce((HEIGHT)::text , 'НЕИЗВЕСТНО') HEIGHT, coalesce((PITCH)::text , 'НЕИЗВЕСТНО')
                    PITCH, coalesce((FASTENER_CL)::text , 'НЕИЗВЕСТНО') FASTENER_CL, coalesce((SERIAL_NUMBER)::text ,
                    'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER,
                    coalesce((NUMBER_OF_STARTS)::text , 'НЕИЗВЕСТНО') NUMBER_OF_STARTS,
                    coalesce((COATING_TYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_TYPE_SCL,
                    coalesce((COATING_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_SUBTYPE_SCL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.STRAKE
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRUCTURE_SUPPORT" schema="PODS" id="PODS_STRUCTURE_SUPPORT" comment="PODS.STRUCTURE_SUPPORT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STRUCTURE_SUPPORT_TYPE_CL where
                    TYPE_CL=code) ТИП_ПОДДЕРЖИВАЮЩЕГО_СООРУЖЕНИЯ, (select description from
                    PODS.STRUCTURE_SUPPORT_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, PART_NUMBER
                    НОМЕР_ПАРТИИ,SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, MATERIAL_CL, PART_NUMBER, SERIAL_NUMBER,
                    DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MATERIAL_CL)::text ,
                    'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.STRUCTURE_SUPPORT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SUBSEA_SLED_ASSEMBLY" schema="PODS" id="PODS_SUBSEA_SLED_ASSEMBLY" comment="PODS.SUBSEA_SLED_ASSEMBLY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SLED_ID ИДЕНТИФИКАТОР_УСТРОЙСТВА, (select description from
                    PODS.SUBSEA_SLED_ASSEMBLY_TYPE_CL where TYPE_CL=code) ТИП_УСТРОЙСТВА, SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМЕР,PART_NUMBER НОМЕР_ПАРТИИ,(select description from PODS.SUBSEA_SLED_ASSEMBLY_MFGR_CL
                    where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select
                    description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_MAINLINE_DIAMETER_GCL=code::text)
                    ДИАМЕТР_ОСНОВНОЙ_ММ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_BRANCH_DIAMETER_GCL=code::text) ДИАМЕТР_ОТВЕТВЛЕНИЯ_ММ,(select description from
                    PODS.SUBSEA_SLED_ASSEMBLY_SPEC_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select description from PODS.SUBSEA_SLED_ASSEMBLY_MATL_CL
                    where MATERIAL_CL=code) МАТЕРИАЛ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, SLED_ID,
                    TYPE_CL, SERIAL_NUMBER, PART_NUMBER, MANUFACTURER_CL, DATE_MANUFACTURED,
                    NOMINAL_MAINLINE_DIAMETER_GCL, NOMINAL_BRANCH_DIAMETER_GCL, SPECIFICATION_CL, DATE_INSTALLED,
                    MATERIAL_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((SLED_ID)::text , 'НЕИЗВЕСТНО') SLED_ID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER,
                    coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((NOMINAL_MAINLINE_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_MAINLINE_DIAMETER_GCL,
                    coalesce((NOMINAL_BRANCH_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_BRANCH_DIAMETER_GCL,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL, coalesce((DATE_INSTALLED)::text
                    , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SUBSEA_SLED_ASSEMBLY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TAP" schema="PODS" id="PODS_TAP" comment="PODS.TAP">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.TAP_TYPE_CL where TYPE_CL=code)
                    ТИП_ВРЕЗКИ, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.TAP_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from
                    PODS.TAP_METHOD_GCL where TAP_METHOD_GCL=code) СПОСОБ_ВРЕЗКИ, (select description from
                    PODS.TAP_SPECIFICATION_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, TYPE_CL, NOMINAL_DIAMETER_GCL, MANUFACTURER_CL,
                    TAP_METHOD_GCL, SPECIFICATION_CL, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE, DATE_MANUFACTURED,
                    DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_DIAMETER_GCL)::text
                    , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((TAP_METHOD_GCL)::text , 'НЕИЗВЕСТНО') TAP_METHOD_GCL,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.TAP t)
                    d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TAPERED_STRESS_JOINT" schema="PODS" id="PODS_TAPERED_STRESS_JOINT" comment="PODS.TAPERED_STRESS_JOINT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, STRESS_JOINT_ID ИДЕНТ_ТРАПЕЦЕВИДНОГО_СТЫКА, (select description
                    from PODS.TAPERED_STRESS_JOINT_TYPE_CL where TYPE_CL=code) ТИП_ТРАПЕЦЕВИДНОГО_СТЫКА, (select
                    description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text)
                    НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from PODS.COATING_TYPE_SCL where COATING_TYPE_SCL=code)
                    ТИП_ПОКРЫТИЯ, (select description from PODS.TAPERED_STRESS_JOINT_MFGR_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, SERIAL_NUMBER
                    СЕРИЙНЫЙ_НОМЕР,(select description from PODS.TAPERED_STRESS_JOINT_MATL_CL where MATERIAL_CL=code)
                    МАТЕРИАЛ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, PART_NUMBER НОМЕР_ПАРТИИ,MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, DESIGN_TEMPERATURE
                    РАБОЧАЯ_ТЕМПЕРАТУРА_ГРАДУС, (select description from PODS.TAPERED_STRESS_J_CONN_TYPE_CL where
                    CONNECTION_TYPE_CL=code) ТИП_ПРИСОЕД_К_ОСНОВН_ТРУБ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID, STRESS_JOINT_ID,
                    TYPE_CL, NOMINAL_DIAMETER_GCL, COATING_TYPE_SCL, COATING_SUBTYPE_SCL, MANUFACTURER_CL,
                    DATE_INSTALLED, DESCRIPTION, SERIAL_NUMBER, MATERIAL_CL, DATE_MANUFACTURED, PART_NUMBER,
                    MILL_TEST_PRESSURE, NOMINAL_PRESSURE_RATING, DESIGN_TEMPERATURE, CONNECTION_TYPE_CL, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((STRESS_JOINT_ID)::text , 'НЕИЗВЕСТНО') STRESS_JOINT_ID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((COATING_TYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_TYPE_SCL,
                    coalesce((COATING_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') COATING_SUBTYPE_SCL,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((MATERIAL_CL)::text ,
                    'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((PART_NUMBER)::text , 'НЕИЗВЕСТНО') PART_NUMBER, coalesce((MILL_TEST_PRESSURE)::text ,
                    'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_PRESSURE_RATING, coalesce((DESIGN_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_TEMPERATURE,
                    coalesce((CONNECTION_TYPE_CL)::text , 'НЕИЗВЕСТНО') CONNECTION_TYPE_CL, coalesce((SOURCE_GCL)::text
                    , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    EVENT_ID ID, t.* FROM PODS.TAPERED_STRESS_JOINT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TAX_DISTRICT_BOUNDARY" schema="PODS" id="PODS_TAX_DISTRICT_BOUNDARY"
          comment="PODS.TAX_DISTRICT_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, TAX_DISTRICT_ID НАЛОГОВЫЙ_ОКРУГ, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    EVENT_GUID, TAX_DISTRICT_ID, TAX_DISTRICT_GUID, DESCRIPTION, SOURCE_GCL, COMMENTS, EVENT_ID
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TAX_DISTRICT_ID)::text , 'НЕИЗВЕСТНО') TAX_DISTRICT_ID,
                    coalesce((TAX_DISTRICT_GUID)::text , 'НЕИЗВЕСТНО') TAX_DISTRICT_GUID, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID FROM (SELECT EVENT_ID ID, t.* FROM PODS.TAX_DISTRICT_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TEE" schema="PODS" id="PODS_TEE" comment="PODS.TEE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.TEE_TYPE_CL where TYPE_CL=code)
                    ТИП_ТРОЙНИКА,(select description from PODS.TEE_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,(select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_INLET_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_OUTLET_GCL=code::text) НОМИН_ДИАМ_НА_ВЫХОДЕ_ММ,
                    (select description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_BRANCH_GCL=code::text)
                    ДИАМЕТР_ОТВЕТВЛЕНИЯ_ММ,(select description from PODS.NOMINAL_WALL_THICKNESS_GCL where
                    NOMINAL_WALL_THICKNESS_GCL=code::text) НОМИН_ТОЛЩИНА_СТЕНКИ_ММ,(select description from
                    PODS.TEE_SPECIFICATION_CL where SPECIFICATION_CL=code)
                    ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛЕНИЕ_КПА,(select description from PODS.TEE_MATERIAL_CL where MATERIAL_CL=code)
                    МАТЕРИАЛ,DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ,DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL, MANUFACTURER_CL, NOMINAL_DIAMETER_INLET_GCL,
                    NOMINAL_DIAMETER_OUTLET_GCL, NOMINAL_DIAMETER_BRANCH_GCL, NOMINAL_WALL_THICKNESS_GCL,
                    SPECIFICATION_CL, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE, MATERIAL_CL, DATE_MANUFACTURED,
                    DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((NOMINAL_DIAMETER_INLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_INLET_GCL, coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_OUTLET_GCL, coalesce((NOMINAL_DIAMETER_BRANCH_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_BRANCH_GCL, coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_WALL_THICKNESS_GCL, coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.TEE t)
                    d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TEMPERATURE_MEASUREMENT" schema="PODS" id="PODS_TEMPERATURE_MEASUREMENT"
          comment="PODS.TEMPERATURE_MEASUREMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, MAXIMUM_TEMPERATURE
                    МАКС_ЗНАЧ_ТЕМПЕР_ГАЗА_ГРАДУС,AVERAGE_TEMPERATURE СРЕД_ЗНАЧ_ТЕМПЕР_ГАЗА_ГРАДУС,(select description
                    from PODS.TEMPERATURE_MEASURE_METHOD_CL where MEASUREMENT_METHOD_CL=code)
                    МЕТОД_ИЗМЕРЕНИЯ,DETERMINATION_DATE ДАТА_ИЗМЕРЕНИЯ,DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, MAXIMUM_TEMPERATURE, AVERAGE_TEMPERATURE, MEASUREMENT_METHOD_CL, DETERMINATION_DATE,
                    DESCRIPTION, SOURCE_GCL, COMMENTS FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((MAXIMUM_TEMPERATURE)::text , 'НЕИЗВЕСТНО') MAXIMUM_TEMPERATURE,
                    coalesce((AVERAGE_TEMPERATURE)::text , 'НЕИЗВЕСТНО') AVERAGE_TEMPERATURE,
                    coalesce((MEASUREMENT_METHOD_CL)::text , 'НЕИЗВЕСТНО') MEASUREMENT_METHOD_CL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.TEMPERATURE_MEASUREMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TEST_LEAD" schema="PODS" id="PODS_TEST_LEAD" comment="PODS.TEST_LEAD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.TEST_LEAD_TYPE_CL where
                    TYPE_CL=code) ТИП_КИП,(select description from PODS.TEST_LEAD_STATUS_CL where STATUS_CL=code)
                    СТАТУС_КИП,DESCRIPTION ОПИСАНИЕ, NAME НАИМЕНОВАНИЕ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, TYPE_CL, STATUS_CL, DESCRIPTION, NAME, DATE_INSTALLED, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((STATUS_CL)::text , 'НЕИЗВЕСТНО') STATUS_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((NAME)::text , 'НЕИЗВЕСТНО')
                    "name", coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((SOURCE_GCL)::text
                    , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    EVENT_ID ID, t.* FROM PODS.TEST_LEAD t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TEST_PRESSURE" schema="PODS" id="PODS_TEST_PRESSURE" comment="PODS.TEST_PRESSURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.TEST_PRESSURE_TYPE_CL where
                    TEST_TYPE_CL=code) ТИП_ИСПЫТАНИЙ,TEST_DATE ДАТА_ИСПЫТАНИЙ,(select description from
                    PODS.TEST_PRESSURE_MEDIUM_CL where TEST_MEDIUM_CL=code) ТИП_НАПОРНОЙ_СРЕДЫ,TEST_PRESSURE
                    ИСПЫТ_ДАВЛЕНИЕ_КПА,DURATION_HOURS ВРЕМЯ_ВЫДЕРЖКИ_МИН,TEST_STATION
                    НОМЕР_ИЗМЕРИТЕЛЬНОЙ_СТАНЦИИ,TEST_STATION_ELEV АБСОЛЮТНАЯ_ВЫСОТА_М,MAX_ELEVATION
                    ЗНАЧЕНИЕ_МАКС,MIN_ELEVATION ЗНАЧЕНИЕ_МИН,TEST_DISTANCE ДЛИНА_ИСПЫТЫВАЕМОГО_УЧАСТКА_М,MIN_PRESSURE
                    ЗНАЧЕНИЕ_МИН,MAX_PRESSURE ЗНАЧЕНИЕ_МАКС,DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.TEST_PRESSURE_REASON_CL where REASON_CL=code) ПРИЧИНА_ПРОВЕДЕНИЯ_ИСПЫТАНИЙ,REPORT_NUMBER
                    НОМЕР_ОТЧЁТА,(select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TEST_TYPE_CL, TEST_DATE, TEST_MEDIUM_CL,
                    TEST_PRESSURE, DURATION_HOURS, TEST_STATION, TEST_STATION_ELEV, MAX_ELEVATION, MIN_ELEVATION,
                    TEST_DISTANCE, MIN_PRESSURE, MAX_PRESSURE, DESCRIPTION, REASON_CL, REPORT_NUMBER, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TEST_TYPE_CL)::text , 'НЕИЗВЕСТНО') TEST_TYPE_CL, coalesce((TEST_DATE)::text ,
                    'НЕИЗВЕСТНО') TEST_DATE, coalesce((TEST_MEDIUM_CL)::text , 'НЕИЗВЕСТНО') TEST_MEDIUM_CL,
                    coalesce((TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') TEST_PRESSURE, coalesce((DURATION_HOURS)::text ,
                    'НЕИЗВЕСТНО') DURATION_HOURS, coalesce((TEST_STATION)::text , 'НЕИЗВЕСТНО') TEST_STATION,
                    coalesce((TEST_STATION_ELEV)::text , 'НЕИЗВЕСТНО') TEST_STATION_ELEV, coalesce((MAX_ELEVATION)::text
                    , 'НЕИЗВЕСТНО') MAX_ELEVATION, coalesce((MIN_ELEVATION)::text , 'НЕИЗВЕСТНО') MIN_ELEVATION,
                    coalesce((TEST_DISTANCE)::text , 'НЕИЗВЕСТНО') TEST_DISTANCE, coalesce((MIN_PRESSURE)::text ,
                    'НЕИЗВЕСТНО') MIN_PRESSURE, coalesce((MAX_PRESSURE)::text , 'НЕИЗВЕСТНО') MAX_PRESSURE,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((REASON_CL)::text , 'НЕИЗВЕСТНО')
                    REASON_CL, coalesce((REPORT_NUMBER)::text , 'НЕИЗВЕСТНО') REPORT_NUMBER, coalesce((SOURCE_GCL)::text
                    , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    EVENT_ID ID, t.* FROM PODS.TEST_PRESSURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TOWNSHIP_BOUNDARY" schema="PODS" id="PODS_TOWNSHIP_BOUNDARY" comment="PODS.TOWNSHIP_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, TOWNSHIP_DIRECTION К_СЕВ_ЮГУ_ОТ_БАЗ_ПАРАЛЛЕЛИ, TOWNSHIP_NUMBER
                    НОМ_ПОЯСА_ОТ_БАЗ_ПАРАЛЛЕЛИ, RANGE_DIRECTION К_ВОСТ_ЗАП_ОТ_БАЗ_МЕРИДИАНА, RANGE_NUMBER
                    НОМ_ЗОН_ОТ_БАЗ_МЕРИДИАНА, SECTION_NUMBER НОМЕР_ЛИСТА_ОТ_1_ДО_36, DATUM СИСТ_РАЗБИВКИ_НА_ЛИСТЫ,
                    (select description from PODS.STATE_SURVEY_CL where STATE_SURVEY_CL=code::text)
                    ТОПОГРАФ_СЪЁМКА_ЛИСТА, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID, EVENT_ID, EVENT_GUID,
                    TOWNSHIP_DIRECTION, TOWNSHIP_NUMBER, RANGE_DIRECTION, RANGE_NUMBER, SECTION_NUMBER, DATUM,
                    STATE_SURVEY_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО')
                    ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((TOWNSHIP_DIRECTION)::text , 'НЕИЗВЕСТНО') TOWNSHIP_DIRECTION,
                    coalesce((TOWNSHIP_NUMBER)::text , 'НЕИЗВЕСТНО') TOWNSHIP_NUMBER, coalesce((RANGE_DIRECTION)::text ,
                    'НЕИЗВЕСТНО') RANGE_DIRECTION, coalesce((RANGE_NUMBER)::text , 'НЕИЗВЕСТНО') RANGE_NUMBER,
                    coalesce((SECTION_NUMBER)::text , 'НЕИЗВЕСТНО') SECTION_NUMBER, coalesce((DATUM)::text ,
                    'НЕИЗВЕСТНО') DATUM, coalesce((STATE_SURVEY_CL)::text , 'НЕИЗВЕСТНО') STATE_SURVEY_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.TOWNSHIP_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="VALVE" schema="PODS" id="PODS_VALVE" comment="PODS.VALVE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, VALVE_IDENTIFIER ИДЕНТИФИКАТОР_НА_СХЕМЕ, NAME НАИМЕНОВАНИЕ,
                    (select description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_INLET_GCL=code::text)
                    НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_OUTLET_GCL=code::text) НОМИН_ДИАМ_НА_ВЫХОДЕ_ММ, (select description from
                    PODS.VALVE_TYPE_GCL where TYPE_CL=code) ТИП_АРМАТУРЫ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,MODEL
                    НОМЕР_МОДЕЛИ, (select description from PODS.VALVE_MANUFACTURER_CL where MANUFACTURER_CL=code)
                    КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, (select description from
                    PODS.VALVE_SPECIFICATION_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, NOMINAL_PRESSURE_RATING_INLET
                    РАБОЧЕЕ_ДАВЛЕНИЕ_НА_ВХОДЕ, NOMINAL_PRESSURE_RATING_OUTLET РАБОЧЕЕ_ДАВЛЕНИЕ_НА_ВЫХОДЕ, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,(select description from PODS.VALVE_FUNCTION_CL where FUNCTION_CL=code)
                    ФУНКЦИЯ_ИЗДЕЛИЯ, (select description from PODS.VALVE_JOINT_TYPE_CL where JOINT_TYPE_CL=code)
                    ТИП_ПРИСОЕД_ИЗДЕЛИЯ_К_ТРУБ, (select description from PODS.VALVE_MATERIAL_CL where MATERIAL_CL=code)
                    МАТЕРИАЛ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, VALVE_IDENTIFIER, NAME,
                    NOMINAL_DIAMETER_INLET_GCL, NOMINAL_DIAMETER_OUTLET_GCL, TYPE_CL, SERIAL_NUMBER, MODEL,
                    MANUFACTURER_CL, DATE_MANUFACTURED, SPECIFICATION_CL, MILL_TEST_PRESSURE, NOMINAL_PRESSURE_RATING,
                    NOMINAL_PRESSURE_RATING_INLET, NOMINAL_PRESSURE_RATING_OUTLET, DATE_INSTALLED, FUNCTION_CL,
                    JOINT_TYPE_CL, MATERIAL_CL, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((VALVE_IDENTIFIER)::text , 'НЕИЗВЕСТНО') VALVE_IDENTIFIER,
                    coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((NOMINAL_DIAMETER_INLET_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_DIAMETER_INLET_GCL, coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text ,
                    'НЕИЗВЕСТНО') NOMINAL_DIAMETER_OUTLET_GCL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((MODEL)::text , 'НЕИЗВЕСТНО')
                    MODEL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((NOMINAL_PRESSURE_RATING_INLET)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING_INLET,
                    coalesce((NOMINAL_PRESSURE_RATING_OUTLET)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING_OUTLET,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((FUNCTION_CL)::text ,
                    'НЕИЗВЕСТНО') FUNCTION_CL, coalesce((JOINT_TYPE_CL)::text , 'НЕИЗВЕСТНО') JOINT_TYPE_CL,
                    coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.VALVE
                    t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="VALVE_OPERATOR" schema="PODS" id="PODS_VALVE_OPERATOR" comment="PODS.VALVE_OPERATOR">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.VALVE_OPERATOR_TYPE_SCL where
                    TYPE_SCL=code) ТИП_ПРИВОДА_АРМАТУРЫ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,(select description from
                    PODS.VALVE_OPERATOR_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_SCL,
                    SUBTYPE_SCL, SERIAL_NUMBER, MANUFACTURER_CL, DATE_MANUFACTURED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_SCL)::text ,
                    'НЕИЗВЕСТНО') TYPE_SCL, coalesce((SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') SUBTYPE_SCL,
                    coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((MANUFACTURER_CL)::text ,
                    'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.VALVE_OPERATOR t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="VENT_PIPE" schema="PODS" id="PODS_VENT_PIPE" comment="PODS.VENT_PIPE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, NAME НАИМЕНОВАНИЕ, (select description from
                    PODS.VENT_PIPE_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, DATE_MANUFACTURED
                    ДАТА_ИЗГОТОВЛЕНИЯ, (select description from PODS.PIPE_MILL_LOCATION_GCL where
                    PIPE_MILL_LOCATION_GCL=code) МЕСТОПОЛ_ТРУБ_ПРОИЗВОДСТВА, MILL_TEST_PRESSURE ЗАВОД_ИСПЫТ_ДАВЛ_КПА,
                    (select description from PODS.VENT_PIPE_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select
                    description from PODS.PIPE_SPECIFICATION_GCL where PIPE_SPECIFICATION_GCL=code)
                    ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, (select description from PODS.SMYS_GCL where SMYS_GCL=code::text)
                    ПРЕДЕЛ_ТЕКУЧ_СТАЛИ_Н_ММ2, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(select description from PODS.PIPE_LONG_SEAM_GCL where PIPE_LONG_SEAM_GCL=code)
                    ТИП_ПРОД_СВАРНОГО_ШВА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, NAME, MANUFACTURER_CL, DATE_MANUFACTURED, PIPE_MILL_LOCATION_GCL,
                    MILL_TEST_PRESSURE, MATERIAL_CL, PIPE_SPECIFICATION_GCL, SMYS_GCL, NOMINAL_DIAMETER_GCL,
                    NOMINAL_WALL_THICKNESS_GCL, PIPE_LONG_SEAM_GCL, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((NAME)::text ,
                    'НЕИЗВЕСТНО') "name", coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((PIPE_MILL_LOCATION_GCL)::text , 'НЕИЗВЕСТНО') PIPE_MILL_LOCATION_GCL,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE, coalesce((MATERIAL_CL)::text
                    , 'НЕИЗВЕСТНО') MATERIAL_CL, coalesce((PIPE_SPECIFICATION_GCL)::text , 'НЕИЗВЕСТНО')
                    PIPE_SPECIFICATION_GCL, coalesce((SMYS_GCL)::text , 'НЕИЗВЕСТНО') SMYS_GCL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((PIPE_LONG_SEAM_GCL)::text , 'НЕИЗВЕСТНО') PIPE_LONG_SEAM_GCL,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.VENT_PIPE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="VESSEL" schema="PODS" id="PODS_VESSEL" comment="PODS.VESSEL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.VESSEL_SPECIFICATION_CL where
                    SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ, NOMINAL_TEMPERATURE_RATING
                    РАБОЧАЯ_ТЕМПЕРАТУРА_ГРАДУС, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,
                    (select description from PODS.VESSEL_TYPE_CL where TYPE_CL=code) ТИП_СОСУДА_АППАРАТА, (select
                    description from PODS.VESSEL_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,MODEL НОМЕР_МОДЕЛИ,ID,
                    SPECIFICATION_CL, NOMINAL_TEMPERATURE_RATING, NOMINAL_PRESSURE_RATING, MILL_TEST_PRESSURE,
                    DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, COMMENTS, EVENT_ID, EVENT_GUID, TYPE_CL, MANUFACTURER_CL,
                    DATE_MANUFACTURED, SERIAL_NUMBER, MODEL FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((SPECIFICATION_CL)::text , 'НЕИЗВЕСТНО') SPECIFICATION_CL,
                    coalesce((NOMINAL_TEMPERATURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_TEMPERATURE_RATING,
                    coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING,
                    coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО')
                    EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED, coalesce((SERIAL_NUMBER)::text
                    , 'НЕИЗВЕСТНО') SERIAL_NUMBER, coalesce((MODEL)::text , 'НЕИЗВЕСТНО') MODEL FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.VESSEL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="WELLHEAD_ASSEMBLY" schema="PODS" id="PODS_WELLHEAD_ASSEMBLY" comment="PODS.WELLHEAD_ASSEMBLY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.WELLHEAD_ASSEMBLY_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБОРУДОВАНИЯ, (select description from PODS.WELLHEAD_ASSEMBLY_MATERIAL_CL where
                    MATERIAL_CL=code) МАТЕРИАЛ, (select description from PODS.WELLHEAD_ASSEMBLY_MFGR_CL where
                    MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ, (select description from
                    PODS.WELLHEAD_ASSEMBLY_OPERATOR_CL where WELL_OPERATOR_CL=code) КОМПАНИЯ_ОПЕРАТОР_СКВАЖИНЫ, (select
                    description from PODS.WELLHEAD_ASSEMBLY_OWNER_CL where WELL_OWNER_CL=code)
                    КОМПАНИЯ_СОБСТВЕННИК_СКВАЖИНЫ, NOMINAL_PRESSURE_RATING РАБОЧЕЕ_ДАВЛЕНИЕ_КПА, MILL_TEST_PRESSURE
                    ЗАВОД_ИСПЫТ_ДАВЛ_КПА, DESIGN_MIN_TEMPERATURE МИН_РАБОЧАЯ_ТЕМП_ГРАДУС, DESIGN_MAX_TEMPERATURE
                    МАКС_РАБОЧАЯ_ТЕМП_ГРАДУС, (select description from PODS.NOMINAL_DIAMETER_GCL where
                    NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select description from
                    PODS.NOMINAL_WALL_THICKNESS_GCL where NOMINAL_WALL_THICKNESS_GCL=code::text)
                    ТОЛЩИНА_СТЕНКИ_ММ,(select description from PODS.WELLHEAD_ASSEMBLY_CONN_TYPE_CL where
                    CONNECTION_TYPE_CL=code) ТИП_ПРИСОЕД_ОБОРУДОВАНИЯ, (select description from
                    PODS.WELLHD_ASM_OUTLET_VLV_TYPE_CL where OUTLET_VALVE_TYPE_CL=code) ТИП_АРМАТУРЫ, (select
                    description from PODS.WELLHEAD_ASM_ACTUATOR_TYPE_CL where ACTUATOR_TYPE_CL=code)
                    ТИП_ДИСТАНЦИОННОГО_УПРАВЛЕНИЯ, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    MATERIAL_CL, MANUFACTURER_CL, WELL_OPERATOR_CL, WELL_OWNER_CL, NOMINAL_PRESSURE_RATING,
                    MILL_TEST_PRESSURE, DESIGN_MIN_TEMPERATURE, DESIGN_MAX_TEMPERATURE, NOMINAL_DIAMETER_GCL,
                    NOMINAL_WALL_THICKNESS_GCL, CONNECTION_TYPE_CL, OUTLET_VALVE_TYPE_CL, ACTUATOR_TYPE_CL, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text
                    , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО')
                    MATERIAL_CL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL,
                    coalesce((WELL_OPERATOR_CL)::text , 'НЕИЗВЕСТНО') WELL_OPERATOR_CL, coalesce((WELL_OWNER_CL)::text ,
                    'НЕИЗВЕСТНО') WELL_OWNER_CL, coalesce((NOMINAL_PRESSURE_RATING)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_PRESSURE_RATING, coalesce((MILL_TEST_PRESSURE)::text , 'НЕИЗВЕСТНО') MILL_TEST_PRESSURE,
                    coalesce((DESIGN_MIN_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MIN_TEMPERATURE,
                    coalesce((DESIGN_MAX_TEMPERATURE)::text , 'НЕИЗВЕСТНО') DESIGN_MAX_TEMPERATURE,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((NOMINAL_WALL_THICKNESS_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    coalesce((CONNECTION_TYPE_CL)::text , 'НЕИЗВЕСТНО') CONNECTION_TYPE_CL,
                    coalesce((OUTLET_VALVE_TYPE_CL)::text , 'НЕИЗВЕСТНО') OUTLET_VALVE_TYPE_CL,
                    coalesce((ACTUATOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') ACTUATOR_TYPE_CL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.WELLHEAD_ASSEMBLY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_CP_FOREIGN_LINE_CROSSING"
          comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.FOREIGN_LINE_CROSSING_TYPE_CL
                    where TYPE_CL=code) ТИП_ПЕРЕСЕЧЕНИЯ, (select description from PODS.OUTSIDE_COMPANY_CL where
                    OWNER_CL=code) КОМПАНИЯ_СОБСТВЕННИК, LINE_CLEARANCE ПРОСВЕТ_ДО_ПЕРЕС_КАБ_ТРУБ_ММ, (select
                    description from PODS.CROSSING_MATERIAL_CL where MATERIAL_CL=code) МАТЕР_ПЕРЕСЕК_КАБЕЛЯ_ТРУБ,
                    FOREIGN_DIAMETER ДИАМЕТР_ПЕРЕСЕК_КАБ_ТРУБ_ММ, CROSSING_DATE ДАТА_ОБУСТРОЙСТВА_ПЕРЕСЕЧЕНИЯ,
                    INTERSECTION_ANGLE УГОЛ_ПЕРЕСЕЧЕНИЯ_ГРАД, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, (select description
                    from PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ИЗМЕР_ДЛИНЫ_ПЕРЕСЕЧЕНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_КОММУНИКАЦИИ, WIDTH ШИРИНА_М,
                    GEOGRAPHIC_ENTITY_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ, LINE_BELOW_GROUND_LF
                    ТРУБОПРОВОД_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_GROUND_LF КОММУНИКАЦИЯ_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_LINE_LF
                    КОММУНИКАЦИЯ_ПОД_ТРУБОПРОВОДОМ, FOREIGN_BOND_LF КОММУН_СВЯЗ_С_ТРУБОПРОВОДОМ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, OWNER_CL, LINE_CLEARANCE, MATERIAL_CL, FOREIGN_DIAMETER, CROSSING_DATE,
                    INTERSECTION_ANGLE, SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, WIDTH, GEOGRAPHIC_ENTITY_ID,
                    GEOGRAPHIC_ENTITY_GUID, DESCRIPTION, LINE_BELOW_GROUND_LF, CROSSING_BELOW_GROUND_LF,
                    CROSSING_BELOW_LINE_LF, FOREIGN_BOND_LF, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((OWNER_CL)::text , 'НЕИЗВЕСТНО') OWNER_CL, coalesce((LINE_CLEARANCE)::text , 'НЕИЗВЕСТНО')
                    LINE_CLEARANCE, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((FOREIGN_DIAMETER)::text , 'НЕИЗВЕСТНО') FOREIGN_DIAMETER, coalesce((CROSSING_DATE)::text ,
                    'НЕИЗВЕСТНО') CROSSING_DATE, coalesce((INTERSECTION_ANGLE)::text , 'НЕИЗВЕСТНО') INTERSECTION_ANGLE,
                    coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО') SOURCE_NUMBER, coalesce((SCALED_GCL)::text ,
                    'НЕИЗВЕСТНО') SCALED_GCL, coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH, coalesce((GEOGRAPHIC_ENTITY_ID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_ID, coalesce((GEOGRAPHIC_ENTITY_GUID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((LINE_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') LINE_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_LINE_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_LINE_LF,
                    coalesce((FOREIGN_BOND_LF)::text , 'НЕИЗВЕСТНО') FOREIGN_BOND_LF, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t WHERE t.TYPE_CL = 'FL_CROSS_TYPE_11'
                    OR t.TYPE_CL = 'FL_CROSS_TYPE_12') d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_FOREIGN_LINE_CROSSING"
          comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.FOREIGN_LINE_CROSSING_TYPE_CL
                    where TYPE_CL=code) ТИП_ПЕРЕСЕЧЕНИЯ, (select description from PODS.OUTSIDE_COMPANY_CL where
                    OWNER_CL=code) КОМПАНИЯ_СОБСТВЕННИК, LINE_CLEARANCE ПРОСВЕТ_ДО_ПЕРЕСЕК_КАБ_ТРУБ_ММ, (select
                    description from PODS.CROSSING_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ_ПЕРЕСЕК_КАБ_ТРУБ,
                    FOREIGN_DIAMETER ДИАМЕТР_ПЕРЕСЕК_КАБ_ТРУБ_ММ, CROSSING_DATE ДАТА_ОБУСТРОЙСТВА_ПЕРЕСЕЧЕНИЯ,
                    INTERSECTION_ANGLE УГОЛ_ПЕРЕСЕЧЕНИЯ_ГРАД, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, (select description
                    from PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ИЗМЕР_ДЛИНЫ_ПЕРЕСЕЧЕНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_КОММУНИКАЦИИ, WIDTH ШИРИНА_М,
                    GEOGRAPHIC_ENTITY_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ, LINE_BELOW_GROUND_LF
                    ТРУБ_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_GROUND_LF КОММУНИКАЦИЯ_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_LINE_LF
                    КОММУНИКАЦИЯ_ПОД_ТРУБОПРОВОДОМ, FOREIGN_BOND_LF КОММУНИК_СВЯЗАНА_С_ТРУБ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, OWNER_CL, LINE_CLEARANCE, MATERIAL_CL, FOREIGN_DIAMETER, CROSSING_DATE,
                    INTERSECTION_ANGLE, SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, WIDTH, GEOGRAPHIC_ENTITY_ID,
                    GEOGRAPHIC_ENTITY_GUID, DESCRIPTION, LINE_BELOW_GROUND_LF, CROSSING_BELOW_GROUND_LF,
                    CROSSING_BELOW_LINE_LF, FOREIGN_BOND_LF, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((OWNER_CL)::text , 'НЕИЗВЕСТНО') OWNER_CL, coalesce((LINE_CLEARANCE)::text , 'НЕИЗВЕСТНО')
                    LINE_CLEARANCE, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((FOREIGN_DIAMETER)::text , 'НЕИЗВЕСТНО') FOREIGN_DIAMETER, coalesce((CROSSING_DATE)::text ,
                    'НЕИЗВЕСТНО') CROSSING_DATE, coalesce((INTERSECTION_ANGLE)::text , 'НЕИЗВЕСТНО') INTERSECTION_ANGLE,
                    coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО') SOURCE_NUMBER, coalesce((SCALED_GCL)::text ,
                    'НЕИЗВЕСТНО') SCALED_GCL, coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH, coalesce((GEOGRAPHIC_ENTITY_ID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_ID, coalesce((GEOGRAPHIC_ENTITY_GUID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((LINE_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') LINE_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_LINE_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_LINE_LF,
                    coalesce((FOREIGN_BOND_LF)::text , 'НЕИЗВЕСТНО') FOREIGN_BOND_LF, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    t.EVENT_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="HCA_BOUNDARY" schema="PODS" id="PODS_HCA_BOUNDARY" comment="PODS.HCA_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, GEOGRAPHIC_ENTITY_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description
                    from PODS.HCA_TYPE_CL where TYPE_CL=code) ТИП_ПОСЛЕДСТВИЯ, DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ,
                    DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID,GEOGRAPHIC_ENTITY_ID,TYPE_CL,DETERMINATION_DATE,DESCRIPTION,SOURCE_GCL,"comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((GEOGRAPHIC_ENTITY_ID)::text ,
                    'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_ID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE, coalesce((DESCRIPTION)::text
                    , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.HCA_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="RAILROAD" schema="PODS" id="PODS_RAILROAD" comment="PODS.RAILROAD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    WITH route_dia_w_thick AS (SELECT spb.route_id,d.description nominal_diameter_gcl,t.description
                    nominal_wall_thickness_gcl,d.code diameter
                    FROM pods.event_range erPS
                    JOIN pods.pipe_segment ps
                    ON erPS.event_id = ps.event_id
                    JOIN pods.station_point spb
                    ON erPS.station_id_begin = spb.station_id
                    JOIN pods.nominal_diameter_gcl d
                    ON ps.nominal_diameter_gcl = d.code
                    JOIN pods.nominal_wall_thickness_gcl t
                    ON ps.nominal_wall_thickness_gcl = t.code
                    WHERE erPS.feature_id = 'PIPE_SEGMENT'
                    AND erPS.CURRENT_INDICATOR_LF = 'Y')
                    SELECT coalesce ( (ID)::text, 'НЕИЗВЕСТНО') ID,
                    coalesce ( (EVENT_ID)::text, 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce ( (EVENT_GUID)::text, 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce ( (TYPE_CL)::text, 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce ( (OPERATOR_CL)::text, 'НЕИЗВЕСТНО') OPERATOR_CL,
                    coalesce ( (INTERSECTION_ANGLE)::text, 'НЕИЗВЕСТНО')
                    INTERSECTION_ANGLE,
                    coalesce ( (SOURCE_NUMBER)::text, 'НЕИЗВЕСТНО') SOURCE_NUMBER,
                    coalesce ( (SCALED_GCL)::text, 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce ( (DIRECTION_GCL)::text, 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce ( (WIDTH)::text, 'НЕИЗВЕСТНО') WIDTH,
                    coalesce ( (GEOGRAPHIC_ENTITY_ID)::text, 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_ID,
                    coalesce ( (GEOGRAPHIC_ENTITY_GUID)::text, 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_GUID,
                    coalesce ( (CASING_INDICATOR_LF)::text, 'НЕИЗВЕСТНО')
                    CASING_INDICATOR_LF,
                    coalesce ( (DESCRIPTION), 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce ( (SOURCE_GCL), 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce ( (COMMENTS), 'НЕИЗВЕСТНО') "comments",
                    coalesce (LINE_DESCRIPTION, 'НЕИЗВЕСТНО') LINE_DESCRIPTION,
                    coalesce ( (STATION)::text, 'НЕИЗВЕСТНО') STATION,
                    coalesce ( (PI_ADJACENT_CONSTRUCTION)::text, 'НЕИЗВЕСТНО')
                    PI_ADJACENT_CONSTRUCTION,
                    coalesce ( (NOMINAL_DIAMETER_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce ( (NOMINAL_WALL_THICKNESS_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    MARKER,
                    CATODIC_PROTECTED,
                    TEST_LEAD,
                    PI_COATING,
                    INSPECTION_YEAR,
                    X_COORD,
                    Y_COORD,
                    Z_COORD,
                    KM_START,
                    KM_END,
                    LENGTH
                    FROM (SELECT DISTINCT t.EVENT_ID ID,
                    t.*,
                    NULL::text PI_ADJACENT_CONSTRUCTION,
                    LN.DESCRIPTION LINE_DESCRIPTION,
                    sp.STATION,
                    rdt.NOMINAL_DIAMETER_GCL,
                    rdt.NOMINAL_WALL_THICKNESS_GCL,
                    coalesce (
                    (SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN
                    PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'MARKER'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS (spM.MEASURE - sp.MEASURE) &lt;=
                    CASE
                    WHEN rdt.diameter BETWEEN 0 AND 1000
                    THEN
                    500
                    WHEN rdt.diameter BETWEEN 1001 AND 1400
                    THEN
                    750
                    WHEN rdt.diameter &gt; 1401
                    THEN
                    1000
                    END),
                    2)
                    MARKER,
                    coalesce (
                    (SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN
                    PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'TEST_LEAD'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS (spM.MEASURE - sp.MEASURE) &lt;= 300),
                    2)
                    TEST_LEAD,
                    coalesce (
                    (SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'CATH_PROT_RNG'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE),
                    2)
                    CATODIC_PROTECTED,
                    coalesce (
                    (SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PI_COATING_DATA cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PI_COATING_DATA'
                    AND cd.CONDITION_CL = 'COAT_COND_BROKEN'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE),
                    2)
                    PI_COATING,
                    coalesce (
                    (SELECT extract ( year from cd.INSPECTION_START_DATE)::text
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PHYSICAL_INSPECTION cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PHYS_INSP'
                    AND cd.INSPECTION_TYPE_GCL = 'INSP_TYPE_RAIL'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE),
                    'НЕИЗВЕСТНО')
                    INSPECTION_YEAR
                    ,coalesce((C.X_COORD)::text , 'НЕИЗВЕСТНО') X_COORD
                    ,coalesce((C.Y_COORD)::text , 'НЕИЗВЕСТНО') Y_COORD
                    ,coalesce((C.Z_COORD)::text , 'НЕИЗВЕСТНО') Z_COORD
                    ,coalesce((sp.STATION)::text , 'НЕИЗВЕСТНО') KM_START
                    ,coalesce((spe.STATION)::text , 'НЕИЗВЕСТНО') KM_END
                    ,coalesce((er.LENGTH)::text , 'НЕИЗВЕСТНО') LENGTH
                    FROM PODS.RAILROAD t
                    JOIN PODS.EVENT_RANGE er
                    ON er.EVENT_ID = t.EVENT_ID
                    JOIN PODS.STATION_POINT sp
                    ON er.STATION_ID_BEGIN = sp.STATION_ID
                    JOIN PODS.STATION_POINT spe
                    ON er.STATION_ID_END = spe.STATION_ID
                    JOIN pods.COORDINATE c
                    ON sp.LOCATION_ID = c.LOCATION_ID
                    JOIN PODS.LINE ln
                    ON ln.LINE_ID = sp.LINE_ID
                    LEFT OUTER JOIN route_dia_w_thick rdt
                    ON sp.route_id = rdt.route_id
                    WHERE er.CURRENT_INDICATOR_LF = 'Y') d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="RIGHT_OF_WAY" schema="PODS" id="PODS_RIGHT_OF_WAY" comment="PODS.RIGHT_OF_WAY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.RIGHT_OF_WAY_TYPE_CL where
                    TYPE_CL=code) ПРАВОВОЙ_СТАТУС, PARCEL_NUMBER КАДАСТРОВЫЙ_НОМЕР, OWNER_NAME ВЛАДЕЛЕЦ_УЧАСТКА,
                    PROPERTY_WIDTH РАЗМЕР_УЧАСТКА_ПОЛЬЗОВАНИЯ_ГА, EASEMENT_WIDTH РАЗМЕР_УЧ_ОГРАНИЧ_ПОЛЬЗОВ_ГА, ADDRESS
                    МЕСТОПОЛОЖЕНИЕ, GEOGRAPHIC_ENTITY_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID,
                    EVENT_ID, EVENT_GUID, TYPE_CL, PARCEL_NUMBER, OWNER_NAME, PROPERTY_WIDTH, EASEMENT_WIDTH, ADDRESS,
                    GEOGRAPHIC_ENTITY_ID, GEOGRAPHIC_ENTITY_GUID, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((PARCEL_NUMBER)::text , 'НЕИЗВЕСТНО') PARCEL_NUMBER, coalesce((OWNER_NAME)::text ,
                    'НЕИЗВЕСТНО') OWNER_NAME, coalesce((PROPERTY_WIDTH)::text , 'НЕИЗВЕСТНО') PROPERTY_WIDTH,
                    coalesce((EASEMENT_WIDTH)::text , 'НЕИЗВЕСТНО') EASEMENT_WIDTH, coalesce((ADDRESS)::text ,
                    'НЕИЗВЕСТНО') ADDRESS, coalesce((GEOGRAPHIC_ENTITY_ID)::text , 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_ID,
                    coalesce((GEOGRAPHIC_ENTITY_GUID)::text , 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    GEOGRAPHIC_ENTITY_ID ID, t.* FROM PODS.RIGHT_OF_WAY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ROAD" schema="PODS" id="PODS_ROAD" comment="PODS.ROAD">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    WITH route_dia_w_thick AS (SELECT spb.route_id,d.description nominal_diameter_gcl,t.description
                    nominal_wall_thickness_gcl,d.code diameter
                    FROM pods.event_range erPS
                    JOIN pods.pipe_segment ps
                    ON erPS.event_id = ps.event_id
                    JOIN pods.station_point spb
                    ON erPS.station_id_begin = spb.station_id
                    JOIN pods.nominal_diameter_gcl d
                    ON ps.nominal_diameter_gcl = d.code
                    JOIN pods.nominal_wall_thickness_gcl t
                    ON ps.nominal_wall_thickness_gcl = t.code
                    WHERE erPS.feature_id = 'PIPE_SEGMENT'
                    AND erPS.CURRENT_INDICATOR_LF = 'Y')
                    SELECT coalesce ( (ID)::text, 'НЕИЗВЕСТНО') ID,
                    coalesce ( (EVENT_ID)::text, 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce ( (EVENT_GUID)::text, 'НЕИЗВЕСТНО') EVENT_GUID,
                    CASE WHEN TYPE_CL = 'UNKNOWN' THEN 'НЕИЗВЕСТНО' ELSE TYPE_CL END TYPE_CL,
                    coalesce ( (SURFACE_CL)::text, 'НЕИЗВЕСТНО') SURFACE_CL,
                    coalesce ( (INTERSECTION_ANGLE)::text, 'НЕИЗВЕСТНО') INTERSECTION_ANGLE,
                    coalesce ( (SOURCE_NUMBER)::text, 'НЕИЗВЕСТНО') SOURCE_NUMBER,
                    coalesce ( (SCALED_GCL)::text, 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce ( (DIRECTION_GCL)::text, 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce ( (WIDTH)::text, 'НЕИЗВЕСТНО') WIDTH,
                    coalesce ( (GEOGRAPHIC_ENTITY_ID)::text, 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_ID,
                    coalesce ( (GEOGRAPHIC_ENTITY_GUID)::text, 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_GUID,
                    coalesce (CASING_INDICATOR_LF::text, 'НЕИЗВЕСТНО') CASING_INDICATOR_LF,
                    coalesce (DESCRIPTION::text, 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce (SOURCE_GCL::text, 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce (COMMENTS, 'НЕИЗВЕСТНО') "comments",
                    coalesce (LINE_DESCRIPTION, 'НЕИЗВЕСТНО') LINE_DESCRIPTION,
                    coalesce ( (STATION)::text, 'НЕИЗВЕСТНО') STATION,
                    coalesce ( (NOMINAL_DIAMETER_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce ( (NOMINAL_WALL_THICKNESS_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    MARKER,
                    CATODIC_PROTECTED,
                    TEST_LEAD,
                    PI_COATING,
                    INSPECTION_YEAR,
                    X_COORD,
                    Y_COORD,
                    Z_COORD,
                    KM_START,
                    KM_END,
                    LENGTH
                    FROM (SELECT DISTINCT t.EVENT_ID ID,
                    t.*,
                    LN.DESCRIPTION LINE_DESCRIPTION,
                    sp.STATION,
                    rdt.NOMINAL_DIAMETER_GCL,
                    rdt.NOMINAL_WALL_THICKNESS_GCL,
                    coalesce ((SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'MARKER'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS (spM.MEASURE - sp.MEASURE) &lt;=
                    CASE
                    WHEN rdt.diameter BETWEEN 0 AND 1000
                    THEN 500
                    WHEN rdt.diameter BETWEEN 1001 AND 1400
                    THEN 750
                    WHEN rdt.diameter &gt; 1401
                    THEN 1000
                    END),2) MARKER,
                    coalesce ((SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'TEST_LEAD'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS (spM.MEASURE - sp.MEASURE) &lt;= 300),2) TEST_LEAD,
                    coalesce ((SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'CATH_PROT_RNG'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE),2) CATODIC_PROTECTED,
                    coalesce ((SELECT MIN (1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PI_COATING_DATA cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PI_COATING_DATA'
                    AND cd.CONDITION_CL = 'COAT_COND_BROKEN'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE),2) PI_COATING,
                    coalesce ((SELECT (CD.INSPECTION_START_DATE, 'YYYY')
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PHYSICAL_INSPECTION cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PHYS_INSP'
                    AND cd.INSPECTION_TYPE_GCL = 'INSP_TYPE_ROAD'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE)::text , 'НЕИЗВЕСТНО') INSPECTION_YEAR
                    ,coalesce((C.X_COORD)::text , 'НЕИЗВЕСТНО') X_COORD
                    ,coalesce((C.Y_COORD)::text , 'НЕИЗВЕСТНО') Y_COORD
                    ,coalesce((C.Z_COORD)::text , 'НЕИЗВЕСТНО') Z_COORD
                    ,coalesce((sp.STATION)::text , 'НЕИЗВЕСТНО') KM_START
                    ,coalesce((spe.STATION)::text , 'НЕИЗВЕСТНО') KM_END
                    ,coalesce((er.LENGTH)::text , 'НЕИЗВЕСТНО') LENGTH
                    FROM PODS.ROAD t
                    JOIN PODS.EVENT_RANGE er
                    ON er.EVENT_ID = t.EVENT_ID
                    JOIN PODS.STATION_POINT sp
                    ON er.STATION_ID_BEGIN = sp.STATION_ID
                    JOIN PODS.STATION_POINT spe
                    ON er.STATION_ID_END = spe.STATION_ID
                    JOIN pods.COORDINATE c
                    ON sp.LOCATION_ID = c.LOCATION_ID
                    JOIN PODS.LINE ln
                    ON ln.LINE_ID = sp.LINE_ID
                    LEFT OUTER JOIN route_dia_w_thick rdt
                    ON sp.route_id = rdt.route_id
                    WHERE er.CURRENT_INDICATOR_LF = 'Y') d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="WATERWAY" schema="PODS" id="PODS_WATERWAY" comment="PODS.WATERWAY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    WITH route_dia_w_thick AS (SELECT spb.route_id,d.description nominal_diameter_gcl,t.description
                    nominal_wall_thickness_gcl,d.code diameter
                    FROM pods.event_range erPS
                    JOIN pods.pipe_segment ps
                    ON erPS.event_id = ps.event_id
                    JOIN pods.station_point spb
                    ON erPS.station_id_begin = spb.station_id
                    JOIN pods.nominal_diameter_gcl d
                    ON ps.nominal_diameter_gcl = d.code
                    JOIN pods.nominal_wall_thickness_gcl t
                    ON ps.nominal_wall_thickness_gcl = t.code
                    WHERE erPS.feature_id = 'PIPE_SEGMENT'
                    AND erPS.CURRENT_INDICATOR_LF = 'Y')
                    SELECT coalesce ( (ID)::text, 'НЕИЗВЕСТНО') ID,
                    coalesce ( (EVENT_ID)::text, 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce ( (EVENT_GUID), 'НЕИЗВЕСТНО') EVENT_GUID,
                    CASE WHEN TYPE_CL = 'UNKNOWN' THEN 'НЕИЗВЕСТНО' ELSE TYPE_CL END TYPE_CL,
                    coalesce ( (PROTECTED_LF), 'НЕИЗВЕСТНО') PROTECTED_LF,
                    coalesce ( (INTERSECTION_ANGLE)::text, 'НЕИЗВЕСТНО') INTERSECTION_ANGLE,
                    coalesce ( (SCALED_GCL)::text, 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce ( (DIRECTION_GCL)::text, 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce ( (SOURCE_NUMBER)::text, 'НЕИЗВЕСТНО') SOURCE_NUMBER,
                    coalesce ( (WIDTH)::text, 'НЕИЗВЕСТНО') WIDTH,
                    coalesce ( (GEOGRAPHIC_ENTITY_ID)::text, 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_ID,
                    coalesce ( (GEOGRAPHIC_ENTITY_GUID), 'НЕИЗВЕСТНО') GEOGRAPHIC_ENTITY_GUID,
                    coalesce (CASING_INDICATOR_LF, 'НЕИЗВЕСТНО') CASING_INDICATOR_LF,
                    coalesce (DESCRIPTION, 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce (SOURCE_GCL, 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce (COMMENTS, 'НЕИЗВЕСТНО') "comments",
                    coalesce(LINE_DESCRIPTION, 'НЕИЗВЕСТНО') LINE_DESCRIPTION,
                    coalesce( (STATION)::text, 'НЕИЗВЕСТНО') STATION,
                    coalesce ( (NOMINAL_DIAMETER_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce ( (NOMINAL_WALL_THICKNESS_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL,
                    MARKER,
                    CATODIC_PROTECTED,
                    TEST_LEAD,
                    PI_COATING,
                    INSPECTION_YEAR,
                    X_COORD,
                    Y_COORD,
                    Z_COORD,
                    KM_START,
                    KM_END,
                    LENGTH
                    FROM (
                    SELECT DISTINCT t.EVENT_ID ID
                    ,t.*
                    ,ln.DESCRIPTION LINE_DESCRIPTION
                    ,sp.STATION
                    ,rdt.NOMINAL_DIAMETER_GCL
                    ,rdt.NOMINAL_WALL_THICKNESS_GCL
                    ,coalesce((SELECT MIN(1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'MARKER'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS(spM.MEASURE- sp.MEASURE) &lt;= CASE WHEN rdt.diameter BETWEEN 0 AND 1000 THEN 500
                    WHEN rdt.diameter BETWEEN 1001 AND 1400 THEN 750
                    WHEN rdt.diameter &gt; 1401 THEN 1000
                    END ),2) MARKER
                    ,coalesce((SELECT MIN(1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    WHERE ERM.FEATURE_ID = 'TEST_LEAD'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND ABS(spM.MEASURE- sp.MEASURE) &lt;= 300 ),2) TEST_LEAD
                    ,coalesce((SELECT MIN(1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'CATH_PROT_RNG'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE ),2) CATODIC_PROTECTED
                    ,coalesce((SELECT MIN(1)
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PI_COATING_DATA cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PI_COATING_DATA'
                    AND cd.CONDITION_CL = 'COAT_COND_BROKEN'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE ),2) PI_COATING
                    ,coalesce((SELECT (CD.INSPECTION_START_DATE,'YYYY')
                    FROM PODS.EVENT_RANGE erM
                    JOIN PODS.PHYSICAL_INSPECTION cd
                    ON erM.EVENT_ID = cd.EVENT_ID
                    JOIN PODS.STATION_POINT spM
                    ON erM.STATION_ID_BEGIN = spM.STATION_ID
                    JOIN PODS.STATION_POINT spM2
                    ON erM.STATION_ID_END = spM2.STATION_ID
                    WHERE ERM.FEATURE_ID = 'PHYS_INSP'
                    AND cd.INSPECTION_TYPE_GCL = 'INSP_TYPE_WATER'
                    AND ERM.CURRENT_INDICATOR_LF = 'Y'
                    AND spM.SERIES_ID = sp.SERIES_ID
                    AND sp.MEASURE BETWEEN spM.MEASURE AND spM2.MEASURE )::text , 'НЕИЗВЕСТНО') INSPECTION_YEAR
                    ,coalesce((C.X_COORD)::text , 'НЕИЗВЕСТНО') X_COORD
                    ,coalesce((C.Y_COORD)::text , 'НЕИЗВЕСТНО') Y_COORD
                    ,coalesce((C.Z_COORD)::text , 'НЕИЗВЕСТНО') Z_COORD
                    ,coalesce((sp.STATION)::text , 'НЕИЗВЕСТНО') KM_START
                    ,coalesce((spe.STATION)::text , 'НЕИЗВЕСТНО') KM_END
                    ,coalesce((er.LENGTH)::text , 'НЕИЗВЕСТНО') LENGTH
                    FROM PODS.WATERWAY t
                    JOIN PODS.EVENT_RANGE er
                    ON er.EVENT_ID = t.EVENT_ID
                    JOIN PODS.STATION_POINT sp
                    ON er.STATION_ID_BEGIN = sp.STATION_ID
                    JOIN PODS.STATION_POINT spe
                    ON er.STATION_ID_END = spe.STATION_ID
                    JOIN pods.COORDINATE c
                    ON sp.LOCATION_ID = c.LOCATION_ID
                    JOIN PODS.LINE ln
                    ON ln.LINE_ID = sp.LINE_ID
                    LEFT OUTER JOIN route_dia_w_thick rdt
                    ON sp.route_id = rdt.route_id
                    WHERE er.CURRENT_INDICATOR_LF = 'Y') d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COMPRESSOR_STATION" schema="PODS" id="PODS_COMPRESSOR_STATION" comment="PODS.COMPRESSOR_STATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, STATION_NUMBER НОМЕР_КС, STATION_NAME НАИМЕНОВАНИЕ,
                    TOTAL_HORSEPOWER МАКС_СУММ_УСТ_МОЩ_ПРИВ_И_ДВ, NUMBER_OF_ENGINES КОЛ_ПОРШ_ДВИГАТЕЛЕЙ,
                    NUMBER_OF_TURBINES КОЛ_ГАЗ_ТУРБИН, NUMBER_OF_MOTORS КОЛИ_ЭЛЕКТРОДВИГАТЕЛЕЙ,
                    ENGINES_USED_FOR_ELECTRICITY КОЛ_ПОРШНЕВЫХ_ДВИГАТЕЛЕЙ, TURBINES_USED_FOR_ELECTRICITY
                    КОЛ_ГАЗОВЫХ_ТУРБИН, TITLE_V_APPLICABLE_LF РАЗРЕШЕНИЕ_НА_ВЫБРОСЫ, TITLE_V_SUBMITTED_DATE
                    ДАТА_ПОДАЧИ_РАЗР_НА_ВЫБРОСЫ, TITLE_V_RECEIVED_DATE ДАТА_ПОЛУЧЕНИЯ_РАЗР_НА_ВЫБРОСЫ, SIP_APPLICABLE_LF
                    РАЗРЕШЕНИЕ_НА_РАБОТУ_SIP, SIP_SUBMITTED_DATE ДАТА_ПОД_РАЗР_НА_РАБ_SIP_УСТ, SIP_ISSUED_DATE
                    ДАТА_ПОЛУЧ_РАЗР_НА_РАБ_SIP_УСТ, (select description from PODS.PRIMARY_FUNCTION_CL where
                    PRIMARY_FUNCTION_CL=code) ТИП_КОМПРЕС_СТАНЦИИ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, ID, OFFLINE_ID, OFFLINE_GUID, STATION_NUMBER, STATION_NAME,
                    TOTAL_HORSEPOWER, NUMBER_OF_ENGINES, NUMBER_OF_TURBINES, NUMBER_OF_MOTORS,
                    ENGINES_USED_FOR_ELECTRICITY, TURBINES_USED_FOR_ELECTRICITY, TITLE_V_APPLICABLE_LF,
                    TITLE_V_SUBMITTED_DATE, TITLE_V_RECEIVED_DATE, SIP_APPLICABLE_LF, SIP_SUBMITTED_DATE,
                    SIP_ISSUED_DATE, PRIMARY_FUNCTION_CL, SOURCE_GCL FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((STATION_NUMBER)::text , 'НЕИЗВЕСТНО') STATION_NUMBER,
                    coalesce((STATION_NAME)::text , 'НЕИЗВЕСТНО') STATION_NAME, coalesce((TOTAL_HORSEPOWER)::text ,
                    'НЕИЗВЕСТНО') TOTAL_HORSEPOWER, coalesce((NUMBER_OF_ENGINES)::text , 'НЕИЗВЕСТНО')
                    NUMBER_OF_ENGINES, coalesce((NUMBER_OF_TURBINES)::text , 'НЕИЗВЕСТНО') NUMBER_OF_TURBINES,
                    coalesce((NUMBER_OF_MOTORS)::text , 'НЕИЗВЕСТНО') NUMBER_OF_MOTORS,
                    coalesce((ENGINES_USED_FOR_ELECTRICITY)::text , 'НЕИЗВЕСТНО') ENGINES_USED_FOR_ELECTRICITY,
                    coalesce((TURBINES_USED_FOR_ELECTRICITY)::text , 'НЕИЗВЕСТНО') TURBINES_USED_FOR_ELECTRICITY,
                    coalesce((TITLE_V_APPLICABLE_LF)::text , 'НЕИЗВЕСТНО') TITLE_V_APPLICABLE_LF,
                    coalesce((TITLE_V_SUBMITTED_DATE)::text , 'НЕИЗВЕСТНО') TITLE_V_SUBMITTED_DATE,
                    coalesce((TITLE_V_RECEIVED_DATE)::text , 'НЕИЗВЕСТНО') TITLE_V_RECEIVED_DATE,
                    coalesce((SIP_APPLICABLE_LF)::text , 'НЕИЗВЕСТНО') SIP_APPLICABLE_LF,
                    coalesce((SIP_SUBMITTED_DATE)::text , 'НЕИЗВЕСТНО') SIP_SUBMITTED_DATE,
                    coalesce((SIP_ISSUED_DATE)::text , 'НЕИЗВЕСТНО') SIP_ISSUED_DATE,
                    coalesce((PRIMARY_FUNCTION_CL)::text , 'НЕИЗВЕСТНО') PRIMARY_FUNCTION_CL,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID ID, t.* FROM
                    PODS.COMPRESSOR_STATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="DISTRIBUTION_PLANT" schema="PODS" id="PODS_DISTRIBUTION_PLANT" comment="PODS.DISTRIBUTION_PLANT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, NAME НАИМЕНОВАНИЕ, (select description from
                    PODS.DISTRIBUTION_PLANT_TYPE_CL where TYPE_CL=code) ТИП_ГРП_ШРП, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_INLET_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, (select
                    description from PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_OUTLET_GCL=code::text)
                    НОМИН_ДИАМ_НА_ВЫХОДЕ_ММ, SERIAL_NUMBER СЕРИЙНЫЙ_НОМЕР,MODEL НОМЕР_МОДЕЛИ, (select description from
                    PODS.DISTR_PLANT_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    DATE_MANUFACTURED ДАТА_ИЗГОТОВЛЕНИЯ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select description from
                    PODS.DISTR_PLANT_SPECIFICATION_CL where SPECIFICATION_CL=code) ТЕХНИЧЕСКИЕ_ТРЕБОВАНИЯ,
                    AUXILIARY_BUILDING_LF РАСПОЛОЖЕНИЕ_В_ЗДАНИИ, ELECTRICITY_LF ПОДКЛЮЧЕНИЕ_К_СЕТИ_220В,
                    VENT_PIPE_QUANTITY КОЛИЧЕСТВО_ВЫТЯЖНЫХ_СВЕЧЕЙ, NOMINAL_PRESSURE_RATING_INLET
                    РАБОЧЕЕ_ДАВЛ_КПА_НА_ВХОДЕ, NOMINAL_PRESSURE_RATING_OUTLET РАБОЧЕЕ_ДАВЛ_КПА_НА_ВЫХОДЕ,
                    MAOP_PRESSURE_RATING_OUTLET МАКС_РАЗРЕШ_ДАВЛ_КПА_НА_ВЫХОДЕ, MAOP_PRESSURE_RATING_INLET
                    МАКС_РАЗРЕШ_ДАВЛ_КПА_НА_ВХОДЕ, ADDRESS_ID АДРЕС, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, OFFLINE_ID,
                    OFFLINE_GUID, NAME, TYPE_CL, NOMINAL_DIAMETER_INLET_GCL, NOMINAL_DIAMETER_OUTLET_GCL, SERIAL_NUMBER,
                    MODEL, MANUFACTURER_CL, DATE_MANUFACTURED, DATE_INSTALLED, SPECIFICATION_CL, AUXILIARY_BUILDING_LF,
                    ELECTRICITY_LF, VENT_PIPE_QUANTITY, NOMINAL_PRESSURE_RATING_INLET, NOMINAL_PRESSURE_RATING_OUTLET,
                    MAOP_PRESSURE_RATING_OUTLET, MAOP_PRESSURE_RATING_INLET, ADDRESS_ID, ADDRESS_GUID, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((NOMINAL_DIAMETER_INLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_INLET_GCL, coalesce((NOMINAL_DIAMETER_OUTLET_GCL)::text , 'НЕИЗВЕСТНО')
                    NOMINAL_DIAMETER_OUTLET_GCL, coalesce((SERIAL_NUMBER)::text , 'НЕИЗВЕСТНО') SERIAL_NUMBER,
                    coalesce((MODEL)::text , 'НЕИЗВЕСТНО') MODEL, coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО')
                    MANUFACTURER_CL, coalesce((DATE_MANUFACTURED)::text , 'НЕИЗВЕСТНО') DATE_MANUFACTURED,
                    coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((SPECIFICATION_CL)::text ,
                    'НЕИЗВЕСТНО') SPECIFICATION_CL, coalesce((AUXILIARY_BUILDING_LF)::text , 'НЕИЗВЕСТНО')
                    AUXILIARY_BUILDING_LF, coalesce((ELECTRICITY_LF)::text , 'НЕИЗВЕСТНО') ELECTRICITY_LF,
                    coalesce((VENT_PIPE_QUANTITY)::text , 'НЕИЗВЕСТНО') VENT_PIPE_QUANTITY,
                    coalesce((NOMINAL_PRESSURE_RATING_INLET)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING_INLET,
                    coalesce((NOMINAL_PRESSURE_RATING_OUTLET)::text , 'НЕИЗВЕСТНО') NOMINAL_PRESSURE_RATING_OUTLET,
                    coalesce((MAOP_PRESSURE_RATING_OUTLET)::text , 'НЕИЗВЕСТНО') MAOP_PRESSURE_RATING_OUTLET,
                    coalesce((MAOP_PRESSURE_RATING_INLET)::text , 'НЕИЗВЕСТНО') MAOP_PRESSURE_RATING_INLET,
                    coalesce((ADDRESS_ID)::text , 'НЕИЗВЕСТНО') ADDRESS_ID, coalesce((ADDRESS_GUID)::text ,
                    'НЕИЗВЕСТНО') ADDRESS_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.DISTRIBUTION_PLANT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="HCA_IDENTIFIED_SITE" schema="PODS" id="PODS_HCA_IDENTIFIED_SITE" comment="PODS.HCA_IDENTIFIED_SITE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.HCA_IDENTIFIED_SITE_TYPE_CL where
                    TYPE_CL=code) ТИП_ЗОНЫ, DESCRIPTION ОПИСАНИЕ, VISIBLE_EXTERNAL_SIGNAGE_LF
                    ЗОНА_ОБОЗНАЧЕНА_НА_МЕСТНОСТИ, (select description from PODS.HCA_IDENT_SITE_FREQ_OF_USE_CL where
                    FREQUENCY_OF_USE_CL=code) ЧАСТОТА_ИСПОЛЬЗОВАНИЯ_ОБЪЕКТА, OCCUPANTS_REDUCED_MOBILITY_LF
                    ЖИТЕЛИ_С_ОГРАНИЧ_ВОЗМОЖНОСТЯМИ, OUTDOOR_GATHERING_LF ЛЮДИ_НА_ОТКРЫТОМ_ВОЗДУХЕ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, ID, HCA_IDENTIFIED_SITE_ID,
                    HCA_IDENTIFIED_SITE_GUID, OFFLINE_ID, OFFLINE_GUID, TYPE_CL, DESCRIPTION,
                    VISIBLE_EXTERNAL_SIGNAGE_LF, FREQUENCY_OF_USE_CL, OCCUPANTS_REDUCED_MOBILITY_LF,
                    OUTDOOR_GATHERING_LF, SOURCE_GCL FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((HCA_IDENTIFIED_SITE_ID)::text , 'НЕИЗВЕСТНО') HCA_IDENTIFIED_SITE_ID,
                    coalesce((HCA_IDENTIFIED_SITE_GUID)::text , 'НЕИЗВЕСТНО') HCA_IDENTIFIED_SITE_GUID,
                    coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((VISIBLE_EXTERNAL_SIGNAGE_LF)::text , 'НЕИЗВЕСТНО') VISIBLE_EXTERNAL_SIGNAGE_LF,
                    coalesce((FREQUENCY_OF_USE_CL)::text , 'НЕИЗВЕСТНО') FREQUENCY_OF_USE_CL,
                    coalesce((OCCUPANTS_REDUCED_MOBILITY_LF)::text , 'НЕИЗВЕСТНО') OCCUPANTS_REDUCED_MOBILITY_LF,
                    coalesce((OUTDOOR_GATHERING_LF)::text , 'НЕИЗВЕСТНО') OUTDOOR_GATHERING_LF,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID ID, t.* FROM
                    PODS.HCA_IDENTIFIED_SITE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="POPULATED_AREA" schema="PODS" id="PODS_POPULATED_AREA" comment="PODS.POPULATED_AREA">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.POPULATED_AREA_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБЪЕКТА, NAME НАИМЕНОВАНИЕ, OCCUPANT_COUNT КОЛИЧЕСТВО_ЛЮДЕЙ, (select description
                    from PODS.OCCUPANCY_CATEGORY_GCL where OCCUPANCY_CATEGORY_GCL=code) КАТЕГ_ОБЪЕКТА_ПО_ВМЕСТИМ,
                    DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, (select description from PODS.DETERMINATION_METHOD_GCL where
                    DETERMINATION_METHOD_GCL=code) СПОСОБ_ОБСЛЕДОВАНИЯ, SITE_ADDRESS_ID АДРЕС, CONTACT_ID
                    КОНТАКТНОЕ_ЛИЦО, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ,ID, OFFLINE_ID, OFFLINE_GUID, TYPE_CL, NAME, OCCUPANT_COUNT,
                    OCCUPANCY_CATEGORY_GCL, DETERMINATION_DATE, DETERMINATION_METHOD_GCL, SITE_ADDRESS_ID,
                    SITE_ADDRESS_GUID, CONTACT_ID, CONTACT_GUID, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text
                    , 'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID,
                    coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((OCCUPANT_COUNT)::text ,
                    'НЕИЗВЕСТНО') OCCUPANT_COUNT, coalesce((OCCUPANCY_CATEGORY_GCL)::text , 'НЕИЗВЕСТНО')
                    OCCUPANCY_CATEGORY_GCL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((SITE_ADDRESS_ID)::text , 'НЕИЗВЕСТНО') SITE_ADDRESS_ID, coalesce((SITE_ADDRESS_GUID)::text
                    , 'НЕИЗВЕСТНО') SITE_ADDRESS_GUID, coalesce((CONTACT_ID)::text , 'НЕИЗВЕСТНО') CONTACT_ID,
                    coalesce((CONTACT_GUID)::text , 'НЕИЗВЕСТНО') CONTACT_GUID, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    OFFLINE_ID ID, t.* FROM PODS.POPULATED_AREA t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PUMP_STATION" schema="PODS" id="PODS_PUMP_STATION" comment="PODS.PUMP_STATION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, OFFLINE_ID, OFFLINE_GUID, STATION_NUMBER, NAME НАИМЕНОВАНИЕ,
                    STATE_GCL, TOTAL_HORSEPOWER, NUMBER_OF_UNITS, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, ID, OFFLINE_ID, OFFLINE_GUID, STATION_NUMBER, NAME, STATE_GCL,
                    TOTAL_HORSEPOWER, NUMBER_OF_UNITS, SOURCE_GCL FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((STATION_NUMBER)::text , 'НЕИЗВЕСТНО') STATION_NUMBER,
                    coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((STATE_GCL)::text , 'НЕИЗВЕСТНО') STATE_GCL,
                    coalesce((TOTAL_HORSEPOWER)::text , 'НЕИЗВЕСТНО') TOTAL_HORSEPOWER, coalesce((NUMBER_OF_UNITS)::text
                    , 'НЕИЗВЕСТНО') NUMBER_OF_UNITS, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT
                    OFFLINE_ID ID, t.* FROM PODS.PUMP_STATION t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STRUCTURE_TYPE_CL where
                    TYPE_CL=code) ТИП_ГРАЖДАНСКОГО_СООРУЖЕНИЯ, NAME НАИМЕНОВАНИЕ, OCCUPANT_COUNT КОЛ_ЛЮДЕЙ, (select
                    description from PODS.OCCUPANCY_CATEGORY_GCL where OCCUPANCY_CATEGORY_GCL=code)
                    КАТЕГОР_ОБЪЕКТА_ПО_ВМЕСТ, DETERMINATION_DATE ДАТА_И_ВРЕМЯ_ОТКЛ, (select description from
                    PODS.DETERMINATION_METHOD_GCL where DETERMINATION_METHOD_GCL=code) СПОСОБ_ОБСЛЕДОВАНИЯ,
                    SITE_ADDRESS_ID АДРЕС, CONTACT_ID КОНТАКТНОЕ_ЛИЦО, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, ID, OFFLINE_ID, OFFLINE_GUID, TYPE_CL, NAME, OCCUPANT_COUNT,
                    OCCUPANCY_CATEGORY_GCL, DETERMINATION_DATE, DETERMINATION_METHOD_GCL, SITE_ADDRESS_ID,
                    SITE_ADDRESS_GUID, CONTACT_ID, CONTACT_GUID, SOURCE_GCL FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID,
                    coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((OCCUPANT_COUNT)::text ,
                    'НЕИЗВЕСТНО') OCCUPANT_COUNT, coalesce((OCCUPANCY_CATEGORY_GCL)::text , 'НЕИЗВЕСТНО')
                    OCCUPANCY_CATEGORY_GCL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((SITE_ADDRESS_ID)::text , 'НЕИЗВЕСТНО') SITE_ADDRESS_ID, coalesce((SITE_ADDRESS_GUID)::text
                    , 'НЕИЗВЕСТНО') SITE_ADDRESS_GUID, coalesce((CONTACT_ID)::text , 'НЕИЗВЕСТНО') CONTACT_ID,
                    coalesce((CONTACT_GUID)::text , 'НЕИЗВЕСТНО') CONTACT_GUID, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="TANK" schema="PODS" id="PODS_TANK" comment="PODS.TANK">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, TANK_NUMBER, COMPANY_GCL, BREAKOUT_TANK_LF,
                    SAP_EQUIPMENT_NUMBER, NOMINAL_CAPACITY, DIAMETER, SHELL_HEIGHT, MAX_PUMPING_RATE, ROOF_TYPE_CL,
                    FLOATING_ROOF_DESIGN_CL, PRIMARY_ROOF_SEAL_TYPE_CL, SECONDARY_ROOF_SEAL_TYPE_CL, ROOF_DRAIN_TYPE_CL,
                    BOTTOM_TYPE_CL, BOTTOM_DESIGN_CL, FOUNDATION_TYPE_CL, NUMBER_OF_TANK_MIXERS, API_STANDARD,
                    INTERNAL_LINING_LF, CONSTRUCTION_YEAR, SOURCE_GCL,ID, OFFLINE_ID, OFFLINE_GUID, TANK_NUMBER,
                    COMPANY_GCL, BREAKOUT_TANK_LF, SAP_EQUIPMENT_NUMBER, NOMINAL_CAPACITY, DIAMETER, SHELL_HEIGHT,
                    MAX_PUMPING_RATE, ROOF_TYPE_CL, FLOATING_ROOF_DESIGN_CL, PRIMARY_ROOF_SEAL_TYPE_CL,
                    SECONDARY_ROOF_SEAL_TYPE_CL, ROOF_DRAIN_TYPE_CL, BOTTOM_TYPE_CL, BOTTOM_DESIGN_CL,
                    FOUNDATION_TYPE_CL, NUMBER_OF_TANK_MIXERS, API_STANDARD, INTERNAL_LINING_LF, CONSTRUCTION_YEAR,
                    SOURCE_GCL FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text ,
                    'НЕИЗВЕСТНО') OFFLINE_ID, coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID,
                    coalesce((TANK_NUMBER)::text , 'НЕИЗВЕСТНО') TANK_NUMBER, coalesce((COMPANY_GCL)::text ,
                    'НЕИЗВЕСТНО') COMPANY_GCL, coalesce((BREAKOUT_TANK_LF)::text , 'НЕИЗВЕСТНО') BREAKOUT_TANK_LF,
                    coalesce((SAP_EQUIPMENT_NUMBER)::text , 'НЕИЗВЕСТНО') SAP_EQUIPMENT_NUMBER,
                    coalesce((NOMINAL_CAPACITY)::text , 'НЕИЗВЕСТНО') NOMINAL_CAPACITY, coalesce((DIAMETER)::text ,
                    'НЕИЗВЕСТНО') DIAMETER, coalesce((SHELL_HEIGHT)::text , 'НЕИЗВЕСТНО') SHELL_HEIGHT,
                    coalesce((MAX_PUMPING_RATE)::text , 'НЕИЗВЕСТНО') MAX_PUMPING_RATE, coalesce((ROOF_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') ROOF_TYPE_CL, coalesce((FLOATING_ROOF_DESIGN_CL)::text , 'НЕИЗВЕСТНО')
                    FLOATING_ROOF_DESIGN_CL, coalesce((PRIMARY_ROOF_SEAL_TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    PRIMARY_ROOF_SEAL_TYPE_CL, coalesce((SECONDARY_ROOF_SEAL_TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    SECONDARY_ROOF_SEAL_TYPE_CL, coalesce((ROOF_DRAIN_TYPE_CL)::text , 'НЕИЗВЕСТНО') ROOF_DRAIN_TYPE_CL,
                    coalesce((BOTTOM_TYPE_CL)::text , 'НЕИЗВЕСТНО') BOTTOM_TYPE_CL, coalesce((BOTTOM_DESIGN_CL)::text ,
                    'НЕИЗВЕСТНО') BOTTOM_DESIGN_CL, coalesce((FOUNDATION_TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    FOUNDATION_TYPE_CL, coalesce((NUMBER_OF_TANK_MIXERS)::text , 'НЕИЗВЕСТНО') NUMBER_OF_TANK_MIXERS,
                    coalesce((API_STANDARD)::text , 'НЕИЗВЕСТНО') API_STANDARD, coalesce((INTERNAL_LINING_LF)::text ,
                    'НЕИЗВЕСТНО') INTERNAL_LINING_LF, coalesce((CONSTRUCTION_YEAR)::text , 'НЕИЗВЕСТНО')
                    CONSTRUCTION_YEAR, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID
                    ID, t.* FROM PODS.TANK t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="UMBILICAL" schema="PODS" id="PODS_UMBILICAL" comment="PODS.UMBILICAL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.UMBILICAL_FUNCTION_CL where
                    FUNCTION_CL=code) НАЗНАЧЕНИЕ_ПОДВОДНОГО_КАБЕЛЯ, (select description from PODS.UMBILICAL_TYPE_CL
                    where TYPE_CL=code) ТИП_ПОДВОДНОГО_КАБЕЛЯ, LENGTH ДЛИНА_М, CONNECTED_FROM_LOCATION
                    МЕСТО_НАЧАЛА_КАБЕЛЯ, CONNECTED_TO_LOCATION МЕСТО_ОКОНЧАНИЯ_КАБЕЛЯ, (select description from
                    PODS.UMBILICAL_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, (select description from
                    PODS.NOMINAL_DIAMETER_GCL where NOMINAL_DIAMETER_GCL=code::text) НОМИНАЛЬНЫЙ_ДИАМЕТР, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, OFFLINE_ID, OFFLINE_GUID, FUNCTION_CL, TYPE_CL, LENGTH, CONNECTED_FROM_LOCATION,
                    CONNECTED_TO_LOCATION, MATERIAL_CL, NOMINAL_DIAMETER_GCL, DESCRIPTION, SOURCE_GCL, "comments"
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО')
                    OFFLINE_ID, coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((FUNCTION_CL)::text
                    , 'НЕИЗВЕСТНО') FUNCTION_CL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((LENGTH)::text , 'НЕИЗВЕСТНО') LENGTH, coalesce((CONNECTED_FROM_LOCATION)::text ,
                    'НЕИЗВЕСТНО') CONNECTED_FROM_LOCATION, coalesce((CONNECTED_TO_LOCATION)::text , 'НЕИЗВЕСТНО')
                    CONNECTED_TO_LOCATION, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((NOMINAL_DIAMETER_GCL)::text , 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    OFFLINE_ID ID, t.* FROM PODS.UMBILICAL t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COMMENTS" schema="PODS" id="PODS_COMMENTS" comment="PODS.COMMENTS">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT TABLE_ID, COMMENTS КОММЕНТАРИИ, COMMENT_DATE, COMMENT_BY, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, ORIGINAL_COMMENTS_ID, EFFECTIVE_TO_DATE,
                    EFFECTIVE_FROM_DATE, CURRENT_INDICATOR_LF, PODS_USER, CREATE_DATE, PREVIOUS_COMMENTS_ID,
                    COMMENTS_ID, COMMENTS_GUID, TABLE_ID,GUID, COMMENTS, COMMENT_DATE, COMMENT_BY, SOURCE_GCL,
                    ORIGINAL_COMMENTS_ID, ORIGINAL_COMMENTS_GUID, EFFECTIVE_TO_DATE, EFFECTIVE_FROM_DATE,
                    CURRENT_INDICATOR_LF, PODS_USER, CREATE_DATE, PREVIOUS_COMMENTS_ID, PREVIOUS_COMMENTS_GUID
                    FROM(SELECT coalesce((COMMENTS_ID)::text , 'НЕИЗВЕСТНО') COMMENTS_ID, coalesce((COMMENTS_GUID)::text
                    , 'НЕИЗВЕСТНО') COMMENTS_GUID, coalesce((TABLE_ID)::text , 'НЕИЗВЕСТНО') TABLE_ID,
                    coalesce((GUID)::text , 'НЕИЗВЕСТНО') GUID, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments",
                    coalesce((COMMENT_DATE)::text , 'НЕИЗВЕСТНО') COMMENT_DATE, coalesce((COMMENT_BY)::text ,
                    'НЕИЗВЕСТНО') COMMENT_BY, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((ORIGINAL_COMMENTS_ID)::text , 'НЕИЗВЕСТНО') ORIGINAL_COMMENTS_ID,
                    coalesce((ORIGINAL_COMMENTS_GUID)::text , 'НЕИЗВЕСТНО') ORIGINAL_COMMENTS_GUID,
                    coalesce((EFFECTIVE_TO_DATE)::text , 'НЕИЗВЕСТНО') EFFECTIVE_TO_DATE,
                    coalesce((EFFECTIVE_FROM_DATE)::text , 'НЕИЗВЕСТНО') EFFECTIVE_FROM_DATE,
                    coalesce((CURRENT_INDICATOR_LF)::text , 'НЕИЗВЕСТНО') CURRENT_INDICATOR_LF,
                    coalesce((PODS_USER)::text , 'НЕИЗВЕСТНО') PODS_USER, coalesce((CREATE_DATE)::text , 'НЕИЗВЕСТНО')
                    CREATE_DATE, coalesce((PREVIOUS_COMMENTS_ID)::text , 'НЕИЗВЕСТНО') PREVIOUS_COMMENTS_ID,
                    coalesce((PREVIOUS_COMMENTS_GUID)::text , 'НЕИЗВЕСТНО') PREVIOUS_COMMENTS_GUID FROM (SELECT
                    COMMENTS_ID ID, t.* FROM PODS.COMMENTS t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="COUPON" schema="PODS" id="PODS_COUPON" comment="PODS.COUPON">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, COUPON_ID ИДЕНТИФ_КОНТРОЛЬНОЙ_ПЛАСТИНЫ, COUPON_SITE_EVENT_ID
                    ИДЕНТИФ_МОНТАЖНОЙ_ПЛОЩАДКИ, METAL_DENSITY ПЛОТНОСТЬ_МЕТАЛЛА, (select description from
                    PODS.COUPON_TYPE_CL where TYPE_CL=code) ТИП_КОНТРОЛЬНОЙ_ПЛАСТИНЫ, (select description from
                    PODS.COUPON_MATERIAL_CL where MATERIAL_CL=code) МАТЕРИАЛ, SURFACE_AREA ПЛОЩАДЬ_ПЛАСТИНЫ_М2, (select
                    description from PODS.COUPON_SURFACE_FINISH_CL where SURFACE_FINISH_CL=code)
                    КЛАСС_ОБРАБОТКИ_ПОВЕРХНОСТИ, MASS_AT_INSTALL УСТАНОВОЧНАЯ_МАССА_КГ, DEPTH_OF_COVER
                    ГЛУБИНА_ЗАЛОЖ_ДО_ВЕРХА_ТРУБЫ_М, DESCRIPTION ОПИСАНИЕ, DATE_INSTALLED ДАТА_УСТАНОВКИ_МОНТАЖА,(select
                    description from PODS.COUPON_MANUFACTURER_CL where MANUFACTURER_CL=code) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    COMMENTS КОММЕНТАРИИ, (select description from PODS.source_gcl where source_gcl=code)
                    ИСТОЧНИК_ДАННЫХ, ID, COUPON_ID, COUPON_SITE_EVENT_ID, COUPON_SITE_EVENT_GUID, METAL_DENSITY,
                    TYPE_CL, MATERIAL_CL, SURFACE_AREA, SURFACE_FINISH_CL, MASS_AT_INSTALL, DEPTH_OF_COVER, DESCRIPTION,
                    DATE_INSTALLED, MANUFACTURER_CL, COMMENTS, SOURCE_GCL FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((COUPON_ID)::text , 'НЕИЗВЕСТНО') COUPON_ID,
                    coalesce((COUPON_SITE_EVENT_ID)::text , 'НЕИЗВЕСТНО') COUPON_SITE_EVENT_ID,
                    coalesce((COUPON_SITE_EVENT_GUID)::text , 'НЕИЗВЕСТНО') COUPON_SITE_EVENT_GUID,
                    coalesce((METAL_DENSITY)::text , 'НЕИЗВЕСТНО') METAL_DENSITY, coalesce((TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') TYPE_CL, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((SURFACE_AREA)::text , 'НЕИЗВЕСТНО') SURFACE_AREA, coalesce((SURFACE_FINISH_CL)::text ,
                    'НЕИЗВЕСТНО') SURFACE_FINISH_CL, coalesce((MASS_AT_INSTALL)::text , 'НЕИЗВЕСТНО') MASS_AT_INSTALL,
                    coalesce((DEPTH_OF_COVER)::text , 'НЕИЗВЕСТНО') DEPTH_OF_COVER, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((DATE_INSTALLED)::text , 'НЕИЗВЕСТНО') DATE_INSTALLED,
                    coalesce((MANUFACTURER_CL)::text , 'НЕИЗВЕСТНО') MANUFACTURER_CL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments", coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT
                    COUPON_ID ID, t.* FROM PODS.COUPON t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ILI_INSPECTION" schema="PODS" id="PODS_ILI_INSPECTION" comment="PODS.ILI_INSPECTION">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <param name="SYS_OBJ_ID" type="Int64" direction="Input">
                </param>
                <query>
                    WITH report AS (SELECT i.*, r.event_id event_id, s.route_id, s.station_begin station_beg,
                    s.station_end station_end, c.description company_name, CASE WHEN l.line_id = 0 THEN 'ОТЧЕТ НЕ
                    РАССЧИТАН. ' ELSE rtc.description END route_type, CASE WHEN l.line_id = 0 THEN r.description ELSE
                    l.description END line_name, (SELECT count(*) FROM pods.ili_data f WHERE f.ili_inspection_id =
                    :SYS_OBJ_ID AND f.anomaly_type_cl = 5001) WELDS_COUNT, (SELECT
                    ABS(MAX(F.ABSOLUTE_ODOMETER)-MIN(F.ABSOLUTE_ODOMETER))/1000 FROM pods.ili_data f WHERE
                    f.ili_inspection_id = :SYS_OBJ_ID AND f.anomaly_type_cl = 5001) INSP_LENGTH FROM pods.ili_inspection
                    i JOIN pods.ili_inspection_range r ON r.ili_inspection_id = i.ili_inspection_id and
                    i.ili_inspection_id= :SYS_OBJ_ID JOIN pods.event_range e ON e.event_id = r.event_id JOIN
                    pods.station_point sp ON sp.station_id = e.station_id_begin JOIN pods.series s ON s.series_id =
                    sp.series_id JOIN pods.route rt ON sp.route_id = rt.route_id JOIN pods.line l ON sp.line_id =
                    l.line_id JOIN pods.route_type_cl rtc ON rt.type_cl = rtc.code JOIN pods.ili_tool_vendor_cl c ON
                    c.code = i.tool_vendor_cl ), diameter AS (SELECT
                    coalesce(NULLIF(MIN(ps.nominal_diameter_gcl),0),'1420') nominal_diameter_gcl FROM pods.station_point
                    spe JOIN pods.event_range eps ON spe.station_id = eps.station_id_begin AND eps.FEATURE_ID =
                    'PIPE_SEGMENT' JOIN pods.pipe_segment ps ON eps.event_id = ps.event_id JOIN report ON
                    report.route_id = spe.route_id), defect_pipe_length AS (SELECT
                    dd.ili_data_id,coalesce(MIN(ABS(pl.end_odometer-pl.start_odometer)),'10') defect_pipe_length FROM
                    pods.ili_data dd JOIN pods.ili_pipe_length pl ON pl.ili_inspection_id = dd.ili_inspection_id AND
                    pl.weld_number = dd.weld_number WHERE dd.ili_inspection_id = :SYS_OBJ_ID GROUP BY dd.ili_data_id),
                    left_marker AS (SELECT ili_data_id,marker_distance_left,coalesce(marker_name_left::text ,
                    'НЕИЗВЕСТНО') marker_name_left FROM (SELECT dd.ili_data_id ,ROW_NUMBER() OVER (PARTITION BY
                    dd.ili_data_id ORDER BY ft.absolute_odometer DESC) rwn ,ft.absolute_odometer marker_distance_left
                    ,ft.feature_description marker_name_left FROM pods.ili_data dd JOIN pods.ili_data ft ON
                    ft.ili_inspection_id =dd.ili_inspection_id AND ft.absolute_odometer &lt;dd.absolute_odometer WHERE
                    ft.anomaly_type_cl IN ( SELECT code FROM pods.ili_anomaly_type_cl WHERE category_cl = 2) AND
                    dd.ili_inspection_id = :SYS_OBJ_ID) x00 WHERE rwn = 1), right_marker AS (SELECT
                    ili_data_id,marker_distance_right,coalesce(marker_name_right::text , 'НЕИЗВЕСТНО') marker_name_right
                    FROM (SELECT dd.ili_data_id ,ROW_NUMBER() OVER (PARTITION BY dd.ili_data_id ORDER BY
                    ft.absolute_odometer ASC) rwn ,ft.absolute_odometer marker_distance_right ,ft.feature_description
                    marker_name_right FROM pods.ili_data dd JOIN pods.ili_data ft ON ft.ili_inspection_id
                    =dd.ili_inspection_id AND ft.absolute_odometer &gt;dd.absolute_odometer WHERE ft.anomaly_type_cl IN
                    ( SELECT code FROM pods.ili_anomaly_type_cl WHERE category_cl = 2) AND dd.ili_inspection_id =
                    :SYS_OBJ_ID) x02 WHERE rwn = 1) SELECT * /* q11*/ FROM (SELECT sorter,CASE IS_CLUSTER WHEN 0 THEN
                    REPLACE((def.ili_cluster_id )::text,'.',',') ELSE REPLACE((def.ili_data_id )::text,'.',',') END ID,
                    coalesce(REPLACE(regexp_replace( (def.orientation_deg/360*12)::text,'^\.','0,'),'.',','),'0')
                    orientation_deg /*ОРИЕНТАЦИЯ ДЕФЕКТА В ГРАДУСАХ */, coalesce(REPLACE(
                    (def.nominal_wall_thickness)::text,'.',','), '16' ) nominal_wall_thickness /*ТОЛЩИНА СТЕНКИ */,
                    coalesce (def.weld_number, 'НЕИЗВЕСТНО') weld_number /*НОМЕР ТРУБЫ */, coalesce(REPLACE(
                    (def.station)::text,'.',','), '-999') station /*КИЛОМЕТР */, coalesce(REPLACE(
                    (def.calibrated_measure)::text,'.',','),'-999') calibrated_measure /*ЛИНЕЙНАЯ ДИСТАЦИЯ ГЕОДЕЗИЧЕСКАЯ
                    */, REPLACE((def.ili_data_id)::text,'.',',') ili_data_id /*ИДЕНТИФИКАТОР ДЕФЕКТА*/,
                    coalesce(REPLACE( (def.LENGTH)::text,'.',','), '0') LENGTH /*ДЛИНА ДЕФЕКТА*/, coalesce(REPLACE(
                    (def.average_depth)::text,'.',','), '5' ) average_depth /*СРЕДНЯЯ ГЛУБИНА ПОРАЖЕНИЯ*/,
                    coalesce(REPLACE( (def.width)::text,'.',','), '0') width /*ШИРИНА*/, coalesce(REPLACE(
                    (def.absolute_odometer)::text,'.',','),'-999') absolute_odometer /*ЛИНЕЙНАЯ ДИСТАЦИЯ
                    ГЕОДЕЗИЧЕСКАЯ*/, coalesce(def.absolute_odometer,-999) real_absolute_odometer /*ЛИНЕЙНАЯ ДИСТАЦИЯ
                    ГЕОДЕЗИЧЕСКАЯ*/, coalesce(REPLACE( (def.anomaly_type_cl)::text,'.',','),'0') anomaly_type_cl
                    /*ПРИКРУТИТЬ СПРАВОЧНИК */, coalesce (def.anomaly_extension_cl,'UNKNOWN') anomaly_extension_cl,
                    coalesce (def.feature_description::text , 'НЕИЗВЕСТНО') feature_description /* ОПИСАНИЕ ДЕФЕКТА */,
                    coalesce (def_description, 'НЕИЗВЕСТНО') type_description /*ТИП ДЕФЕКТА */, coalesce
                    (def.description, ' ') description /* ОПИСАНИЕ */, CASE WHEN report.line_name IS NOT NULL THEN
                    coalesce (report.route_type, '')|| ' '|| coalesce (report.line_name, '')|| ' '|| coalesce
                    (report.station_beg::text, '')|| ' - '|| coalesce (report.station_end::text, '')|| ' КМ ' ELSE
                    'НЕИЗВЕСТНО' END line_name, coalesce ( (report.begin_date)::text, 'НЕИЗВЕСТНО') begin_date /*ДАТА
                    ПРОВЕДЕНИЯ */, coalesce (report.company_name, 'НЕИЗВЕСТНО') company_name,
                    coalesce(REPLACE((def.x_coord)::text,'.',','),'-999') x_coord, /*ДОЛГОТА */
                    coalesce(REPLACE((def.y_coord)::text,'.',','),'-999') y_coord, /*ШИРОТА */
                    coalesce(REPLACE((def.z_coord)::text,'.',','),'-999') z_coord, /*АБС. ВЫСОТА */
                    coalesce(REPLACE((def.depth_of_cover)::text,'.',','),'-999') depth_of_cover /* ГЛУБИНА ЗАЛОЖЕНИЯ */,
                    coalesce(REPLACE((diameter.nominal_diameter_gcl )::text,'.',','),'1420') nominal_diameter_gcl,
                    coalesce(REPLACE((ABS( absolute_odometer - lm.marker_distance_left)::text),'.',','),'-999')
                    marker_distance_left /*ДИСТАНЦИЯ ДО МАРКЕРА СЛЕВА */, lm.marker_name_left /* ИМЯ МАРКЕРА СЛЕВА*/ ,
                    coalesce(REPLACE((ABS( absolute_odometer - rm.marker_distance_right)::text),'.',','),'-999')
                    marker_distance_right /* ДИСТАНЦИЯ ДО МАРКЕРА СПРАВА */ , rm.marker_name_right /*ИМЯ МАРКЕРА
                    СПРАВА*/, REPLACE((coalesce(dpl.defect_pipe_length,10))::text,'.',',') defect_pipe_length,
                    REPLACE((anomaly_group)::text,'.',',') anomaly_group, coalesce(REPLACE(regexp_replace(
                    (US_WELD_DISTANCE)::text,'^\.','0,'),'.',','),'0') US_WELD_DISTANCE,
                    coalesce(REPLACE(regexp_replace( (DS_WELD_DISTANCE)::text,'^\.','0,'),'.',','),'0')
                    DS_WELD_DISTANCE, IS_CLUSTER, ILI_CLUSTER_ID,
                    coalesce(REPLACE((def.ili_inspection_id)::text,'.',','),'0') ILI_INSPECTION_ID,
                    coalesce(REPLACE((report.WELDS_COUNT)::text,'.',','),'10000') WELDS_COUNT,
                    coalesce(REPLACE((report.INSP_LENGTH)::text,'.',','),'100') INSP_LENGTH FROM (SELECT
                    d.orientation_deg ,d.nominal_wall_thickness ,d.weld_number ,d.calibrated_measure ,d.ili_data_id
                    ,d.LENGTH ,d.average_depth ,d.width ,d.absolute_odometer ,d.anomaly_type_cl ,d.anomaly_extension_cl
                    ,d.feature_description ,d.description ,d.ili_inspection_id ,CASE WHEN d.ili_cluster_id IS NOT NULL
                    THEN 1 ELSE -1 END is_cluster ,ili_cluster_id ,d.ds_weld_distance ,d.us_weld_distance ,sp.station,
                    ia.description anomaly_type, ia.description def_description, c.x_coord, c.y_coord, c.z_coord,
                    l.depth_of_cover, CASE WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_003' THEN '1' WHEN
                    D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_004' AND IA.CODE = 121 THEN '1' WHEN D.ANOMALY_EXTENSION_CL =
                    'ANOMALY_EXT_001' THEN '2' WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_002' AND IA.CODE !=144 THEN
                    '4' WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_005' THEN '2' WHEN D.ANOMALY_EXTENSION_CL =
                    'ANOMALY_EXT_007' THEN '2' WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_009' THEN '2' WHEN
                    D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_006' THEN '3' WHEN IA.CODE !=144 THEN '4' ELSE '-1' END
                    ANOMALY_GROUP, 1 COI_COUNT, 99 sorter FROM pods.ili_data d JOIN pods.ili_anomaly_type_cl ia ON
                    d.anomaly_type_cl = ia.code AND ia.category_cl = 1 LEFT JOIN pods.event_range e ON d.event_id =
                    e.event_id LEFT JOIN pods.station_point sp ON e.station_id_begin = sp.station_id LEFT JOIN
                    pods.coordinate c ON c.coordinate_id = d.coordinate_id LEFT JOIN pods.LOCATION l ON c.location_id =
                    l.location_id WHERE d.ili_inspection_id = :SYS_OBJ_ID UNION ALL /*ПОШЛИ КЛАСТЕРА*/ SELECT
                    ic.avg_orientation::NUMERIC orientation_deg ,d.nominal_wall_thickness ,d.weld_number
                    ,d.calibrated_measure ,d.ili_data_id ,ic.EFFECTIVE_LENGTH LENGTH ,(SELECT MAX(average_depth) FROM
                    pods.ili_data idd WHERE idd.ili_cluster_id = ic.ili_cluster_id) average_depth ,ic.EFFECTIVE_WIDTH
                    width ,d.absolute_odometer ,9 anomaly_type_cl ,CASE ic.description WHEN 'РЕМОНТНОЕ МЕСТО' THEN
                    'ANOMALY_EXT_003' WHEN 'ГРУППА ПОВЕРХНОСТНЫХ ДЕФЕКТОВ С КРН' THEN 'ANOMALY_EXT_005' ELSE
                    'ANOMALY_EXT_001' END anomaly_extension_cl ,ic.description feature_description ,ic.description
                    ,d.ili_inspection_id ,0 is_cluster ,d.ili_cluster_id ,d.ds_weld_distance ,d.us_weld_distance
                    ,sp.station, ia.description anomaly_type, ia.description def_description, c.x_coord, c.y_coord,
                    c.z_coord, l.depth_of_cover, CASE ic.description WHEN 'РЕМОНТНОЕ МЕСТО' THEN '1' WHEN 'ГРУППА
                    ПОВЕРХНОСТНЫХ ДЕФЕКТОВ С КРН' THEN '2' WHEN 'ГРУППА ПОВЕРХНОСТНЫХ ДЕФЕКТОВ БЕЗ КРН' THEN '2' ELSE
                    '-1' END anomaly_group, ic.anomaly_count COI_COUNT, 0 sorter FROM pods.ili_data d JOIN
                    pods.ili_anomaly_type_cl ia ON d.anomaly_type_cl = ia.code AND ia.category_cl = 1 JOIN (SELECT
                    DISTINCT ic.ili_cluster_id ,first_value (id.ili_data_id) OVER (PARTITION BY ic.ili_cluster_id ORDER
                    BY id.absolute_odometer ASC ) ili_data_id ,ic.EFFECTIVE_LENGTH ,ic.avg_depth ,ic.EFFECTIVE_WIDTH
                    ,ic.avg_orientation ,ic.anomaly_count ,ic.description FROM pods.ili_cluster ic JOIN pods.ili_data id
                    ON ic.ili_cluster_id = id.ili_cluster_id AND ic.ili_inspection_id = id.ili_inspection_id WHERE
                    id.ili_inspection_id = :SYS_OBJ_ID) ic ON ic.ili_cluster_id = d.ili_cluster_id AND ic.ili_data_id =
                    d.ili_data_id LEFT JOIN pods.event_range e ON d.event_id = e.event_id LEFT JOIN pods.station_point
                    sp ON e.station_id_begin = sp.station_id LEFT JOIN pods.coordinate c ON c.coordinate_id =
                    d.coordinate_id LEFT JOIN pods.LOCATION l ON c.location_id = l.location_id WHERE d.ili_cluster_id IS
                    NOT NULL AND d.ili_inspection_id = :SYS_OBJ_ID ) def JOIN report ON def.ili_inspection_id =
                    report.ili_inspection_id LEFT JOIN defect_pipe_length dpl ON dpl.ili_data_id = def.ili_data_id LEFT
                    OUTER JOIN left_marker lm ON lm.ili_data_id = def.ili_data_id LEFT OUTER JOIN right_marker rm ON
                    rm.ili_data_id = def.ili_data_id CROSS JOIN diameter ) d ORDER BY real_absolute_odometer,sorter
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LINE" schema="PODS" id="PODS_LINE" comment="PODS.LINE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, LINE_ID ИДЕНТИФИКАТОР_ТРУБОПРОВОДА, DESIGNATOR КОД_ТРУБОПРОВОДА,
                    DESCRIPTION ОПИСАНИЕ, (select description from PODS.LINE_TYPE_CL where TYPE_CL=code)
                    ТИП_ТРУБОПРОВОДА, (select description from PODS.PRODUCT_TYPE_SCL where PRODUCT_TYPE_SCL=code and
                    PRODUCT_SUBTYPE_SCL=subcode) ТИП_ПРОДУКТА, (select description from PODS.OPERATING_STATUS_GCL where
                    OPERATING_STATUS_GCL=code) ОПЕРАЦИОННЫЙ_СТАТУС, (select description from PODS.LINE_SYSTEM_TYPE_CL
                    where SYSTEM_TYPE_CL=code) ТИП_ТРУБОПРОВОДНОЙ_СИСТЕМЫ, INTERSTATE_LF
                    МЕЖГОСУДАРСТВЕННЫЙ_ТРУБОПРОВОД,ID, LINE_ID, LINE_GUID, DESIGNATOR, DESCRIPTION, TYPE_CL,
                    PRODUCT_TYPE_SCL, PRODUCT_SUBTYPE_SCL, OPERATING_STATUS_GCL, SYSTEM_TYPE_CL, INTERSTATE_LF
                    FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((LINE_ID)::text , 'НЕИЗВЕСТНО')
                    LINE_ID, coalesce((LINE_GUID)::text , 'НЕИЗВЕСТНО') LINE_GUID, coalesce((DESIGNATOR)::text ,
                    'НЕИЗВЕСТНО') DESIGNATOR, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((PRODUCT_TYPE_SCL)::text , 'НЕИЗВЕСТНО')
                    PRODUCT_TYPE_SCL, coalesce((PRODUCT_SUBTYPE_SCL)::text , 'НЕИЗВЕСТНО') PRODUCT_SUBTYPE_SCL,
                    coalesce((OPERATING_STATUS_GCL)::text , 'НЕИЗВЕСТНО') OPERATING_STATUS_GCL,
                    coalesce((SYSTEM_TYPE_CL)::text , 'НЕИЗВЕСТНО') SYSTEM_TYPE_CL, coalesce((INTERSTATE_LF)::text ,
                    'НЕИЗВЕСТНО') INTERSTATE_LF FROM (SELECT LINE_ID ID, t.* FROM PODS.LINE t) d WHERE {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="LINE_INTEREST" schema="PODS" id="PODS_LINE_INTEREST" comment="PODS.LINE_INTEREST">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, LINE_ID ПЕРЕЙТИ_К_ТРУБОПРОВОДУ, (select description from
                    PODS.COMPANY_GCL where COMPANY_GCL=code) КОМПАНИЯ_СОБСТВЕННИК, (select description from
                    PODS.LINE_INTEREST_TYPE_CL where TYPE_CL=code) ПРАВОВОЙ_СТАТУС_КОМПАНИИ, PERCENT_INTEREST
                    ДОЛЯ_КОМП_В_СОБСТВЕННОСТИ,ID, LINE_ID, COMPANY_GCL, TYPE_CL, PERCENT_INTEREST FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((LINE_ID)::text , 'НЕИЗВЕСТНО') LINE_ID,
                    coalesce((COMPANY_GCL)::text , 'НЕИЗВЕСТНО') COMPANY_GCL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((PERCENT_INTEREST)::text , 'НЕИЗВЕСТНО') PERCENT_INTEREST FROM (SELECT
                    LINE_ID||';'||COMPANY_GCL ID, t.* FROM PODS.LINE_INTEREST t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MONUMENT" schema="PODS" id="PODS_MONUMENT" comment="PODS.MONUMENT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, MONUMENT_ID ИДЕНТИФИКАТОР_РЕПЕРА, COORDINATE_ID
                    ПЕРЕЙТИ_К_КООРДИНАТАМ_ТОЧКИ, REF_EVENT_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from
                    PODS.MONUMENT_TYPE_CL where TYPE_CL=code) ТИП_РЕПЕРА, DESCRIPTION ОПИСАНИЕ, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, MONUMENT_ID,
                    MONUMENT_GUID, COORDINATE_ID, COORDINATE_GUID, REF_EVENT_ID, REF_EVENT_GUID, TYPE_CL, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((MONUMENT_ID)::text , 'НЕИЗВЕСТНО') MONUMENT_ID, coalesce((MONUMENT_GUID)::text ,
                    'НЕИЗВЕСТНО') MONUMENT_GUID, coalesce((COORDINATE_ID)::text , 'НЕИЗВЕСТНО') COORDINATE_ID,
                    coalesce((COORDINATE_GUID)::text , 'НЕИЗВЕСТНО') COORDINATE_GUID, coalesce((REF_EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') REF_EVENT_ID, coalesce((REF_EVENT_GUID)::text , 'НЕИЗВЕСТНО') REF_EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments" FROM (SELECT MONUMENT_ID ID, t.* FROM PODS.MONUMENT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="UNIT" schema="PODS" id="PODS_UNIT" comment="PODS.UNIT">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.COMPRESSOR_TYPE_CL where
                    COMPRESSOR_TYPE_CL=code) ТИП_КОМПРЕССОРА, (select description from PODS.DRIVE_TYPE_CL where
                    DRIVE_TYPE_CL=code) ТИП_ПРИВОДА, NAME НАИМЕНОВАНИЕ, DESCRIPTION ОПИСАНИЕ, INTEGRAL_LF
                    ИНТЕГРАЛЬНЫЙ_ГПА, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,
                    COMMENTS КОММЕНТАРИИ, UNIT_ID ИДЕНТИФ_ГАЗОПЕРЕКАЧ_АГРЕГАТА, ID, COMPRESSOR_TYPE_CL, DRIVE_TYPE_CL,
                    NAME, DESCRIPTION, INTEGRAL_LF, SOURCE_GCL, COMMENTS, UNIT_ID, UNIT_GUID, COMPRESSOR_STATION_ID,
                    COMPRESSOR_STATION_GUID FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((COMPRESSOR_TYPE_CL)::text , 'НЕИЗВЕСТНО') COMPRESSOR_TYPE_CL,
                    coalesce((DRIVE_TYPE_CL)::text , 'НЕИЗВЕСТНО') DRIVE_TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО')
                    "name", coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((INTEGRAL_LF)::text ,
                    'НЕИЗВЕСТНО') INTEGRAL_LF, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((UNIT_ID)::text , 'НЕИЗВЕСТНО')
                    UNIT_ID, coalesce((UNIT_GUID)::text , 'НЕИЗВЕСТНО') UNIT_GUID,
                    coalesce((COMPRESSOR_STATION_ID)::text , 'НЕИЗВЕСТНО') COMPRESSOR_STATION_ID,
                    coalesce((COMPRESSOR_STATION_GUID)::text , 'НЕИЗВЕСТНО') COMPRESSOR_STATION_GUID FROM (SELECT
                    UNIT_ID ID, t.* FROM PODS.UNIT t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="WORK_ORDER" schema="PODS" id="PODS_WORK_ORDER" comment="PODS.WORK_ORDER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, WORK_ORDER_ID ИДЕНТИФ_НАРЯД_ЗАКАЗА, WORK_ORDER_NUMBER
                    НОМЕР_НАРЯДА_ЗАКАЗА, (select description from PODS.COMPANY_GCL where COMPANY_GCL=code)
                    КОМПАНИЯ_ЗАКАЗЧИК, (select description from PODS.WORK_ORDER_TYPE_CL where TYPE_CL=code)
                    ТИП_НАРЯД_ЗАКАЗА, DESCRIPTION ОПИСАНИЕ, AFE УТВЕРЖДЁННЫЕ_ЗАТРАТЫ, STARTING_DATE
                    ДАТА_НАЧАЛА_РАБОТ_ФАКТ, ENDING_DATE ДАТА_ОКОНЧ_РАБОТ_ФАКТ, ORDERED_DATE ТРЕБУЕМАЯ_ДАТА_ОКОНЧ_РАБОТ,
                    PLANNED_START_DATE ДАТА_НАЧАЛА_РАБОТ_ПЛАНОВАЯ, PLANNED_END_DATE ДАТА_ОКОНЧАНИЯ_РАБОТ_ПЛАНОВАЯ,
                    (select description from PODS.COMPANY_GCL where VENDOR_COMPANY_GCL=code)
                    КОМПАНИЯ_ПРОИЗВОДИТЕЛЬ_РАБОТ, VENDOR_WORK_NUMBER НОМ_НАРЯД_ЗАКАЗ_У_ПР_РАБОТ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, WORK_ORDER_ID,
                    WORK_ORDER_GUID, WORK_ORDER_NUMBER, COMPANY_GCL, TYPE_CL, DESCRIPTION, AFE, STARTING_DATE,
                    ENDING_DATE, ORDERED_DATE, PLANNED_START_DATE, PLANNED_END_DATE, VENDOR_COMPANY_GCL,
                    VENDOR_WORK_NUMBER, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((WORK_ORDER_ID)::text , 'НЕИЗВЕСТНО') WORK_ORDER_ID, coalesce((WORK_ORDER_GUID)::text ,
                    'НЕИЗВЕСТНО') WORK_ORDER_GUID, coalesce((WORK_ORDER_NUMBER)::text , 'НЕИЗВЕСТНО') WORK_ORDER_NUMBER,
                    coalesce((COMPANY_GCL)::text , 'НЕИЗВЕСТНО') COMPANY_GCL, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((AFE)::text ,
                    'НЕИЗВЕСТНО') AFE, coalesce((STARTING_DATE)::text , 'НЕИЗВЕСТНО') STARTING_DATE,
                    coalesce((ENDING_DATE)::text , 'НЕИЗВЕСТНО') ENDING_DATE, coalesce((ORDERED_DATE)::text ,
                    'НЕИЗВЕСТНО') ORDERED_DATE, coalesce((PLANNED_START_DATE)::text , 'НЕИЗВЕСТНО') PLANNED_START_DATE,
                    coalesce((PLANNED_END_DATE)::text , 'НЕИЗВЕСТНО') PLANNED_END_DATE,
                    coalesce((VENDOR_COMPANY_GCL)::text , 'НЕИЗВЕСТНО') VENDOR_COMPANY_GCL,
                    coalesce((VENDOR_WORK_NUMBER)::text , 'НЕИЗВЕСТНО') VENDOR_WORK_NUMBER, coalesce((SOURCE_GCL)::text
                    , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    WORK_ORDER_ID ID, t.* FROM PODS.WORK_ORDER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="ROUTE" schema="PODS" id="PODS_ROUTE" comment="PODS.ROUTE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT coalesce ( (ID)::text, 'НЕИЗВЕСТНО') ID, coalesce ( (ROUTE_ID)::text, 'НЕИЗВЕСТНО')
                    ROUTE_ID, coalesce ( (ROUTE_GUID), 'НЕИЗВЕСТНО') ROUTE_GUID, coalesce ( (LINE_ID)::text,
                    'НЕИЗВЕСТНО') LINE_ID, coalesce ( (LINE_GUID), 'НЕИЗВЕСТНО') LINE_GUID, coalesce ( (EVENT_ID)::text,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce ( (EVENT_GUID), 'НЕИЗВЕСТНО') EVENT_GUID, coalesce ( (DESCRIPTION),
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce ( (DESCRIPTION), 'НЕИЗВЕСТНО') ROUTE_DESCRIPTION, coalesce (
                    (SEQUENCE)::text, 'НЕИЗВЕСТНО') "sequence", coalesce ( (TYPE_CL), 'НЕИЗВЕСТНО') TYPE_CL, coalesce (
                    (OPERATING_STATUS_GCL)::text, 'НЕИЗВЕСТНО') OPERATING_STATUS_GCL, coalesce ( (CURRENT_INDICATOR_LF),
                    'НЕИЗВЕСТНО') CURRENT_INDICATOR_LF, coalesce ( (PREVIOUS_ROUTE_ID)::text, 'НЕИЗВЕСТНО')
                    PREVIOUS_ROUTE_ID, coalesce ( (PREVIOUS_ROUTE_GUID), 'НЕИЗВЕСТНО') PREVIOUS_ROUTE_GUID, coalesce (
                    (EFFECTIVE_FROM_DATE)::text, 'НЕИЗВЕСТНО') EFFECTIVE_FROM_DATE, coalesce (
                    (EFFECTIVE_TO_DATE)::text, 'НЕИЗВЕСТНО') EFFECTIVE_TO_DATE, coalesce ( (ORIGINAL_ROUTE_ID)::text,
                    'НЕИЗВЕСТНО') ORIGINAL_ROUTE_ID, coalesce ( (ORIGINAL_ROUTE_GUID), 'НЕИЗВЕСТНО')
                    ORIGINAL_ROUTE_GUID, coalesce ( (PODS_USER), 'НЕИЗВЕСТНО') PODS_USER, coalesce (
                    (CREATE_DATE)::text, 'НЕИЗВЕСТНО') CREATE_DATE, coalesce ( (SERIES_ID)::text, 'НЕИЗВЕСТНО')
                    SERIES_ID, coalesce ( (SERIES_DESCRIPTION), 'НЕИЗВЕСТНО') SERIES_DESCRIPTION, coalesce (
                    (SERIES)::text, 'НЕИЗВЕСТНО') SERIES, coalesce ( (STATION_BEGIN)::text, 'НЕИЗВЕСТНО') STATION_BEGIN,
                    coalesce ( (STATION_END)::text, 'НЕИЗВЕСТНО') STATION_END, coalesce ( (STATION_BEGIN)::text,
                    'НЕИЗВЕСТНО') ROUTE_STATION_BEGIN, coalesce ( (STATION_END)::text, 'НЕИЗВЕСТНО') ROUTE_STATION_END,
                    coalesce ( (ASCENDING)::text, 'НЕИЗВЕСТНО') ASCENDING, coalesce ( (LENGTH)::text, 'НЕИЗВЕСТНО')
                    LENGTH, coalesce (COMPANY_GCL, 'НЕИЗВЕСТНО') COMPANY_GCL, coalesce (LINE_DESCRIPTION, 'НЕИЗВЕСТНО')
                    LINE_DESCRIPTION, coalesce ( (NOMINAL_DIAMETER_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_DIAMETER_GCL,
                    coalesce ( (NOMINAL_WALL_THICKNESS_GCL)::text, 'НЕИЗВЕСТНО') NOMINAL_WALL_THICKNESS_GCL, coalesce (
                    (X_COORD)::text, 'НЕИЗВЕСТНО') X_COORD, coalesce ( (Y_COORD)::text, 'НЕИЗВЕСТНО') Y_COORD, coalesce
                    ( (Z_COORD)::text, 'НЕИЗВЕСТНО') Z_COORD FROM (SELECT r.route_id ID, r.*, s.series_id, s.description
                    AS series_description, s.series, s.station_begin, s.station_end, s.ascending ,(SELECT
                    MIN(gtp.description) FROM pods.station_point sp JOIN pods.location l ON l.location_id =
                    sp.location_id JOIN pods.srv_district_gcl lpu ON l.srv_district_gcl = lpu.srv_district_id JOIN
                    pods.company_gcl gtp ON lpu.company_gcl = gtp.code WHERE sp.series_id = s.series_id) COMPANY_GCL
                    ,(SELECT ABS(MAX(sp.measure)-MIN(sp.measure)) FROM pods.station_point sp WHERE sp.series_id =
                    s.series_id) LENGTH ,ln.description LINE_DESCRIPTION ,(SELECT MAX(ps.nominal_diameter_gcl)
                    nominal_diameter_gcl FROM pods.pipe_segment PS JOIN pods.event_range erPS ON PS.event_id =
                    erPS.event_id JOIN pods.station_point spbps ON erps.station_id_Begin = spbps.station_id WHERE
                    erPS.feature_id = 'PIPE_SEGMENT' AND erPS.CURRENT_INDICATOR_LF = 'Y' AND spbps.series_id =
                    s.series_id ) NOMINAL_DIAMETER_GCL ,(SELECT MAX(ps.NOMINAL_WALL_THICKNESS_GCL)
                    NOMINAL_WALL_THICKNESS_GCL FROM pods.pipe_segment PS JOIN pods.event_range erPS ON PS.event_id =
                    erPS.event_id JOIN pods.station_point spbps ON erps.station_id_Begin = spbps.station_id WHERE
                    erPS.feature_id = 'PIPE_SEGMENT' AND erPS.CURRENT_INDICATOR_LF = 'Y' AND spbps.series_id =
                    s.series_id ) NOMINAL_WALL_THICKNESS_GCL ,(SELECT MIN(c.x_coord) FROM pods.station_point sp JOIN
                    pods.location l ON l.location_id = sp.location_id JOIN pods.coordinate c ON sp.location_id =
                    c.location_id WHERE sp.series_id = s.series_id AND sp.measure = (SELECT MIN(sp2.measure) FROM
                    pods.station_point sp2 WHERE sp2.route_id = sp.route_id)) X_COORD ,(SELECT MIN(c.y_coord) FROM
                    pods.station_point sp JOIN pods.location l ON l.location_id = sp.location_id JOIN pods.coordinate c
                    ON sp.location_id = c.location_id WHERE sp.series_id = s.series_id AND sp.measure = (SELECT
                    MIN(sp2.measure) FROM pods.station_point sp2 WHERE sp2.route_id = sp.route_id)) Y_COORD ,(SELECT
                    MIN(c.z_coord) FROM pods.station_point sp JOIN pods.location l ON l.location_id = sp.location_id
                    JOIN pods.coordinate c ON sp.location_id = c.location_id WHERE sp.series_id = s.series_id AND
                    sp.measure = (SELECT MIN(sp2.measure) FROM pods.station_point sp2 WHERE sp2.route_id = sp.route_id))
                    Z_COORD FROM pods.route r JOIN pods.series s ON s.route_id = r.route_id JOIN pods.line ln ON
                    r.line_id = ln.line_id WHERE r.route_id != 0) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="SITE" schema="PODS" id="PODS_SITE" comment="PODS.SITE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SITE_ID ИДЕНТИФ_ГРУППЫ_ДЕФЕКТОВ, (select description from
                    PODS.SITE_TYPE_CL where TYPE_CL=code) ТИП_ЗДАНИЯ_СООРУЖЕНИЯ, NAME НАИМЕНОВАНИЕ, OWNER ВЛАДЕЛЕЦ,
                    OPERATOR ОПЕРАТОР, CONTACT_ID КОНТАКТНОЕ_ЛИЦО, FRP_NUMBER РЕГИСТРАЦИОННЫЙ_НОМЕР, CITY АДРЕС, (select
                    description from PODS.STATE_PROVINCE_GCL where STATE_GCL =code) РЕГИОН_РАЙОН, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, SITE_ID, SITE_GUID, TYPE_CL, NAME, OWNER, OPERATOR, CONTACT_ID, CONTACT_GUID,
                    FRP_NUMBER, CITY, STATE_GCL, LOCATION_ID, LOCATION_GUID, SHAPE_ID, SHAPE_GUID, DESCRIPTION,
                    SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((SITE_ID)::text
                    , 'НЕИЗВЕСТНО') SITE_ID, coalesce((SITE_GUID)::text , 'НЕИЗВЕСТНО') SITE_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name",
                    coalesce((OWNER)::text , 'НЕИЗВЕСТНО') "owner", coalesce((OPERATOR)::text , 'НЕИЗВЕСТНО')
                    "operator", coalesce((CONTACT_ID)::text , 'НЕИЗВЕСТНО') CONTACT_ID, coalesce((CONTACT_GUID)::text ,
                    'НЕИЗВЕСТНО') CONTACT_GUID, coalesce((FRP_NUMBER)::text , 'НЕИЗВЕСТНО') FRP_NUMBER,
                    coalesce((CITY)::text , 'НЕИЗВЕСТНО') CITY, coalesce((STATE_GCL)::text , 'НЕИЗВЕСТНО') STATE_GCL,
                    coalesce((LOCATION_ID)::text , 'НЕИЗВЕСТНО') LOCATION_ID, coalesce((LOCATION_GUID)::text ,
                    'НЕИЗВЕСТНО') LOCATION_GUID, coalesce((SHAPE_ID)::text , 'НЕИЗВЕСТНО') SHAPE_ID,
                    coalesce((SHAPE_GUID)::text , 'НЕИЗВЕСТНО') SHAPE_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО')
                    DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text ,
                    'НЕИЗВЕСТНО') "comments" FROM (SELECT s.SITE_ID ID, s.* FROM PODS.SITE s) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="SRV_DISTRICT_GCL" schema="PODS" id="PODS_SRV_DISTRICT_GCL" comment="PODS.SRV_DISTRICT_GCL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, SRV_DISTRICT_ID ИДЕНТИФИКАТОР_ФИЛИАЛА, (select description from
                    PODS.COMPANY_GCL where COMPANY_GCL=code) КОМПАНИЯ_ОПЕРАТОР, DESCRIPTION ОПИСАНИЕ, (select
                    description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ, ID,
                    SRV_DISTRICT_ID, SRV_DISTRICT_GUID, COMPANY_GCL, DESCRIPTION, SOURCE_GCL, COMMENTS, GID FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((SRV_DISTRICT_ID)::text , 'НЕИЗВЕСТНО')
                    SRV_DISTRICT_ID, coalesce((SRV_DISTRICT_GUID)::text , 'НЕИЗВЕСТНО') SRV_DISTRICT_GUID,
                    coalesce((COMPANY_GCL)::text , 'НЕИЗВЕСТНО') COMPANY_GCL, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments", coalesce((GID)::text , 'НЕИЗВЕСТНО') GID FROM
                    (SELECT d.SRV_DISTRICT_ID ID, d.* FROM PODS.SRV_DISTRICT_GCL d) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_SYSTEM_CL" schema="PODS" id="PODS_PIPE_SYSTEM_CL" comment="PODS.PIPE_SYSTEM_CL">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, PIPE_SYSTEM_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ,
                    (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ, AXIS_GID ИДЕНТИФИКАТОР_ОСИ, BUFFER_GID ИДЕНТИФИКАТОР_БУФЕРА,ID, PIPE_SYSTEM_ID,
                    PIPE_SYSTEM_GUID, DESCRIPTION, SOURCE_GCL, COMMENTS, AXIS_GID, BUFFER_GID FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((PIPE_SYSTEM_ID)::text , 'НЕИЗВЕСТНО')
                    PIPE_SYSTEM_ID, coalesce((PIPE_SYSTEM_GUID)::text , 'НЕИЗВЕСТНО') PIPE_SYSTEM_GUID,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments",
                    coalesce((AXIS_GID)::text , 'НЕИЗВЕСТНО') AXIS_GID, coalesce((BUFFER_GID)::text , 'НЕИЗВЕСТНО')
                    BUFFER_GID FROM (SELECT d.PIPE_SYSTEM_ID ID, d.* FROM PODS.PIPE_SYSTEM_CL d) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_ILI_DATA" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <param name="SYS_OBJ_ID" type="Int64" direction="Input">
                </param>
                <query>SELECT * FROM (SELECT def.ili_data_id ID
                    ,coalesce(def.MILEPOST::text , 'НЕИЗВЕСТНО') MILEPOST
                    ,coalesce(def.orientation_deg,0) ORIENTATION_DEG /*ОРИЕНТАЦИЯ ДЕФЕКТА В ГРАДУСАХ */
                    ,coalesce(def.seam_orientation,0) seam_orientation /*ДОБАВИТЬ */
                    ,coalesce(def.nominal_wall_thickness,14) nominal_wall_thickness /*ТОЛЩИНА СТЕНКИ */
                    ,coalesce(def.weld_number::text , 'НЕИЗВЕСТНО') WELD_NUMBER /*НОМЕР ТРУБЫ */
                    ,coalesce(def.station,0) station /*КИЛОМЕТР */
                    ,coalesce(def.calibrated_measure,0) calibrated_measure /*ЛИНЕЙНАЯ ДИСТАЦИЯ ГЕОДЕЗИЧЕСКАЯ */
                    ,def.ili_data_id ILI_DATA_ID /*ИДЕНТИФИКАТОР ДЕФЕКТА*/
                    ,coalesce(def.length,0) LENGTH /*ДЛИНА ДЕФЕКТА*/
                    ,coalesce(def.average_depth,0) AVERAGE_DEPTH /*СРЕДНЯЯ ГЛУБИНА ПОРАЖЕНИЯ*/
                    ,coalesce(def.width,0) WIDTH /*ШИРИНА*/
                    ,coalesce(def.measured_wall_thickness,0) measured_wall_thickness /*ИЗМЕРЕННАЯ ТОЛЩИНА СТЕНКИ ТРУБЫ*/
                    ,coalesce(def.absolute_odometer,0) ABSOLUTE_ODOMETER /*ЛИНЕЙНАЯ ДИСТАЦИЯ ГЕОДЕЗИЧЕСКАЯ*/
                    ,coalesce((def.INTERNAL_EXTERNAL_CL)::text , 'НЕИЗВЕСТНО') INTERNAL_EXTERNAL_CL
                    ,coalesce((def.DATE_COLLECTED)::text , 'НЕИЗВЕСТНО') DATE_COLLECTED
                    ,coalesce(def.CERTAINTY_INTERVAL,0) CERTAINTY_INTERVAL
                    ,coalesce(def.anomaly_type_cl,0) ANOMALY_TYPE_CL /*ПРИКРУТИТЬ СПРАВОЧНИК */
                    ,coalesce(def.ANOMALY_EXTENSION_CL::text , 'НЕИЗВЕСТНО') ANOMALY_EXTENSION_CL
                    ,coalesce((def.us_weld_number)::text , 'НЕИЗВЕСТНО') US_WELD_NUMBER /*НОМЕР ПРЕДЫДУЩЕЙ СЕКЦИИ
                    ТРУБЫ*/
                    ,coalesce(def.US_WELD_ODOMETER,0) US_WELD_ODOMETER
                    ,coalesce(def.DS_WELD_ODOMETER,0) DS_WELD_ODOMETER
                    ,coalesce(def.US_WELD_DISTANCE,0) US_WELD_DISTANCE
                    ,coalesce(def.DS_WELD_DISTANCE,0) DS_WELD_DISTANCE
                    ,coalesce(def.US_AGM_DISTANCE,0) US_AGM_DISTANCE
                    ,coalesce(def.DS_AGM_DISTANCE,0) DS_AGM_DISTANCE
                    ,coalesce(def.DEPTH_ACCURACY,0) DEPTH_ACCURACY
                    ,coalesce(def.LENGTH_ACCURACY,0) LENGTH_ACCURACY
                    ,coalesce(def.WIDTH_ACCURACY,0) WIDTH_ACCURACY
                    ,coalesce(def.STATION_REPORTED,0) STATION_REPORTED
                    ,coalesce((def.WITHIN_SPECIFICATION_LF)::text , 'НЕИЗВЕСТНО') WITHIN_SPECIFICATION_LF
                    ,coalesce((def.CONTROL_POINT_LF)::text , 'НЕИЗВЕСТНО') CONTROL_POINT_LF
                    ,coalesce(def.COMMENTS::text , 'НЕИЗВЕСТНО') "comments"
                    ,coalesce(def.ILI_CLUSTER_ID,0) ILI_CLUSTER_ID
                    ,coalesce(def.REF_EVENT_ID,0) REF_EVENT_ID
                    ,coalesce(def.ILI_INSPECTION_ID,0) ILI_INSPECTION_ID
                    ,coalesce((def.SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL
                    ,coalesce((def.RAW_REFERENCE_KEY)::text , 'НЕИЗВЕСТНО') RAW_REFERENCE_KEY
                    ,coalesce(def.COORDINATE_ID,0) COORDINATE_ID
                    ,coalesce(def.EVENT_ID,0) EVENT_ID
                    ,coalesce(def.feature_description::text , 'НЕИЗВЕСТНО') FEATURE_DESCRIPTION /* ОПИСАНИЕ ДЕФЕКТА */
                    ,coalesce(def_description::text , 'НЕИЗВЕСТНО') TYPE_DESCRIPTION /*ТИП ДЕФЕКТА */
                    ,coalesce(def.ovality,0) ovality /*ОВАЛЬНОСТЬ */
                    ,coalesce(def.description,' ') DESCRIPTION /* ОПИСАНИЕ */
                    ,coalesce(def.description,' ') REMARK /* ОПИСАНИЕ */
                    ,coalesce(p1006,0) p1006 /*КОД ТИПА ДЕФЕКТА */
                    ,coalesce(report.route_type, '')|| ' '|| coalesce (report.line_name, '')|| ' '|| coalesce
                    (report.station_beg::text, '')|| ' - '|| coalesce (report.station_end::text, '')||' КМ ' line_name
                    ,coalesce((report.begin_date)::text , 'НЕИЗВЕСТНО') begin_date /*ДАТА ПРОВЕДЕНИЯ */
                    ,coalesce(report.company_name::text , 'НЕИЗВЕСТНО') company_name
                    ,coalesce(def.x_coord,-999) x_coord /*ДОЛГОТА */
                    ,coalesce(def.y_coord,-999) y_coord /*ШИРОТА */
                    ,coalesce(def.z_coord,-999) z_coord /*АБС. ВЫСОТА */
                    ,coalesce(def.depth_of_cover,-999) depth_of_cover /* ГЛУБИНА ЗАЛОЖЕНИЯ */
                    ,coalesce((SELECT MIN(ps.nominal_diameter_gcl)
                    FROM pods.station_point spe
                    JOIN pods.event_range eps
                    ON spe.station_id=eps.station_id_begin
                    AND eps.feature_id='PIPE_SEGMENT'
                    JOIN pods.pipe_segment ps
                    ON eps.event_id=ps.event_id
                    WHERE report.route_id=spe.route_id),0) nominal_diameter_gcl
                    ,coalesce(ABS(absolute_odometer - (SELECT DISTINCT FIRST_VALUE(ft.absolute_odometer) OVER (ORDER BY
                    ft.absolute_odometer DESC )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &lt; dd.absolute_odometer
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )),0)
                    marker_distance_left /*ДИСТАНЦИЯ ДО МАРКЕРА СЛЕВА */
                    ,coalesce((SELECT DISTINCT FIRST_VALUE(ft.feature_description) OVER (ORDER BY ft.absolute_odometer
                    DESC )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &lt; dd.absolute_odometer
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )::text
                    , 'НЕИЗВЕСТНО') marker_name_left /* ИМЯ МАРКЕРА СЛЕВА */
                    ,coalesce(ABS(absolute_odometer - (SELECT DISTINCT FIRST_VALUE(ft.absolute_odometer) OVER (ORDER BY
                    ft.absolute_odometer )
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &gt; dd.absolute_odometer
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )),0)
                    marker_distance_right /* ДИСТАНЦИЯ ДО МАРКЕРА СПРАВА */
                    ,coalesce((SELECT DISTINCT FIRST_VALUE(ft.feature_description) OVER (ORDER BY ft.absolute_odometer)
                    FROM pods.ili_data dd
                    JOIN pods.ili_data ft
                    ON ft.ili_inspection_id = dd.ili_inspection_id
                    AND ft.absolute_odometer &gt; dd.absolute_odometer
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND ft.anomaly_type_cl IN (SELECT code FROM pods.ILI_ANOMALY_TYPE_CL WHERE category_cl = 2) )::text
                    , 'НЕИЗВЕСТНО') marker_name_right /*ИМЯ МАРКЕРА СПРАВА*/
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_data dd
                    JOIN pods.ili_pipe_length pl
                    ON pl.ili_inspection_id = dd.ili_inspection_id
                    AND pl.weld_number = dd.weld_number
                    WHERE dd.ili_data_id = :SYS_OBJ_ID),0) defect_pipe_length /*ДЛИНА ДЕФЕКТНОЙ ТРУБЫ */
                    /*ДЛИНА 1ОЙ ДЕФЕКТНОЙ ТРУБЫ СЛЕВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x0
                    WHERE row_number = 1) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_left_1
                    /*ДЛИНА 2ОЙ ДЕФЕКТНОЙ ТРУБЫ СЛЕВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x00
                    WHERE row_number = 2) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_left_2
                    /* ДЛИНА 3ОЙ ДЕФЕКТНОЙ ТРУБЫ СЛЕВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x01
                    WHERE row_number = 3) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_left_3
                    /*ДЛИНА 4ОЙ ДЕФЕКТНОЙ ТРУБЫ СЛЕВА*/
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x02
                    WHERE row_number = 4) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_left_4
                    /*ДЛИНА 5ОЙ ДЕФЕКТНОЙ ТРУБЫ СЛЕВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer DESC) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &gt; w.absolute_odometer) x03
                    WHERE row_number = 5) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_left_5
                    /*ДЛИНА 1ОЙ ДЕФЕКТНОЙ ТРУБЫ СПРАВА*/
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer ) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x04
                    WHERE row_number = 1) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_right_5
                    /*ДЛИНА 2ОЙ ДЕФЕКТНОЙ ТРУБЫ СПРАВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer ) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x05
                    WHERE row_number = 2) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_right_4
                    /*ДЛИНА 3ОЙ ДЕФЕКТНОЙ ТРУБЫ СПРАВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer ) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x06
                    WHERE row_number = 3) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_right_3
                    /*ДЛИНА 4ОЙ ДЕФЕКТНОЙ ТРУБЫ СПРАВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer ) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x07
                    WHERE row_number = 4) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_right_2
                    /*ДЛИНА 5ОЙ ДЕФЕКТНОЙ ТРУБЫ СПРАВА */
                    ,coalesce((SELECT MIN(ABS(pl.end_odometer-pl.start_odometer))
                    FROM pods.ili_pipe_length pl
                    WHERE pl.weld_number = (SELECT weld_number
                    FROM (SELECT ROW_NUMBER() OVER (ORDER BY w.absolute_odometer ) row_number
                    ,w.weld_number
                    FROM pods.ili_data this_weld
                    JOIN pods.ili_data w
                    ON this_weld.ili_inspection_id = w.ili_inspection_id
                    JOIN pods.ili_data dd
                    ON this_weld.weld_number = dd.weld_number
                    AND this_weld.ili_inspection_id = dd.ili_inspection_id
                    WHERE dd.ili_data_id = :SYS_OBJ_ID
                    AND this_weld.anomaly_type_cl = 5001
                    AND w.anomaly_type_cl = 5001
                    AND this_weld.absolute_odometer &lt; w.absolute_odometer) x08
                    WHERE row_number = 5) and pl.ili_inspection_id = def.ili_inspection_id ),0)
                    defect_pipe_length_right_1
                    ,ANOMALY_GROUP
                    ,ANOMALY_OKD_KRN
                    ,coalesce((RPR_CALCULATED)::text , 'НЕИЗВЕСТНО') RPR_CALCULATED
                    ,coalesce((BPR_CALCULATED)::text , 'НЕИЗВЕСТНО') BPR_CALCULATED
                    ,coalesce((BPR_VARIANCE)::text , 'НЕИЗВЕСТНО') BPR_VARIANCE
                    ,coalesce((RPR_VARIANCE)::text , 'НЕИЗВЕСТНО') RPR_VARIANCE
                    FROM (SELECT d.*
                    ,sp.station_id
                    ,sp.measure
                    ,sp.station
                    ,ia.description anomaly_type
                    ,ia.description def_description
                    ,ia.code p1006
                    ,c.x_coord
                    ,c.y_coord
                    ,c.z_coord
                    ,l.depth_of_cover
                    ,CASE
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_003' THEN '1'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_004' AND IA.CODE = 121 THEN '1'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_001' THEN '2'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_002' AND IA.CODE !=144 THEN '4'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_005' THEN '2'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_007' THEN '2'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_009' THEN '2'
                    WHEN D.ANOMALY_EXTENSION_CL = 'ANOMALY_EXT_006' THEN '3'
                    WHEN IA.CODE !=144 THEN '4'
                    ELSE '5'
                    END ANOMALY_GROUP
                    ,CASE D.ANOMALY_EXTENSION_CL
                    WHEN 'ANOMALY_EXT_001' THEN '1'
                    WHEN 'ANOMALY_EXT_005' THEN '2'
                    ELSE 'НЕИЗВЕСТНО'
                    END ANOMALY_OKD_KRN
                    FROM pods.ili_data d
                    JOIN pods.ili_anomaly_type_cl ia
                    ON d.anomaly_type_cl = ia.code
                    AND ia.category_cl = 1
                    LEFT JOIN pods.event_range e
                    ON d.event_id = e.event_id
                    LEFT JOIN pods.station_point sp
                    ON e.station_id_begin = sp.station_id
                    LEFT JOIN pods.coordinate c
                    ON c.coordinate_id = d.coordinate_id
                    LEFT JOIN pods.location l
                    ON c.location_id=l.location_id
                    WHERE ili_data_id = :SYS_OBJ_ID) def
                    JOIN (SELECT i.*
                    ,r.event_id event_id
                    ,s.route_id
                    ,s.station_begin station_beg
                    ,s.station_end station_end
                    ,c.description company_name
                    ,CASE WHEN l.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rtc.description
                    END route_type,
                    CASE
                    WHEN l.line_id = 0
                    THEN r.description
                    ELSE l.description
                    END line_name
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range r
                    ON r.ili_inspection_id = i.ili_inspection_id
                    JOIN pods.event_range e
                    ON e.event_id = r.event_id
                    JOIN pods.station_point sp
                    ON sp.station_id = e.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route rt
                    ON sp.route_id = rt.route_id
                    JOIN pods.line l
                    ON sp.line_id = l.line_id
                    JOIN pods.route_type_cl rtc
                    ON rt.type_cl = rtc.code
                    JOIN pods.ili_tool_vendor_cl c
                    ON c.code = i.tool_vendor_cl) report
                    ON def.ili_inspection_id = report.ili_inspection_id) d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

    <data table="ILI_INSPECTION_RANGE" schema="PODS" id="PODS_ILI_INSPECTION_RANGE" comment="PODS.ILI_INSPECTION_RANGE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, ILI_INSPECTION_RANGE_ID ИДЕНТИФ_ПРОХОДА_СНАРЯДА, WORK_ORDER_ID
                    ПЕРЕЙТИ_К_НАРЯД_ЗАКАЗУ, START_ODOMETER НАЧАЛЬНОЕ_ПОКАЗАНИЕ_ОДОМЕТРА, END_ODOMETER
                    КОНЕЧНОЕ_ПОКАЗАНИЕ_ОДОМЕТРА, ASCENDING ВОЗРАСТАНИЕ_ОДОМЕТРА_ПО_КМ, SEQUENCE
                    ПОРЯДК_НОМ_ПР_СНАР_В_ОБСЛ, ILI_INSPECTION_ID ПЕРЕЙТИ_К_ОБСЛЕДОВАНИЮ, LAUNCHER_EVENT_ID
                    КАМЕРА_ЗАПУСКА, RECEIVER_EVENT_ID КАМЕРА_ПРИЁМА, WELD_START_NUMBER НАЧАЛЬНЫЙ_НОМЕР_ШВА,
                    WELD_INCREMENT ИНКРЕМЕНТ_НОМЕРА_ШВА, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, ILI_INSPECTION_RANGE_ID,
                    ILI_INSPECTION_RANGE_GUID, EVENT_ID, EVENT_GUID, WORK_ORDER_ID, WORK_ORDER_GUID, START_ODOMETER,
                    END_ODOMETER, ASCENDING, SEQUENCE, ILI_INSPECTION_ID, ILI_INSPECTION_GUID, LAUNCHER_EVENT_ID,
                    LAUNCHER_EVENT_GUID, RECEIVER_EVENT_ID, RECEIVER_EVENT_GUID, WELD_START_NUMBER, WELD_INCREMENT,
                    DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID,
                    coalesce((ILI_INSPECTION_RANGE_ID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_RANGE_ID,
                    coalesce((ILI_INSPECTION_RANGE_GUID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_RANGE_GUID,
                    coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО')
                    EVENT_GUID, coalesce((WORK_ORDER_ID)::text , 'НЕИЗВЕСТНО') WORK_ORDER_ID,
                    coalesce((WORK_ORDER_GUID)::text , 'НЕИЗВЕСТНО') WORK_ORDER_GUID, coalesce((START_ODOMETER)::text ,
                    'НЕИЗВЕСТНО') START_ODOMETER, coalesce((END_ODOMETER)::text , 'НЕИЗВЕСТНО') END_ODOMETER,
                    coalesce((ASCENDING)::text , 'НЕИЗВЕСТНО') ASCENDING, coalesce((SEQUENCE)::text , 'НЕИЗВЕСТНО')
                    "sequence", coalesce((ILI_INSPECTION_ID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_ID,
                    coalesce((ILI_INSPECTION_GUID)::text , 'НЕИЗВЕСТНО') ILI_INSPECTION_GUID,
                    coalesce((LAUNCHER_EVENT_ID)::text , 'НЕИЗВЕСТНО') LAUNCHER_EVENT_ID,
                    coalesce((LAUNCHER_EVENT_GUID)::text , 'НЕИЗВЕСТНО') LAUNCHER_EVENT_GUID,
                    coalesce((RECEIVER_EVENT_ID)::text , 'НЕИЗВЕСТНО') RECEIVER_EVENT_ID,
                    coalesce((RECEIVER_EVENT_GUID)::text , 'НЕИЗВЕСТНО') RECEIVER_EVENT_GUID,
                    coalesce((WELD_START_NUMBER)::text , 'НЕИЗВЕСТНО') WELD_START_NUMBER,
                    coalesce((WELD_INCREMENT)::text , 'НЕИЗВЕСТНО') WELD_INCREMENT, coalesce((DESCRIPTION)::text ,
                    'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL,
                    coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.ILI_INSPECTION_RANGE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="PIPE_SYSTEM_BOUNDARY" schema="PODS" id="PODS_PIPE_SYSTEM_BOUNDARY" comment="PODS.PIPE_SYSTEM_BOUNDARY">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, PIPE_SYSTEM_ID КОРИДОР, LINE_ID ТРУБОПРОВОД, KM_BEGIN
                    ПИКЕТАЖ_КМ_НАЧАЛЬНЫЙ, KM_END ПИКЕТАЖ_КМ_КОНЕЧНЫЙ, TITLE_EVENT_INDICATOR_LF ТИТУЛЬНЫЙ, DESCRIPTION
                    ОПИСАНИЕ, (select description from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS
                    КОММЕНТАРИИ,ID, PIPE_SYSTEM_ID, PIPE_SYSTEM_GUID, LINE_ID, KM_BEGIN, KM_END, EVENT_ID, EVENT_GUID,
                    TITLE_EVENT_INDICATOR_LF, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((PIPE_SYSTEM_ID)::text , 'НЕИЗВЕСТНО') PIPE_SYSTEM_ID,
                    coalesce((PIPE_SYSTEM_GUID)::text , 'НЕИЗВЕСТНО') PIPE_SYSTEM_GUID, coalesce((LINE_ID)::text ,
                    'НЕИЗВЕСТНО') LINE_ID, coalesce((KM_BEGIN)::text , 'НЕИЗВЕСТНО') KM_BEGIN, coalesce((KM_END)::text ,
                    'НЕИЗВЕСТНО') KM_END, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TITLE_EVENT_INDICATOR_LF)::text ,
                    'НЕИЗВЕСТНО') TITLE_EVENT_INDICATOR_LF, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT PIPE_SYSTEM_ID||';'||LINE_ID||';'||KM_BEGIN||';'||KM_END ID, t.* FROM
                    PODS.PIPE_SYSTEM_BOUNDARY t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE_CP_BLOCK" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STRUCTURE_TYPE_CL where
                    TYPE_CL=code) ТИП_ГРАЖДАНСКОГО_СООРУЖЕНИЯ, NAME НАИМЕНОВАНИЕ, OCCUPANT_COUNT КОЛ_ЛЮДЕЙ, (select
                    description from PODS.OCCUPANCY_CATEGORY_GCL where OCCUPANCY_CATEGORY_GCL=code)
                    КАТЕГОР_ОБЪЕКТА_ПО_ВМЕСТИМОСТИ, DETERMINATION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DETERMINATION_METHOD_GCL
                    СПОСОБ_ОБСЛЕДОВАНИЯ, SITE_ADDRESS_ID АДРЕС, CONTACT_ID КОНТАКТНОЕ_ЛИЦО, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,ID, OFFLINE_ID, OFFLINE_GUID, TYPE_CL, NAME,
                    OCCUPANT_COUNT, OCCUPANCY_CATEGORY_GCL, DETERMINATION_DATE, DETERMINATION_METHOD_GCL,
                    SITE_ADDRESS_ID, SITE_ADDRESS_GUID, CONTACT_ID, CONTACT_GUID, SOURCE_GCL FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID,
                    coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((OCCUPANT_COUNT)::text ,
                    'НЕИЗВЕСТНО') OCCUPANT_COUNT, coalesce((OCCUPANCY_CATEGORY_GCL)::text , 'НЕИЗВЕСТНО')
                    OCCUPANCY_CATEGORY_GCL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((SITE_ADDRESS_ID)::text , 'НЕИЗВЕСТНО') SITE_ADDRESS_ID, coalesce((SITE_ADDRESS_GUID)::text
                    , 'НЕИЗВЕСТНО') SITE_ADDRESS_GUID, coalesce((CONTACT_ID)::text , 'НЕИЗВЕСТНО') CONTACT_ID,
                    coalesce((CONTACT_GUID)::text , 'НЕИЗВЕСТНО') CONTACT_GUID, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STRUCTURE" schema="PODS" id="PODS_STRUCTURE_CP_TRANS" comment="PODS.STRUCTURE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.STRUCTURE_TYPE_CL where
                    TYPE_CL=code) ТИП_ГРАЖДАНСКОГО_СООРУЖЕНИЯ, NAME НАИМЕНОВАНИЕ, OCCUPANT_COUNT КОЛ_ЛЮДЕЙ, (select
                    description from PODS.OCCUPANCY_CATEGORY_GCL where OCCUPANCY_CATEGORY_GCL=code)
                    КАТЕГОР_ОБЪЕКТА_ПО_ВМЕСТИМОСТИ, DETERMINATION_DATE ДАТА_ОБСЛЕДОВАНИЯ, DETERMINATION_METHOD_GCL
                    СПОСОБ_ОБСЛЕДОВАНИЯ, SITE_ADDRESS_ID АДРЕС, CONTACT_ID КОНТАКТНОЕ_ЛИЦО, (select description from
                    PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ,ID, OFFLINE_ID, OFFLINE_GUID, TYPE_CL, NAME,
                    OCCUPANT_COUNT, OCCUPANCY_CATEGORY_GCL, DETERMINATION_DATE, DETERMINATION_METHOD_GCL,
                    SITE_ADDRESS_ID, SITE_ADDRESS_GUID, CONTACT_ID, CONTACT_GUID, SOURCE_GCL FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((OFFLINE_ID)::text , 'НЕИЗВЕСТНО') OFFLINE_ID,
                    coalesce((OFFLINE_GUID)::text , 'НЕИЗВЕСТНО') OFFLINE_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО')
                    TYPE_CL, coalesce((NAME)::text , 'НЕИЗВЕСТНО') "name", coalesce((OCCUPANT_COUNT)::text ,
                    'НЕИЗВЕСТНО') OCCUPANT_COUNT, coalesce((OCCUPANCY_CATEGORY_GCL)::text , 'НЕИЗВЕСТНО')
                    OCCUPANCY_CATEGORY_GCL, coalesce((DETERMINATION_DATE)::text , 'НЕИЗВЕСТНО') DETERMINATION_DATE,
                    coalesce((DETERMINATION_METHOD_GCL)::text , 'НЕИЗВЕСТНО') DETERMINATION_METHOD_GCL,
                    coalesce((SITE_ADDRESS_ID)::text , 'НЕИЗВЕСТНО') SITE_ADDRESS_ID, coalesce((SITE_ADDRESS_GUID)::text
                    , 'НЕИЗВЕСТНО') SITE_ADDRESS_GUID, coalesce((CONTACT_ID)::text , 'НЕИЗВЕСТНО') CONTACT_ID,
                    coalesce((CONTACT_GUID)::text , 'НЕИЗВЕСТНО') CONTACT_GUID, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL FROM (SELECT OFFLINE_ID ID, t.* FROM PODS.STRUCTURE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE_LINK" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SHEET_NOTE_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБЪЕКТА, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, (select description from
                    PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ОПРЕДЕЛЕНИЯ_РАССТОЯНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_ОБЪЕКТА, INTERSECTION_ANGLE
                    УГОЛ_ПЕРЕСЕЧЕНИЯ, WIDTH ШИРИНА_М, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, INTERSECTION_ANGLE, WIDTH, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО')
                    SOURCE_NUMBER, coalesce((SCALED_GCL)::text , 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL, coalesce((INTERSECTION_ANGLE)::text ,
                    'НЕИЗВЕСТНО') INTERSECTION_ANGLE, coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SHEET_NOTE t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="FOREIGN_LINE_CROSSING" schema="PODS" id="PODS_FOREIGN_LINE_CROSSING_LINK"
          comment="PODS.FOREIGN_LINE_CROSSING">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.FOREIGN_LINE_CROSSING_TYPE_CL
                    where TYPE_CL=code) ТИП_ПЕРЕСЕЧЕНИЯ, (select description from PODS.OUTSIDE_COMPANY_CL where
                    OWNER_CL=code) КОМПАНИЯ_СОБСТВЕННИК, LINE_CLEARANCE ПРОСВЕТ_ДО_ПЕРЕС_КАБ_ТРУБ_ММ, (select
                    description from PODS.CROSSING_MATERIAL_CL where MATERIAL_CL=code) МАТЕР_ПЕРЕСЕК_КАБЕЛЯ_ТРУБ,
                    FOREIGN_DIAMETER ДИАМЕТР_ПЕРЕСЕК_КАБ_ТРУБ_ММ, CROSSING_DATE ДАТА_ОБУСТРОЙСТВА_ПЕРЕСЕЧЕНИЯ,
                    INTERSECTION_ANGLE УГОЛ_ПЕРЕСЕЧЕНИЯ_ГРАД, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, (select description
                    from PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ИЗМЕР_ДЛИНЫ_ПЕРЕСЕЧЕНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_КОММУНИКАЦИИ, WIDTH ШИРИНА_М,
                    GEOGRAPHIC_ENTITY_ID ИДЕНТИФИКАТОР_ОБЪЕКТА, DESCRIPTION ОПИСАНИЕ, LINE_BELOW_GROUND_LF
                    ТРУБОПРОВОД_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_GROUND_LF КОММУНИКАЦИЯ_ПОД_ЗЕМЛЁЙ, CROSSING_BELOW_LINE_LF
                    КОММУНИКАЦИЯ_ПОД_ТРУБОПРОВОДОМ, FOREIGN_BOND_LF КОММУН_СВЯЗ_С_ТРУБОПРОВОДОМ, (select description
                    from PODS.source_gcl where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID,
                    EVENT_GUID, TYPE_CL, OWNER_CL, LINE_CLEARANCE, MATERIAL_CL, FOREIGN_DIAMETER, CROSSING_DATE,
                    INTERSECTION_ANGLE, SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, WIDTH, GEOGRAPHIC_ENTITY_ID,
                    GEOGRAPHIC_ENTITY_GUID, DESCRIPTION, LINE_BELOW_GROUND_LF, CROSSING_BELOW_GROUND_LF,
                    CROSSING_BELOW_LINE_LF, FOREIGN_BOND_LF, SOURCE_GCL, "comments" FROM(SELECT coalesce((ID)::text ,
                    'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text ,
                    'НЕИЗВЕСТНО') EVENT_GUID, coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL,
                    coalesce((OWNER_CL)::text , 'НЕИЗВЕСТНО') OWNER_CL, coalesce((LINE_CLEARANCE)::text , 'НЕИЗВЕСТНО')
                    LINE_CLEARANCE, coalesce((MATERIAL_CL)::text , 'НЕИЗВЕСТНО') MATERIAL_CL,
                    coalesce((FOREIGN_DIAMETER)::text , 'НЕИЗВЕСТНО') FOREIGN_DIAMETER, coalesce((CROSSING_DATE)::text ,
                    'НЕИЗВЕСТНО') CROSSING_DATE, coalesce((INTERSECTION_ANGLE)::text , 'НЕИЗВЕСТНО') INTERSECTION_ANGLE,
                    coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО') SOURCE_NUMBER, coalesce((SCALED_GCL)::text ,
                    'НЕИЗВЕСТНО') SCALED_GCL, coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL,
                    coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH, coalesce((GEOGRAPHIC_ENTITY_ID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_ID, coalesce((GEOGRAPHIC_ENTITY_GUID)::text , 'НЕИЗВЕСТНО')
                    GEOGRAPHIC_ENTITY_GUID, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((LINE_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') LINE_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_GROUND_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_GROUND_LF,
                    coalesce((CROSSING_BELOW_LINE_LF)::text , 'НЕИЗВЕСТНО') CROSSING_BELOW_LINE_LF,
                    coalesce((FOREIGN_BOND_LF)::text , 'НЕИЗВЕСТНО') FOREIGN_BOND_LF, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT
                    t.EVENT_ID ID, t.* FROM PODS.FOREIGN_LINE_CROSSING t WHERE t.type_cl='FL_CROSS_TYPE_13') d WHERE
                    {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="SHEET_NOTE" schema="PODS" id="PODS_SHEET_NOTE_FUND" comment="PODS.SHEET_NOTE">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.SHEET_NOTE_TYPE_CL where
                    TYPE_CL=code) ТИП_ОБЪЕКТА, SOURCE_NUMBER НОМЕР_РАБОЧЕГО_ЖУРНАЛА, (select description from
                    PODS.SCALED_GCL where SCALED_GCL=code) СПОСОБ_ОПРЕДЕЛЕНИЯ_РАССТОЯНИЯ, (select description from
                    PODS.DIRECTION_GCL where DIRECTION_GCL=code) НАПРАВЛЕНИЕ_ОБЪЕКТА, INTERSECTION_ANGLE
                    УГОЛ_ПЕРЕСЕЧЕНИЯ, WIDTH ШИРИНА_М, DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl
                    where source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, TYPE_CL,
                    SOURCE_NUMBER, SCALED_GCL, DIRECTION_GCL, INTERSECTION_ANGLE, WIDTH, DESCRIPTION, SOURCE_GCL,
                    "comments" FROM(SELECT coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text ,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID,
                    coalesce((TYPE_CL)::text , 'НЕИЗВЕСТНО') TYPE_CL, coalesce((SOURCE_NUMBER)::text , 'НЕИЗВЕСТНО')
                    SOURCE_NUMBER, coalesce((SCALED_GCL)::text , 'НЕИЗВЕСТНО') SCALED_GCL,
                    coalesce((DIRECTION_GCL)::text , 'НЕИЗВЕСТНО') DIRECTION_GCL, coalesce((INTERSECTION_ANGLE)::text ,
                    'НЕИЗВЕСТНО') INTERSECTION_ANGLE, coalesce((WIDTH)::text , 'НЕИЗВЕСТНО') WIDTH,
                    coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION, coalesce((SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО') "comments" FROM (SELECT EVENT_ID
                    ID, t.* FROM PODS.SHEET_NOTE t) d ) d1 WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.MARKER_SIGN_TYPE_CL where
                    SIGN_TYPE_CL=code) ТИП_НАДПИСИ, (select description from PODS.MARKER_TYPE_GCL where
                    MARKER_TYPE_GCL=code) ТИП_МАРКЕРА, MARKER_NUMBER НОМЕР_МАРКЕРА, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, SIGN_TYPE_CL,
                    MARKER_TYPE_GCL, MARKER_NUMBER, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SIGN_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') SIGN_TYPE_CL, coalesce((MARKER_TYPE_GCL)::text , 'НЕИЗВЕСТНО') MARKER_TYPE_GCL,
                    coalesce((MARKER_NUMBER)::text , 'НЕИЗВЕСТНО') MARKER_NUMBER, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t) d ) d1 WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER_POINT" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.MARKER_SIGN_TYPE_CL where
                    SIGN_TYPE_CL=code) ТИП_НАДПИСИ, (select description from PODS.MARKER_TYPE_GCL where
                    MARKER_TYPE_GCL=code) ТИП_МАРКЕРА, MARKER_NUMBER НОМЕР_МАРКЕРА, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, SIGN_TYPE_CL,
                    MARKER_TYPE_GCL, MARKER_NUMBER, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SIGN_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') SIGN_TYPE_CL, coalesce((MARKER_TYPE_GCL)::text , 'НЕИЗВЕСТНО') MARKER_TYPE_GCL,
                    coalesce((MARKER_NUMBER)::text , 'НЕИЗВЕСТНО') MARKER_NUMBER, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="MARKER" schema="PODS" id="PODS_MARKER_KM" comment="PODS.MARKER">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (select description from PODS.MARKER_SIGN_TYPE_CL where
                    SIGN_TYPE_CL=code) ТИП_НАДПИСИ, (select description from PODS.MARKER_TYPE_GCL where
                    MARKER_TYPE_GCL=code) ТИП_МАРКЕРА, MARKER_NUMBER НОМЕР_МАРКЕРА, DATE_INSTALLED
                    ДАТА_УСТАНОВКИ_МОНТАЖА,DESCRIPTION ОПИСАНИЕ, (select description from PODS.source_gcl where
                    source_gcl=code) ИСТОЧНИК_ДАННЫХ, COMMENTS КОММЕНТАРИИ,ID, EVENT_ID, EVENT_GUID, SIGN_TYPE_CL,
                    MARKER_TYPE_GCL, MARKER_NUMBER, DATE_INSTALLED, DESCRIPTION, SOURCE_GCL, "comments" FROM(SELECT
                    coalesce((ID)::text , 'НЕИЗВЕСТНО') ID, coalesce((EVENT_ID)::text , 'НЕИЗВЕСТНО') EVENT_ID,
                    coalesce((EVENT_GUID)::text , 'НЕИЗВЕСТНО') EVENT_GUID, coalesce((SIGN_TYPE_CL)::text ,
                    'НЕИЗВЕСТНО') SIGN_TYPE_CL, coalesce((MARKER_TYPE_GCL)::text , 'НЕИЗВЕСТНО') MARKER_TYPE_GCL,
                    coalesce((MARKER_NUMBER)::text , 'НЕИЗВЕСТНО') MARKER_NUMBER, coalesce((DATE_INSTALLED)::text ,
                    'НЕИЗВЕСТНО') DATE_INSTALLED, coalesce((DESCRIPTION)::text , 'НЕИЗВЕСТНО') DESCRIPTION,
                    coalesce((SOURCE_GCL)::text , 'НЕИЗВЕСТНО') SOURCE_GCL, coalesce((COMMENTS)::text , 'НЕИЗВЕСТНО')
                    "comments" FROM (SELECT EVENT_ID ID, t.* FROM PODS.MARKER t) d WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_DATA_CALC" schema="PODS" id="PODS_STO_ILI_DATA_CALC" comment="PODS.STO_ILI_DATA_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT * FROM (SELECT def.ili_data_id ID ,coalesce(def.MILEPOST::text , 'НЕИЗВЕСТНО') MILEPOST
                    ,coalesce(def.orientation_deg,0) ORIENTATION_DEG /*ОРИЕНТАЦИЯ ДЕФЕКТА В ГРАДУСАХ */
                    ,coalesce(def.seam_orientation,0) seam_orientation /*ДОБАВИТЬ */
                    ,coalesce(def.nominal_wall_thickness,14) nominal_wall_thickness /*ТОЛЩИНА СТЕНКИ */
                    ,coalesce(def.weld_number::text , 'НЕИЗВЕСТНО') WELD_NUMBER /*НОМЕР ТРУБЫ */
                    ,coalesce(def.calibrated_measure,0) calibrated_measure /*ЛИНЕЙНАЯ ДИСТАЦИЯ ГЕОДЕЗИЧЕСКАЯ */
                    ,def.ili_data_id ILI_DATA_ID /*ИДЕНТИФИКАТОР ДЕФЕКТА*/ ,coalesce(def.length,0) LENGTH /*ДЛИНА
                    ДЕФЕКТА*/ ,coalesce(def.average_depth,0) AVERAGE_DEPTH /*СРЕДНЯЯ ГЛУБИНА ПОРАЖЕНИЯ*/
                    ,coalesce(def.width,0) WIDTH /*ШИРИНА*/ ,coalesce(def.measured_wall_thickness,0)
                    measured_wall_thickness /*ИЗМЕРЕННАЯ ТОЛЩИНА СТЕНКИ ТРУБЫ*/ ,coalesce(def.absolute_odometer,0)
                    ABSOLUTE_ODOMETER /*ЛИНЕЙНАЯ ДИСТАЦИЯ ГЕОДЕЗИЧЕСКАЯ*/ ,coalesce((def.INTERNAL_EXTERNAL_CL)::text ,
                    'НЕИЗВЕСТНО') INTERNAL_EXTERNAL_CL ,coalesce((def.DATE_COLLECTED)::text , 'НЕИЗВЕСТНО')
                    DATE_COLLECTED ,coalesce(def.CERTAINTY_INTERVAL,0) CERTAINTY_INTERVAL
                    ,coalesce(def.anomaly_type_cl,0) ANOMALY_TYPE_CL /*ПРИКРУТИТЬ СПРАВОЧНИК */
                    ,coalesce(def.ANOMALY_EXTENSION_CL::text , 'НЕИЗВЕСТНО') ANOMALY_EXTENSION_CL
                    ,coalesce((def.us_weld_number)::text , 'НЕИЗВЕСТНО') US_WELD_NUMBER /*НОМЕР ПРЕДЫДУЩЕЙ СЕКЦИИ
                    ТРУБЫ*/ ,coalesce(def.US_WELD_ODOMETER,0) US_WELD_ODOMETER ,coalesce(def.DS_WELD_ODOMETER,0)
                    DS_WELD_ODOMETER ,coalesce(def.US_WELD_DISTANCE,0) US_WELD_DISTANCE
                    ,coalesce(def.DS_WELD_DISTANCE,0) DS_WELD_DISTANCE ,coalesce(def.US_AGM_DISTANCE,0) US_AGM_DISTANCE
                    ,coalesce(def.DS_AGM_DISTANCE,0) DS_AGM_DISTANCE ,coalesce(def.DEPTH_ACCURACY,0) DEPTH_ACCURACY
                    ,coalesce(def.LENGTH_ACCURACY,0) LENGTH_ACCURACY ,coalesce(def.WIDTH_ACCURACY,0) WIDTH_ACCURACY
                    ,coalesce(def.STATION_REPORTED,0) STATION_REPORTED ,coalesce((def.WITHIN_SPECIFICATION_LF)::text ,
                    'НЕИЗВЕСТНО') WITHIN_SPECIFICATION_LF ,coalesce((def.CONTROL_POINT_LF)::text , 'НЕИЗВЕСТНО')
                    CONTROL_POINT_LF ,coalesce(def.COMMENTS::text , 'НЕИЗВЕСТНО') "comments"
                    ,coalesce(def.ILI_CLUSTER_ID,0) ILI_CLUSTER_ID ,coalesce(def.REF_EVENT_ID,0) REF_EVENT_ID
                    ,coalesce(def.ILI_INSPECTION_ID,0) ILI_INSPECTION_ID ,coalesce((def.SOURCE_GCL)::text ,
                    'НЕИЗВЕСТНО') SOURCE_GCL ,coalesce((def.RAW_REFERENCE_KEY)::text , 'НЕИЗВЕСТНО') RAW_REFERENCE_KEY
                    ,coalesce(def.COORDINATE_ID,0) COORDINATE_ID ,coalesce(def.EVENT_ID,0) EVENT_ID
                    ,coalesce(def.feature_description::text , 'НЕИЗВЕСТНО') FEATURE_DESCRIPTION /* ОПИСАНИЕ ДЕФЕКТА */
                    ,coalesce(def.ovality,0) ovality /*ОВАЛЬНОСТЬ */ ,coalesce(def.description,' ') DESCRIPTION /*
                    ОПИСАНИЕ */ ,coalesce(def.description,' ') REMARK /* ОПИСАНИЕ */ ,coalesce(c.CLUSTER_COMMENT,' ')
                    CLUSTER_COMMENT ,coalesce(c.R_595_2011_REPAIR_METHOD,' ') R_595_2011_REPAIR_METHOD
                    ,coalesce(c.R_595_2011_DEPTH_ABRASION,0) R_595_2011_DEPTH_ABRASION
                    ,coalesce(c.R_595_2011_SQUARE_ABRASION,0) R_595_2011_SQUARE_ABRASION
                    ,coalesce(c.R_595_2011_LENGTH_PIPE_REPAIR,0) R_595_2011_LENGTH_PIPE_REPAIR
                    ,coalesce(c.R_595_2011_COMMENT,' ') R_595_2011_COMMENT ,coalesce(c.STO_112_2007_ASSURANCE_FACTOR,0)
                    STO_112_2007_ASSURANCE_FACTOR ,coalesce(c.STO_112_2007_DESTRUCT_PRESSURE,0)
                    STO_112_2007_DESTRUCT_PRESSURE ,coalesce(c.STO_112_2007_ALLOW_PRESSURE,0)
                    STO_112_2007_ALLOW_PRESSURE ,coalesce(c.STO_112_2007_PERFORMANCE_EVAL,'0')
                    STO_112_2007_PERFORMANCE_EVAL ,coalesce(c.STO_173_2007_CRITICAL_PRESSURE::numeric,0)
                    STO_173_2007_CRITICAL_PRESSURE ,coalesce(c.STO_173_2007_DANGER_DEGREE,'0')
                    STO_173_2007_DANGER_DEGREE ,coalesce(c.STO_173_2007_SAFE_PRESSURE::numeric,0)
                    STO_173_2007_SAFE_PRESSURE ,coalesce(c.STO_173_2007_ACTUAL_SAFETY::numeric,0)
                    STO_173_2007_ACTUAL_SAFETY ,coalesce(c.STO_173_2007_STANDARD_SAFETY::numeric,0)
                    STO_173_2007_STANDARD_SAFETY ,coalesce(c.STO_292_2007_DANGER_RANK::numeric,0)
                    STO_292_2007_DANGER_RANK ,coalesce(c.STO_401_2009_FAIL_PROBABILITY::numeric,0)
                    STO_401_2009_FAIL_PROBABILITY FROM pods.ili_data def JOIN pods.sto_ili_data_calc c ON
                    def.ili_data_id = c.ili_data_id ) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_ILI_INSPECTION_CALC" schema="PODS" id="PODS_STO_ILI_INSPECTION_CALC"
          comment="PODS.STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT coalesce ( (CALC_ID)::text, 'НЕИЗВЕСТНО') CALC_ID, coalesce ( (EVENT_ID)::text,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce ( (TYPE_CL)::text, 'НЕИЗВЕСТНО') TYPE_CL, coalesce (
                    (ILI_INSPECTION_ID)::text, 'НЕИЗВЕСТНО') ILI_INSPECTION_ID, coalesce ( (BEGIN_EVENT_ID)::text,
                    'НЕИЗВЕСТНО') BEGIN_EVENT_ID, coalesce ( (END_EVENT_ID)::text, 'НЕИЗВЕСТНО') END_EVENT_ID, coalesce
                    ( (BEGIN_ODOMETER)::text, 'НЕИЗВЕСТНО') BEGIN_ODOMETER, coalesce ( (END_ODOMETER)::text,
                    'НЕИЗВЕСТНО') END_ODOMETER, coalesce ( (STO_292_2007_DAMAGE_MECHANICAL)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_DAMAGE_MECHANICAL, coalesce ( (STO_292_2007_VALUE_WELD)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_VALUE_WELD, coalesce ( (STO_292_2007_DAMAGE_CRACK)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_DAMAGE_CRACK, coalesce ( (STO_292_2007_DAMAGE_CORROSION)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_DAMAGE_CORROSION, coalesce ( (STO_292_2007_DAMAGE_DENT)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_DAMAGE_DENT, coalesce ( (STO_292_2007_VALUE_PIPE)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_VALUE_PIPE, coalesce ( (STO_292_2007_DAMAGE_DUTY_VAR)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_DAMAGE_DUTY_VAR, coalesce ( (STO_292_2007_BAD_PIPE_COUNT)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_BAD_PIPE_COUNT, coalesce ( (STO_292_2007_VALUE_CONDITION)::text, 'НЕИЗВЕСТНО')
                    STO_292_2007_VALUE_CONDITION, coalesce ( (STO_401_2003_OP_REP_PIPE_COUNT)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_OP_REP_PIPE_COUNT, coalesce ( (STO_401_2003_TIME_LIMIT_EXPL)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_TIME_LIMIT_EXPL, coalesce ( (STO_401_2003_MEAN_TIME_FAIL)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_MEAN_TIME_FAIL, coalesce ( (STO_401_2003_POSSIBLE_FALUTS)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_POSSIBLE_FALUTS, coalesce ( (STO_401_2003_PIPE_Q_RANK_G_04)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_PIPE_Q_RANK_G_04, coalesce ( (STO_401_2003_FAILURE_PROBABLY)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_FAILURE_PROBABLY, coalesce ( (STO_401_2003_MIN_UNIT_COST_YKM)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_MIN_UNIT_COST_YKM, coalesce ( (STO_401_2003_OPTIM_TIM_BFR_ILI)::text, 'НЕИЗВЕСТНО')
                    STO_401_2003_OPTIM_TIM_BFR_ILI, coalesce ( (PRIORITY_COND)::text, 'НЕИЗВЕСТНО') PRIORITY_COND,
                    coalesce ( (PRIORITY_TIME_EXP)::text, 'НЕИЗВЕСТНО') PRIORITY_TIME_EXP, coalesce (
                    (PRIORITY_PROBAB)::text, 'НЕИЗВЕСТНО') PRIORITY_PROBAB, coalesce ( (PRIORITY_TIME_FAI)::text,
                    'НЕИЗВЕСТНО') PRIORITY_TIME_FAI, coalesce ( (PRIORITY_SUMMARY)::text, 'НЕИЗВЕСТНО')
                    PRIORITY_SUMMARY, coalesce ( (STO_095_2007_NEXT_INSP_SCC)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_NEXT_INSP_SCC, coalesce ( (STO_095_2007_NEXT_INSP)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_NEXT_INSP, coalesce ( (STO_095_2007_NEXT_COMP_INSP)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_NEXT_COMP_INSP, coalesce ( (STO_095_2007_DISTR_DEPTH_SCC)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_DISTR_DEPTH_SCC, coalesce ( (STO_095_2007_DISTR_DEPTH_COR)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_DISTR_DEPTH_COR, coalesce ( (STO_095_2007_PROJECTED_SCC)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_PROJECTED_SCC, coalesce ( (STO_095_2007_PROJECTED_COR)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_PROJECTED_COR, coalesce ( (STO_095_2007_NEXT_ILI_INSP)::text, 'НЕИЗВЕСТНО')
                    STO_095_2007_NEXT_ILI_INSP FROM (SELECT EVENT_ID ID, t.* FROM PODS.STO_ILI_INSPECTION_CALC t) d
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_EHZ_CALC" schema="PODS" id="PODS_STO_EHZ_CALC" comment="PODS.STO_EHZ_CALC">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>SELECT coalesce ( (CALC_ID)::text, 'НЕИЗВЕСТНО') CALC_ID, coalesce ( (EVENT_ID)::text,
                    'НЕИЗВЕСТНО') EVENT_ID, coalesce ( (TYPE_CL)::text, 'НЕИЗВЕСТНО') TYPE_CL, coalesce (
                    (ILI_INSPECTION_ID)::text, 'НЕИЗВЕСТНО') ILI_INSPECTION_ID, coalesce ( (BEGIN_EVENT_ID)::text,
                    'НЕИЗВЕСТНО') BEGIN_EVENT_ID, coalesce ( (END_EVENT_ID)::text, 'НЕИЗВЕСТНО') END_EVENT_ID, coalesce
                    ( (BEGIN_ODOMETER)::text, 'НЕИЗВЕСТНО') BEGIN_ODOMETER, coalesce ( (END_ODOMETER)::text,
                    'НЕИЗВЕСТНО') END_ODOMETER, coalesce ( (DANGER_DEG)::text, 'НЕИЗВЕСТНО') DANGER_DEG, coalesce (
                    (DANGER_DEG_SEGMENT_TYPE)::text, 'НЕИЗВЕСТНО') DANGER_DEG_SEGMENT_TYPE, coalesce (
                    (DEFEAT_ZONE)::text, 'НЕИЗВЕСТНО') DEFEAT_ZONE, coalesce ( (INTEGR_DEG_RATE)::text, 'НЕИЗВЕСТНО')
                    INTEGR_DEG_RATE, coalesce ( (UNEVENNESS_COEF)::text, 'НЕИЗВЕСТНО') UNEVENNESS_COEF, coalesce (
                    (SEGMENT_INTENSIVE_DEG_RATE)::text, 'НЕИЗВЕСТНО') SEGMENT_INTENSIVE_DEG_RATE, coalesce (
                    (SEGMENT_INTENSIVITY)::text, 'НЕИЗВЕСТНО') SEGMENT_INTENSIVITY, coalesce ( (SEGMENT_CATEGORY)::text,
                    'НЕИЗВЕСТНО') SEGMENT_CATEGORY, coalesce ( (CORR_AVER_DEPTH)::text, 'НЕИЗВЕСТНО') CORR_AVER_DEPTH,
                    coalesce ( (CORR_AVER_SPEED)::text, 'НЕИЗВЕСТНО') CORR_AVER_SPEED, coalesce (
                    (CORR_CRITICAL_DEPTH)::text, 'НЕИЗВЕСТНО') CORR_CRITICAL_DEPTH, coalesce (
                    (CORR_TIME_TO_CRITICAL_DEPTH)::text, 'НЕИЗВЕСТНО') CORR_TIME_TO_CRITICAL_DEPTH, coalesce (
                    (PRIORITY_RATE)::text, 'НЕИЗВЕСТНО') PRIORITY_RATE, coalesce ( (IS_DEFEAT_DANGER)::text,
                    'НЕИЗВЕСТНО') IS_DEFEAT_DANGER, coalesce ( (RING_BREAK_POINT)::text, 'НЕИЗВЕСТНО') RING_BREAK_POINT,
                    coalesce ( (TIME_TO_DANGER)::text, 'НЕИЗВЕСТНО') TIME_TO_DANGER, coalesce ( (DEPTH_TO_DANGER)::text,
                    'НЕИЗВЕСТНО') DEPTH_TO_DANGER, coalesce ( (LENGTH_TO_DANGER)::text, 'НЕИЗВЕСТНО') LENGTH_TO_DANGER,
                    coalesce ( (WIDTH_TO_DANGER)::text, 'НЕИЗВЕСТНО') WIDTH_TO_DANGER, coalesce (
                    (SQUARE_TO_DANGER)::text, 'НЕИЗВЕСТНО') SQUARE_TO_DANGER FROM (SELECT EVENT_ID ID, t.* FROM
                    PODS.STO_EHZ_CALC t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_REPAIR_METHOD" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station, er.event_id
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS
                    (
                    SELECT i.ili_inspection_id, LN.line_id, r.type_cl route_type_cl,
                    CASE
                    WHEN sp.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0
                    THEN ir.description
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description ili_inspection_lbl
                    FROM pods.ili_inspection i JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp ON sp.station_id =
                    er.station_id_begin
                    JOIN pods.series s ON s.series_id = sp.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    )
                    SELECT ID, srv_district_lbl ЛПУ,
                    ili_inspection_lbl ОБСЛЕДОВАНИЕ,
                    station Километр,
                    weld_number Номер_сварного_шва,
                    r_595_2011_repair_method Р595_2011_Метод_Ремонта,
                    r_595_2011_depth_abrasion Р595_2011_Глубина_сошлифовки,
                    r_595_2011_square_abrasion Р595_2011_Площадь_сошлифовки,
                    r_595_2011_length_pipe_repair Р595_2011_Длина_катушки,
                    r_595_2011_comment Р595_2011_Комментарий,
                    feature_description Описание_дефекта,
                    anomaly_type_cl Тип_аномалии,
                    LENGTH Длина, width Ширина, average_depth Средняя_глубина,
                    orientation_deg Ориентация_в_градусах,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station,
                    weld_number, r_595_2011_repair_method,
                    r_595_2011_depth_abrasion,
                    r_595_2011_square_abrasion,
                    r_595_2011_length_pipe_repair,
                    r_595_2011_comment, feature_description,
                    anomaly_type_cl, LENGTH,
                    width, average_depth,
                    orientation_deg
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station,
                    all_in_one.weld_number, all_in_one.r_595_2011_repair_method,
                    all_in_one.r_595_2011_depth_abrasion,
                    all_in_one.r_595_2011_square_abrasion,
                    all_in_one.r_595_2011_length_pipe_repair,
                    all_in_one.r_595_2011_comment, all_in_one.feature_description,
                    all_in_one.anomaly_type_cl, all_in_one.LENGTH,
                    all_in_one.width, all_in_one.average_depth,
                    all_in_one.orientation_deg
                    FROM (SELECT f.ili_data_id ID,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    info.ili_inspection_lbl, c.station, f.weld_number,
                    f.absolute_odometer, f.anomaly_type_cl,
                    f.anomaly_extension_cl, f.LENGTH, f.width,
                    f.average_depth, f.orientation_deg,
                    f.nominal_wall_thickness, f.description,
                    f.feature_description, f.bpr_pig, f.rpr_calculated,
                    f.bpr_calculated, f.bpr_variance, f.rpr_variance,
                    f.ili_inspection_id, ref1.description anomaly_type_lbl,
                    ref2.description anomaly_extension_lbl,
                    calc.cluster_comment, calc.r_595_2011_repair_method,
                    calc.r_595_2011_depth_abrasion,
                    calc.r_595_2011_square_abrasion,
                    calc.r_595_2011_length_pipe_repair,
                    calc.r_595_2011_comment
                    FROM pods.ili_data f JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN centerline c ON c.event_id = f.event_id
                    LEFT OUTER JOIN pods.ili_anomaly_type_cl ref1
                    ON f.anomaly_type_cl = ref1.code
                    LEFT OUTER JOIN pods.anomaly_extension_cl ref2
                    ON f.anomaly_extension_cl = ref2.code
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id
                    AND calc.r_595_2011_repair_method IS NOT NULL
                    WHERE ref1.category_cl = 1) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_PERFORMANCE_EVAL" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station, er.event_id
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS
                    (
                    SELECT i.ili_inspection_id, LN.line_id, r.type_cl route_type_cl,
                    CASE
                    WHEN sp.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0
                    THEN ir.description
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description ili_inspection_lbl
                    FROM pods.ili_inspection i JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp ON sp.station_id =
                    er.station_id_begin
                    JOIN pods.series s ON s.series_id = sp.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    )
                    SELECT ID, srv_district_lbl ЛПУ,
                    ili_inspection_lbl ОБСЛЕДОВАНИЕ,
                    station Километр,
                    weld_number Номер_сварного_шва,
                    r_595_2011_repair_method Р595_2011_Метод_Ремонта,
                    r_595_2011_depth_abrasion Р595_2011_Глубина_сошлифовки,
                    r_595_2011_square_abrasion Р595_2011_Площадь_сошлифовки,
                    r_595_2011_length_pipe_repair Р595_2011_Длина_катушки,
                    r_595_2011_comment Р595_2011_Комментарий,
                    feature_description Описание_дефекта,
                    anomaly_type_cl Тип_аномалии,
                    LENGTH Длина, width Ширина, average_depth Средняя_глубина,
                    orientation_deg Ориентация_в_градусах,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station,
                    weld_number, r_595_2011_repair_method,
                    r_595_2011_depth_abrasion,
                    r_595_2011_square_abrasion,
                    r_595_2011_length_pipe_repair,
                    r_595_2011_comment, feature_description,
                    anomaly_type_cl, LENGTH,
                    width, average_depth,
                    orientation_deg
                    FROM (SELECT ID, srv_district_lbl,
                    ili_inspection_lbl, station,
                    weld_number, r_595_2011_repair_method,
                    r_595_2011_depth_abrasion,
                    r_595_2011_square_abrasion,
                    r_595_2011_length_pipe_repair,
                    r_595_2011_comment, feature_description,
                    anomaly_type_cl, LENGTH,
                    width, average_depth,
                    orientation_deg
                    FROM (SELECT f.ili_data_id ID,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    info.ili_inspection_lbl, c.station, f.weld_number,
                    f.absolute_odometer, f.anomaly_type_cl,
                    f.anomaly_extension_cl, f.LENGTH, f.width,
                    f.average_depth, f.orientation_deg,
                    f.nominal_wall_thickness, f.description,
                    f.feature_description, f.bpr_pig, f.rpr_calculated,
                    f.bpr_calculated, f.bpr_variance, f.rpr_variance,
                    f.ili_inspection_id, ref1.description anomaly_type_lbl,
                    ref2.description anomaly_extension_lbl,
                    calc.cluster_comment, calc.r_595_2011_repair_method,
                    calc.r_595_2011_depth_abrasion,
                    calc.r_595_2011_square_abrasion,
                    calc.r_595_2011_length_pipe_repair,
                    calc.r_595_2011_comment
                    FROM pods.ili_data f JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN centerline c ON c.event_id = f.event_id
                    LEFT OUTER JOIN pods.ili_anomaly_type_cl ref1
                    ON f.anomaly_type_cl = ref1.code
                    LEFT OUTER JOIN pods.anomaly_extension_cl ref2
                    ON f.anomaly_extension_cl = ref2.code
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id
                    AND calc.r_595_2011_repair_method IS NOT NULL
                    WHERE ref1.category_cl = 1) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_DANGER_DEGREE" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station, er.event_id
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS
                    (
                    SELECT i.ili_inspection_id, LN.line_id, r.type_cl route_type_cl,
                    CASE
                    WHEN sp.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0
                    THEN ir.description
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description ili_inspection_lbl
                    FROM pods.ili_inspection i JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp ON sp.station_id =
                    er.station_id_begin
                    JOIN pods.series s ON s.series_id = sp.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    )
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station Километр, weld_number Номер_сварного_шва,
                    sto_173_2007_danger_degree СТО173_03_Степень_опасн_деф,
                    feature_description Описание_дефекта, anomaly_type_cl Тип_аномалии,
                    LENGTH Длина, width Ширина, average_depth Средняя_глубина,
                    orientation_deg Ориентация_в_градусах,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station, weld_number,
                    sto_173_2007_danger_degree,
                    feature_description, anomaly_type_cl,
                    LENGTH, width, average_depth,
                    orientation_deg

                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station, all_in_one.weld_number,
                    all_in_one.sto_173_2007_danger_degree,
                    all_in_one.feature_description, all_in_one.anomaly_type_cl,
                    all_in_one.LENGTH, all_in_one.width, all_in_one.average_depth,
                    all_in_one.orientation_deg
                    FROM (SELECT f.ili_data_id ID,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    info.ili_inspection_lbl, c.station, f.weld_number,
                    f.absolute_odometer, f.anomaly_type_cl,
                    f.anomaly_extension_cl, f.LENGTH, f.width,
                    f.average_depth, f.orientation_deg,
                    f.nominal_wall_thickness, f.description,
                    f.feature_description, f.bpr_pig, f.rpr_calculated,
                    f.bpr_calculated, f.bpr_variance, f.rpr_variance,
                    f.ili_inspection_id, ref1.description anomaly_type_lbl,
                    ref2.description anomaly_extension_lbl,
                    calc.cluster_comment,
                    calc.sto_173_2007_critical_pressure,
                    calc.sto_173_2007_danger_degree,
                    calc.sto_173_2007_safe_pressure
                    FROM pods.ili_data f JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN centerline c ON c.event_id = f.event_id
                    LEFT OUTER JOIN pods.ili_anomaly_type_cl ref1
                    ON f.anomaly_type_cl = ref1.code
                    LEFT OUTER JOIN pods.anomaly_extension_cl ref2
                    ON f.anomaly_extension_cl = ref2.code
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id
                    AND calc.sto_173_2007_danger_degree IS NOT NULL
                    WHERE ref1.category_cl = 1) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_DANGER_RANK" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station, er.event_id
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS
                    (
                    SELECT i.ili_inspection_id, LN.line_id, r.type_cl route_type_cl,
                    CASE
                    WHEN sp.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0
                    THEN ir.description
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description ili_inspection_lbl
                    FROM pods.ili_inspection i JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp ON sp.station_id =
                    er.station_id_begin
                    JOIN pods.series s ON s.series_id = sp.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    )
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station Километр, weld_number Номер_трубы,
                    sto_292_2007_danger_rank СТО292_07_Текущ_ранг_опасн_деф,
                    feature_description Описание_дефекта, anomaly_type_cl Тип_аномалии,
                    LENGTH Длина, width Ширина, average_depth Средняя_глубина,
                    orientation_deg Ориентация_в_градусах,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station, weld_number,
                    sto_292_2007_danger_rank,
                    feature_description, anomaly_type_cl,
                    LENGTH, width, average_depth,
                    orientation_deg
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station, all_in_one.weld_number,
                    all_in_one.sto_292_2007_danger_rank,
                    all_in_one.feature_description, all_in_one.anomaly_type_cl,
                    all_in_one.LENGTH, all_in_one.width, all_in_one.average_depth,
                    all_in_one.orientation_deg
                    FROM (SELECT f.ili_data_id ID,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    info.ili_inspection_lbl, c.station, f.weld_number,
                    f.absolute_odometer, f.anomaly_type_cl,
                    f.anomaly_extension_cl, f.LENGTH, f.width,
                    f.average_depth, f.orientation_deg,
                    f.nominal_wall_thickness, f.description,
                    f.feature_description, f.bpr_pig, f.rpr_calculated,
                    f.bpr_calculated, f.bpr_variance, f.rpr_variance,
                    f.ili_inspection_id, ref1.description anomaly_type_lbl,
                    ref2.description anomaly_extension_lbl,
                    calc.cluster_comment, calc.sto_292_2007_danger_rank
                    FROM pods.ili_data f JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN centerline c ON c.event_id = f.event_id
                    LEFT OUTER JOIN pods.ili_anomaly_type_cl ref1
                    ON f.anomaly_type_cl = ref1.code
                    LEFT OUTER JOIN pods.anomaly_extension_cl ref2
                    ON f.anomaly_extension_cl = ref2.code
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id
                    AND calc.sto_292_2007_danger_rank IS NOT NULL
                    WHERE ref1.category_cl = 1) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_FAIL_PROBABILITY" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station, er.event_id
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS
                    (
                    SELECT i.ili_inspection_id, LN.line_id, r.type_cl route_type_cl,
                    CASE
                    WHEN sp.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0
                    THEN ir.description
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description ili_inspection_lbl
                    FROM pods.ili_inspection i JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp ON sp.station_id =
                    er.station_id_begin
                    JOIN pods.series s ON s.series_id = sp.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    )
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station Километр, weld_number Номер_сварного_шва,
                    sto_292_2007_danger_rank СТО292_07_Текущ_ранг_опасн_деф,
                    feature_description Описание_дефекта, anomaly_type_cl Тип_аномалии,
                    LENGTH Длина, width Ширина, average_depth Средняя_глубина,
                    orientation_deg Ориентация_в_градусах,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station, weld_number,
                    sto_292_2007_danger_rank ,
                    feature_description, anomaly_type_cl,
                    LENGTH, width, average_depth,
                    orientation_deg
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station, all_in_one.weld_number,
                    all_in_one.sto_292_2007_danger_rank,
                    all_in_one.feature_description, all_in_one.anomaly_type_cl,
                    all_in_one.LENGTH, all_in_one.width, all_in_one.average_depth,
                    all_in_one.orientation_deg
                    FROM (SELECT f.ili_data_id ID,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    info.ili_inspection_lbl, c.station, f.weld_number,
                    f.absolute_odometer, f.anomaly_type_cl,
                    f.anomaly_extension_cl, f.LENGTH, f.width,
                    f.average_depth, f.orientation_deg,
                    f.nominal_wall_thickness, f.description,
                    f.feature_description, f.bpr_pig, f.rpr_calculated,
                    f.bpr_calculated, f.bpr_variance, f.rpr_variance,
                    f.ili_inspection_id, ref1.description anomaly_type_lbl,
                    ref2.description anomaly_extension_lbl,
                    calc.cluster_comment, calc.sto_292_2007_danger_rank
                    FROM pods.ili_data f JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN centerline c ON c.event_id = f.event_id
                    LEFT OUTER JOIN pods.ili_anomaly_type_cl ref1
                    ON f.anomaly_type_cl = ref1.code
                    LEFT OUTER JOIN pods.anomaly_extension_cl ref2
                    ON f.anomaly_extension_cl = ref2.code
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id
                    AND calc.sto_292_2007_danger_rank IS NOT NULL
                    WHERE ref1.category_cl = 1) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_VALUE_PIPE" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DAMAGE_MECHANICAL" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    '??????????') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN '????? ?? ?????????. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data id="PODS_STO_100_VALUE_WELD" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DAMAGE_CRACK" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DAMAGE_CORROSION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DAMAGE_DENT" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DAMAGE_DUTY" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_PROJECTED_SCC" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_PROJECTED_COR" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_DANGER_DEG" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_100_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_REGULAR'
                    AND c.LENGTH = 100
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data id="PODS_STO_VALVE_VALUE_PIPE" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DAMAGE_MECHANICAL" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, srv_district_lbl, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_VALUE_WELD" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DAMAGE_CRACK" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DAMAGE_CORROSION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DAMAGE_DENT" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DAMAGE_DUTY" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_PROJECTED_SCC" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_PROJECTED_COR" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS"
          table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DANGER_DEG" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT lpu.srv_district_id, lpu.description srv_district_lbl,
                    spb.station station_beg, spe.station station_end,
                    ser.station_begin insp_station_beg,
                    ser.station_end insp_station_end, er.event_id, er.LENGTH,
                    er.FEATURE_ID, er.current_indicator_lf,
                    ln.description line_id_lbl, ln.line_id, r.route_id,
                    r.description route_id_lbl
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.LOCATION l ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL
                    THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    JOIN pods.series ser ON spb.series_id = ser.series_id
                    JOIN pods.line ln ON ser.line_id = ln.line_id
                    JOIN pods.route r ON ser.route_id = r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT ID, srv_district_lbl ЛПУ, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station_beg,
                    station_end, danger_deg,
                    danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.srv_district_lbl,
                    all_in_one.ili_inspection_lbl, all_in_one.station_beg,
                    all_in_one.station_end, all_in_one.danger_deg,
                    all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT coalesce (c.srv_district_id, 0) srv_district_id,
                    coalesce (c.srv_district_lbl,
                    'НЕИЗВЕСТНО') srv_district_lbl,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.insp_station_beg
                    || '-'
                    || c.insp_station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end, calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data id="PODS_STO_RANGE_VALUE_PIPE" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DAMAGE_MECHANICAL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_VALUE_WELD" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DAMAGE_CRACK" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline
                    AS (SELECT r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    er.event_id,
                    er.FEATURE_ID,
                    er.current_indicator_lf,
                    er.LENGTH
                    FROM pods.event_range er
                    JOIN
                    pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN
                    pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN
                    pods.series s
                    ON s.series_id = spb.series_id
                    JOIN
                    pods.route r
                    ON r.route_id = s.route_id
                    JOIN
                    pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN
                    pods.line LN
                    ON LN.line_id = r.line_id
                    JOIN
                    pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y')
                    SELECT

                    ILI_INSPECTION_LBL Обследование,
                    STATION_BEG Начальный_км,
                    STATION_END Конечный_км,
                    STO_292_2007_DAMAGE_CORROSION Поврежд_от_коррозии,
                    STO_292_2007_DAMAGE_CRACK Поврежд_наличие_трещин,
                    STO_292_2007_DAMAGE_MECHANICAL Поврежд_механ_повреждений,
                    STO_292_2007_DAMAGE_DENT Поврежд_типа_гофр_вмятин,
                    STO_292_2007_DAMAGE_DUTY_VAR Поврежд_действ_перем_эксп_нагр,
                    STO_292_2007_VALUE_PIPE Показатель_тех_состояния_труб,
                    STO_292_2007_VALUE_WELD Показатель_тех_сост_свар_соед,
                    STO_292_2007_VALUE_CONDITION Показатель_тех_сост_ВТД,
                    ID,
                    ILI_INSPECTION_LBL,
                    STATION_BEG,
                    STATION_END,
                    STO_292_2007_DAMAGE_CORROSION,
                    STO_292_2007_DAMAGE_CRACK,
                    STO_292_2007_DAMAGE_MECHANICAL,
                    STO_292_2007_DAMAGE_DENT,
                    STO_292_2007_DAMAGE_DUTY_VAR,
                    STO_292_2007_VALUE_PIPE,
                    STO_292_2007_VALUE_WELD,
                    STO_292_2007_VALUE_CONDITION
                    FROM (SELECT all_in_one.ID,
                    all_in_one.ILI_INSPECTION_LBL,
                    all_in_one.STATION_BEG,
                    all_in_one.STATION_END,
                    all_in_one.STO_292_2007_DAMAGE_CORROSION,
                    all_in_one.STO_292_2007_DAMAGE_CRACK,
                    all_in_one.STO_292_2007_DAMAGE_MECHANICAL,
                    all_in_one.STO_292_2007_DAMAGE_DENT,
                    all_in_one.STO_292_2007_DAMAGE_DUTY_VAR,
                    all_in_one.STO_292_2007_VALUE_PIPE,
                    all_in_one.STO_292_2007_VALUE_WELD,
                    all_in_one.STO_292_2007_VALUE_CONDITION
                    FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    CASE
                    WHEN c.line_id = 0 THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0 THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c
                    LEFT OUTER JOIN
                    pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN
                    pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id)
                    all_in_one
                    WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DAMAGE_CORROSION" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline
                    AS (SELECT r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    er.event_id,
                    er.FEATURE_ID,
                    er.current_indicator_lf,
                    er.LENGTH
                    FROM pods.event_range er
                    JOIN
                    pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN
                    pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN
                    pods.series s
                    ON s.series_id = spb.series_id
                    JOIN
                    pods.route r
                    ON r.route_id = s.route_id
                    JOIN
                    pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN
                    pods.line LN
                    ON LN.line_id = r.line_id
                    JOIN
                    pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y')
                    SELECT

                    ILI_INSPECTION_LBL Обследование,
                    STATION_BEG Начальный_км,
                    STATION_END Конечный_км,
                    STO_292_2007_DAMAGE_CORROSION Поврежд_от_коррозии,
                    STO_292_2007_DAMAGE_CRACK Поврежд_наличие_трещин,
                    STO_292_2007_DAMAGE_MECHANICAL Поврежд_механ_повреждений,
                    STO_292_2007_DAMAGE_DENT Поврежд_типа_гофр_вмятин,
                    STO_292_2007_DAMAGE_DUTY_VAR Поврежд_действ_перем_эксп_нагр,
                    STO_292_2007_VALUE_PIPE Показатель_тех_состояния_труб,
                    STO_292_2007_VALUE_WELD Показатель_тех_сост_свар_соед,
                    STO_292_2007_VALUE_CONDITION Показатель_тех_сост_ВТД,
                    ID,
                    ILI_INSPECTION_LBL,
                    STATION_BEG,
                    STATION_END,
                    STO_292_2007_DAMAGE_CORROSION,
                    STO_292_2007_DAMAGE_CRACK,
                    STO_292_2007_DAMAGE_MECHANICAL,
                    STO_292_2007_DAMAGE_DENT,
                    STO_292_2007_DAMAGE_DUTY_VAR,
                    STO_292_2007_VALUE_PIPE,
                    STO_292_2007_VALUE_WELD,
                    STO_292_2007_VALUE_CONDITION
                    FROM (SELECT all_in_one.ID,
                    all_in_one.ILI_INSPECTION_LBL,
                    all_in_one.STATION_BEG,
                    all_in_one.STATION_END,
                    all_in_one.STO_292_2007_DAMAGE_CORROSION,
                    all_in_one.STO_292_2007_DAMAGE_CRACK,
                    all_in_one.STO_292_2007_DAMAGE_MECHANICAL,
                    all_in_one.STO_292_2007_DAMAGE_DENT,
                    all_in_one.STO_292_2007_DAMAGE_DUTY_VAR,
                    all_in_one.STO_292_2007_VALUE_PIPE,
                    all_in_one.STO_292_2007_VALUE_WELD,
                    all_in_one.STO_292_2007_VALUE_CONDITION
                    FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    CASE
                    WHEN c.line_id = 0 THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0 THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c
                    LEFT OUTER JOIN
                    pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN
                    pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id)
                    all_in_one
                    WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DAMAGE_DENT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_VALUE_CONDITION" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DAMAGE_DUTY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_292_2007_damage_corrosion СТО292_07_Поврежд_от_корроз,
                    sto_292_2007_damage_crack СТО292_07_Поврежд_трещины,
                    sto_292_2007_damage_mechanical СТО292_07_Механич_поврежд,
                    sto_292_2007_damage_dent СТО292_07_Повр_деф_гофр_вмят,
                    sto_292_2007_damage_duty_var СТО292_07_Поврежд_перем_нагруз,
                    sto_292_2007_value_pipe СТО292_07_Показатель_сост_труб,
                    sto_292_2007_value_weld СТО292_07_Показатель_сост_шва,
                    sto_292_2007_value_condition СТО292_07_Показатель_состояния,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_292_2007_damage_corrosion,
                    sto_292_2007_damage_crack,
                    sto_292_2007_damage_mechanical,
                    sto_292_2007_damage_dent,
                    sto_292_2007_damage_duty_var,
                    sto_292_2007_value_pipe,
                    sto_292_2007_value_weld,
                    sto_292_2007_value_condition
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_292_2007_damage_corrosion,
                    all_in_one.sto_292_2007_damage_crack,
                    all_in_one.sto_292_2007_damage_mechanical,
                    all_in_one.sto_292_2007_damage_dent,
                    all_in_one.sto_292_2007_damage_duty_var,
                    all_in_one.sto_292_2007_value_pipe,
                    all_in_one.sto_292_2007_value_weld,
                    all_in_one.sto_292_2007_value_condition
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition, calc.priority_cond,
                    calc.priority_time_exp, calc.priority_probab,
                    calc.priority_time_fai, calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data id="PODS_STO_RANGE_TIME_LIMIT_EXPL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MIN_UNIT_COST_YKM" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_FAILURE_PROBABLY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OP_REP_PIPE_COUNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MEAN_TIME_FAIL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_401_2003_time_limit_expl СТО401_03_Пред_эксп_до_кап_рем,
                    sto_401_2003_optim_tim_bfr_ili СТО401_03_Оптимал_время_до_ВТД,
                    sto_401_2003_min_unit_cost_ykm СТО401_03_Мин_затр_год_на_1км,
                    sto_401_2003_failure_probably СТО401_03_Вер_отказа_после_рем,
                    sto_401_2003_op_rep_pipe_count СТО401_03_Оптим_кол_замен_труб,
                    sto_401_2003_mean_time_fail СТО401_03_Нараб_отказ_пос_Капр,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_401_2003_time_limit_expl,
                    sto_401_2003_optim_tim_bfr_ili,
                    sto_401_2003_min_unit_cost_ykm,
                    sto_401_2003_failure_probably,
                    sto_401_2003_op_rep_pipe_count,
                    sto_401_2003_mean_time_fail
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_401_2003_time_limit_expl,
                    all_in_one.sto_401_2003_optim_tim_bfr_ili,
                    all_in_one.sto_401_2003_min_unit_cost_ykm,
                    all_in_one.sto_401_2003_failure_probably,
                    all_in_one.sto_401_2003_op_rep_pipe_count,
                    all_in_one.sto_401_2003_mean_time_fail
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.sto_401_2003_op_rep_pipe_count,
                    calc.sto_401_2003_time_limit_expl,
                    calc.sto_401_2003_mean_time_fail,
                    calc.sto_401_2003_failure_probably,
                    calc.sto_401_2003_optim_tim_bfr_ili,
                    calc.sto_401_2003_min_unit_cost_ykm,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary, calc.sto_095_2007_projected_scc,
                    calc.sto_095_2007_projected_cor,
                    calc.sto_095_2007_next_insp_scc,
                    calc.sto_095_2007_next_insp,
                    calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary, calc.sto_095_2007_projected_scc,
                    calc.sto_095_2007_projected_cor,
                    calc.sto_095_2007_next_insp_scc,
                    calc.sto_095_2007_next_insp,
                    calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_COR" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary, calc.sto_095_2007_projected_scc,
                    calc.sto_095_2007_projected_cor,
                    calc.sto_095_2007_next_insp_scc,
                    calc.sto_095_2007_next_insp,
                    calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км,
                    sto_095_2007_projected_scc СТО095_07_Прогн_чис_стркор_деф,
                    sto_095_2007_next_insp_scc СТО095_07_Срок_повт_втд_стркор,
                    sto_095_2007_projected_cor СТО095_07_Прогн_чис_кор_деф,
                    sto_095_2007_next_insp СТО095_07_Срок_повт_втд_кор,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    sto_095_2007_projected_scc,
                    sto_095_2007_next_insp_scc,
                    sto_095_2007_projected_cor,
                    sto_095_2007_next_insp
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.sto_095_2007_projected_scc,
                    all_in_one.sto_095_2007_next_insp_scc,
                    all_in_one.sto_095_2007_projected_cor,
                    all_in_one.sto_095_2007_next_insp
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.priority_cond, calc.priority_time_exp,
                    calc.priority_probab, calc.priority_time_fai,
                    calc.priority_summary, calc.sto_095_2007_projected_scc,
                    calc.sto_095_2007_projected_cor,
                    calc.sto_095_2007_next_insp_scc,
                    calc.sto_095_2007_next_insp,
                    calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DANGER_DEG" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    danger_deg, danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.danger_deg, all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.danger_deg, calc.danger_deg_segment_type,
                    calc.segment_category,
                    calc.corr_time_to_critical_depth,
                    calc.segment_intensive_deg_rate, calc.corr_aver_speed,
                    calc.corr_critical_depth
                    FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_SEGMENT_CATEGORY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    danger_deg, danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.danger_deg, all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.danger_deg, calc.danger_deg_segment_type,
                    calc.segment_category,
                    calc.corr_time_to_critical_depth,
                    calc.segment_intensive_deg_rate, calc.corr_aver_speed,
                    calc.corr_critical_depth
                    FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_TIME_TO_CRIT_DEPTH" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline AS
                    (
                    SELECT r.route_id, r.description route_id_lbl,
                    r.type_cl route_type_cl, rt.description route_type_lbl,
                    LN.line_id, LN.description line_id_lbl,
                    LN.type_cl line_type_cl, lt.description line_type_lbl,
                    spb.station station_beg, spe.station station_end, er.event_id,
                    er.FEATURE_ID, er.current_indicator_lf, er.LENGTH
                    FROM pods.event_range er JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id =
                    er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON LN.type_cl = lt.code AND er.current_indicator_lf = 'Y'
                    )
                    SELECT ID, ili_inspection_lbl Обследование,
                    station_beg Начальный_км, station_end Конечный_км, danger_deg Степень_корр_опасности,
                    danger_deg_segment_type Тип_выявл_корр_опасности,
                    segment_category Катег_корр_опасности,
                    corr_time_to_critical_depth Время_до_образов_уср_крит_деф,
                    segment_intensive_deg_rate Показат_интенс_корр_поражений,
                    corr_aver_speed Усредн_скорость_корр, corr_critical_depth Критич_глубина_корр_деф,

                    ID, ili_inspection_lbl,
                    station_beg, station_end,
                    danger_deg, danger_deg_segment_type,
                    segment_category,
                    corr_time_to_critical_depth,
                    segment_intensive_deg_rate,
                    corr_aver_speed, corr_critical_depth
                    FROM (SELECT all_in_one.ID, all_in_one.ili_inspection_lbl,
                    all_in_one.station_beg, all_in_one.station_end,
                    all_in_one.danger_deg, all_in_one.danger_deg_segment_type,
                    all_in_one.segment_category,
                    all_in_one.corr_time_to_critical_depth,
                    all_in_one.segment_intensive_deg_rate,
                    all_in_one.corr_aver_speed, all_in_one.corr_critical_depth
                    FROM (SELECT f.ili_inspection_id ili_inspection_id,
                    CASE
                    WHEN c.line_id = 0
                    THEN 'ОТЧЕТ НЕ РАССЧИТАН. '
                    ELSE ''
                    END
                    || CASE
                    WHEN c.line_id = 0
                    THEN c.route_id_lbl
                    ELSE c.line_id_lbl
                    END
                    || ' ('
                    || c.station_beg
                    || '-'
                    || c.station_end
                    || '),'
                    || (f.begin_date, 'DD.MM.YY')
                    || (SELECT iv.description
                    FROM pods.ili_tool_vendor_cl iv
                    WHERE f.tool_vendor_cl = iv.code)
                    ili_inspection_lbl,
                    calc.event_id ID, c.station_beg, c.station_end,
                    calc.danger_deg, calc.danger_deg_segment_type,
                    calc.segment_category,
                    calc.corr_time_to_critical_depth,
                    calc.segment_intensive_deg_rate, calc.corr_aver_speed,
                    calc.corr_critical_depth
                    FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc
                    ON c.event_id = calc.event_id
                    AND c.current_indicator_lf = 'Y'
                    AND c.FEATURE_ID = 'INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f
                    ON calc.ili_inspection_id = f.ili_inspection_id
                    ) all_in_one WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>

    <data id="PODS_STO_DATE_TEST" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    WITH centerline
                    AS (SELECT lpu.SRV_DISTRICT_ID,
                    lpu.description srv_district_lbl,
                    spb.station,
                    er.event_id
                    FROM pods.event_range er
                    JOIN
                    pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN
                    pods.location l
                    ON l.location_id = spb.location_id
                    JOIN
                    pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info
                    AS (SELECT i.ili_inspection_id,
                    LN.line_id,
                    r.type_cl ROUTE_TYPE_CL,
                    CASE
                    WHEN sp.line_id = 0 THEN 'ОТЧЕТ НЕ ПРИВЯЗАН'
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0 THEN ir.DESCRIPTION
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description
                    ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN
                    pods.ili_inspection_range ir
                    ON i.ili_inspection_id =
                    ir.ili_inspection_id
                    JOIN
                    pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN
                    pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN
                    pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN
                    pods.series s
                    ON s.series_id = sp.series_id
                    JOIN
                    pods.route r
                    ON r.route_id = s.route_id
                    JOIN
                    pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN
                    pods.line LN
                    ON LN.line_id = r.line_id
                    JOIN
                    pods.line_type_cl lt
                    ON LN.type_cl = lt.code)
                    SELECT ID,
                    SRV_DISTRICT_LBL ЛПУ,
                    ILI_INSPECTION_LBL Обследование,
                    STATION Километр,
                    WELD_NUMBER Номер_трубы,
                    r_620_2011_date_test Р620_11_Прогноз_год_повт_диагн,
                    r_620_2011_date_repair Р620_11_Прогноз_срок_ремонта,
                    FEATURE_DESCRIPTION Идентификация,
                    ANOMALY_TYPE_CL Тип_дефекта,
                    LENGTH Длина,
                    WIDTH Ширина,
                    AVERAGE_DEPTH Средняя_глубина,
                    ORIENTATION_DEG Ориентация_град,

                    ID,
                    SRV_DISTRICT_LBL,
                    ILI_INSPECTION_LBL,
                    STATION,
                    WELD_NUMBER,
                    r_620_2011_date_test,
                    r_620_2011_date_repair,
                    FEATURE_DESCRIPTION,
                    ANOMALY_TYPE_CL,
                    LENGTH,
                    WIDTH,
                    AVERAGE_DEPTH,
                    ORIENTATION_DEG
                    FROM (SELECT all_in_one.ID,
                    all_in_one.SRV_DISTRICT_LBL,
                    all_in_one.ILI_INSPECTION_LBL,
                    all_in_one.STATION,
                    all_in_one.WELD_NUMBER,
                    all_in_one.r_620_2011_date_test,
                    all_in_one.r_620_2011_date_repair,
                    all_in_one.FEATURE_DESCRIPTION,
                    all_in_one.ANOMALY_TYPE_CL,
                    all_in_one.LENGTH,
                    all_in_one.WIDTH,
                    all_in_one.AVERAGE_DEPTH,
                    all_in_one.ORIENTATION_DEG
                    FROM (SELECT f.ILI_DATA_ID ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'НЕИЗВЕСТНО') SRV_DISTRICT_LBL,
                    info.ILI_INSPECTION_LBL,
                    C.STATION,
                    f.WELD_NUMBER,
                    f.ABSOLUTE_ODOMETER,
                    f.ANOMALY_TYPE_CL,
                    f.ANOMALY_EXTENSION_CL,
                    f.LENGTH,
                    f.WIDTH,
                    f.AVERAGE_DEPTH,
                    f.ORIENTATION_DEG,
                    f.NOMINAL_WALL_THICKNESS,
                    f.DESCRIPTION,
                    f.FEATURE_DESCRIPTION,
                    f.BPR_PIG,
                    f.RPR_CALCULATED,
                    f.BPR_CALCULATED,
                    f.BPR_VARIANCE,
                    f.RPR_VARIANCE,
                    f.ILI_INSPECTION_ID,
                    ref1.DESCRIPTION ANOMALY_TYPE_LBL,
                    ref2.DESCRIPTION ANOMALY_EXTENSION_LBL,
                    calc2.r_620_2011_date_test,
                    calc2.r_620_2011_date_repair,
                    calc2.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN
                    report_info info
                    ON info.ili_inspection_id =
                    f.ili_inspection_id
                    LEFT OUTER JOIN
                    centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN
                    PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN
                    PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    join pods.sto_ili_data_calc_adv calc2
                    ON f.ili_data_id = calc2.ili_data_id

                    WHERE ref1.category_cl = 1) all_in_one
                    WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_DATE_REPAIR" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    WITH centerline
                    AS (SELECT lpu.SRV_DISTRICT_ID,
                    lpu.description srv_district_lbl,
                    spb.station,
                    er.event_id
                    FROM pods.event_range er
                    JOIN
                    pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN
                    pods.location l
                    ON l.location_id = spb.location_id
                    JOIN
                    pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info
                    AS (SELECT i.ili_inspection_id,
                    LN.line_id,
                    r.type_cl ROUTE_TYPE_CL,
                    CASE
                    WHEN sp.line_id = 0 THEN 'ОТЧЕТ НЕ ПРИВЯЗАН'
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0 THEN ir.DESCRIPTION
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description
                    ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN
                    pods.ili_inspection_range ir
                    ON i.ili_inspection_id =
                    ir.ili_inspection_id
                    JOIN
                    pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN
                    pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN
                    pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN
                    pods.series s
                    ON s.series_id = sp.series_id
                    JOIN
                    pods.route r
                    ON r.route_id = s.route_id
                    JOIN
                    pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN
                    pods.line LN
                    ON LN.line_id = r.line_id
                    JOIN
                    pods.line_type_cl lt
                    ON LN.type_cl = lt.code)
                    SELECT ID,
                    SRV_DISTRICT_LBL ЛПУ,
                    ILI_INSPECTION_LBL Обследование,
                    STATION Километр,
                    WELD_NUMBER Номер_трубы,
                    r_620_2011_date_test Р620_11_Прогноз_год_повт_диагн,
                    r_620_2011_date_repair Р620_11_Прогноз_срок_ремонта,
                    FEATURE_DESCRIPTION Идентификация,
                    ANOMALY_TYPE_CL Тип_дефекта,
                    LENGTH Длина,
                    WIDTH Ширина,
                    AVERAGE_DEPTH Средняя_глубина,
                    ORIENTATION_DEG Ориентация_град,

                    ID,
                    SRV_DISTRICT_LBL,
                    ILI_INSPECTION_LBL,
                    STATION,
                    WELD_NUMBER,
                    r_620_2011_date_test,
                    r_620_2011_date_repair,
                    FEATURE_DESCRIPTION,
                    ANOMALY_TYPE_CL,
                    LENGTH,
                    WIDTH,
                    AVERAGE_DEPTH,
                    ORIENTATION_DEG
                    FROM (SELECT all_in_one.ID,
                    all_in_one.SRV_DISTRICT_LBL,
                    all_in_one.ILI_INSPECTION_LBL,
                    all_in_one.STATION,
                    all_in_one.WELD_NUMBER,
                    all_in_one.r_620_2011_date_test,
                    all_in_one.r_620_2011_date_repair,
                    all_in_one.FEATURE_DESCRIPTION,
                    all_in_one.ANOMALY_TYPE_CL,
                    all_in_one.LENGTH,
                    all_in_one.WIDTH,
                    all_in_one.AVERAGE_DEPTH,
                    all_in_one.ORIENTATION_DEG
                    FROM (SELECT f.ILI_DATA_ID ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'НЕИЗВЕСТНО') SRV_DISTRICT_LBL,
                    info.ILI_INSPECTION_LBL,
                    C.STATION,
                    f.WELD_NUMBER,
                    f.ABSOLUTE_ODOMETER,
                    f.ANOMALY_TYPE_CL,
                    f.ANOMALY_EXTENSION_CL,
                    f.LENGTH,
                    f.WIDTH,
                    f.AVERAGE_DEPTH,
                    f.ORIENTATION_DEG,
                    f.NOMINAL_WALL_THICKNESS,
                    f.DESCRIPTION,
                    f.FEATURE_DESCRIPTION,
                    f.BPR_PIG,
                    f.RPR_CALCULATED,
                    f.BPR_CALCULATED,
                    f.BPR_VARIANCE,
                    f.RPR_VARIANCE,
                    f.ILI_INSPECTION_ID,
                    ref1.DESCRIPTION ANOMALY_TYPE_LBL,
                    ref2.DESCRIPTION ANOMALY_EXTENSION_LBL,
                    calc2.r_620_2011_date_test,
                    calc2.r_620_2011_date_repair,
                    calc2.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN
                    report_info info
                    ON info.ili_inspection_id =
                    f.ili_inspection_id
                    LEFT OUTER JOIN
                    centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN
                    PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN
                    PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    join pods.sto_ili_data_calc_adv calc2
                    ON f.ili_data_id = calc2.ili_data_id

                    WHERE ref1.category_cl = 1) all_in_one
                    WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_LTG_KOCHETKOVA" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1">
                </var>
                <query>WITH centerline
                    AS (SELECT lpu.SRV_DISTRICT_ID,
                    lpu.description srv_district_lbl,
                    spb.station,
                    er.event_id
                    FROM pods.event_range er
                    JOIN
                    pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN
                    pods.location l
                    ON l.location_id = spb.location_id
                    JOIN
                    pods.srv_district_gcl lpu
                    ON CASE
                    WHEN l.srv_district_gcl IS NULL THEN 0
                    ELSE l.srv_district_gcl
                    END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info
                    AS (SELECT i.ili_inspection_id,
                    LN.line_id,
                    r.type_cl ROUTE_TYPE_CL,
                    CASE
                    WHEN sp.line_id = 0 THEN 'ОТЧЕТ НЕ ПРИВЯЗАН'
                    ELSE rt.description
                    END
                    || ' '
                    || CASE
                    WHEN sp.line_id = 0 THEN ir.DESCRIPTION
                    ELSE LN.description
                    END
                    || ' ('
                    || s.station_begin
                    || ' - '
                    || s.station_end
                    || '), '
                    || (i.begin_date, 'DD.MM.YY')
                    || ', '
                    || iv.description
                    ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN
                    pods.ili_inspection_range ir
                    ON i.ili_inspection_id =
                    ir.ili_inspection_id
                    JOIN
                    pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN
                    pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN
                    pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN
                    pods.series s
                    ON s.series_id = sp.series_id
                    JOIN
                    pods.route r
                    ON r.route_id = s.route_id
                    JOIN
                    pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN
                    pods.line LN
                    ON LN.line_id = r.line_id
                    JOIN
                    pods.line_type_cl lt
                    ON LN.type_cl = lt.code)
                    SELECT ID, srv_district_lbl ЛПУ,
                    ili_inspection_lbl Обследование, station Километр,
                    weld_number Номер_трубы, ltg_thickness_measured Измеренная_толщ_стенки,
                    ltg_corrosion_speed Скорость_корр_мм_в_год,
                    ltg_time_from_last_repair Лет_после_послед_рем,
                    ltg_thickness_to_destroy Мин_толщ_стен_до_разруш,
                    ltg_residual_life Остаточный_ресурс,
                    ltg_min_thickness_allow Мин_допуст_стенка_трубы,
                    ltg_actual_res_thickness Факт_запас_толщины_до_утон,
                    ltg_probab_corrosion_speed Вероятн_скор_корр,
                    ltg_depth_to_destroy Глуб_дефекта,
                    ltg_time_to_destroy Лет_до_разруш, ltg_repair_method Вид_ремонта,
                    feature_description Идентификация, anomaly_type_cl Тип_дефекта,
                    LENGTH Длина, width Ширина, average_depth Средн_глубина,
                    orientation_deg Ориентация_град,

                    ID, srv_district_lbl,
                    ili_inspection_lbl, station,
                    weld_number, ltg_thickness_measured,
                    ltg_corrosion_speed,
                    ltg_time_from_last_repair,
                    ltg_thickness_to_destroy,
                    ltg_residual_life,
                    ltg_min_thickness_allow,
                    ltg_actual_res_thickness,
                    ltg_probab_corrosion_speed,
                    ltg_depth_to_destroy,
                    ltg_time_to_destroy, ltg_repair_method,
                    feature_description, anomaly_type_cl,
                    LENGTH, width, average_depth,
                    orientation_deg
                    FROM (SELECT all_in_one.ID,
                    all_in_one.SRV_DISTRICT_LBL,
                    all_in_one.ILI_INSPECTION_LBL,
                    all_in_one.STATION,
                    all_in_one.WELD_NUMBER,
                    all_in_one.ltg_thickness_measured,
                    all_in_one.ltg_corrosion_speed,
                    all_in_one.ltg_time_from_last_repair,
                    all_in_one.ltg_thickness_to_destroy,
                    all_in_one.ltg_residual_life,
                    all_in_one.ltg_min_thickness_allow,
                    all_in_one.ltg_actual_res_thickness,
                    all_in_one.ltg_probab_corrosion_speed,
                    all_in_one.ltg_depth_to_destroy,
                    all_in_one.ltg_time_to_destroy,
                    all_in_one.ltg_repair_method,
                    all_in_one.FEATURE_DESCRIPTION,
                    all_in_one.ANOMALY_TYPE_CL,
                    all_in_one.LENGTH,
                    all_in_one.WIDTH,
                    all_in_one.AVERAGE_DEPTH,
                    all_in_one.ORIENTATION_DEG
                    FROM (SELECT f.ILI_DATA_ID ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'НЕИЗВЕСТНО') SRV_DISTRICT_LBL,
                    info.ILI_INSPECTION_LBL,
                    C.STATION,
                    f.WELD_NUMBER,
                    f.ABSOLUTE_ODOMETER,
                    f.ANOMALY_TYPE_CL,
                    f.ANOMALY_EXTENSION_CL,
                    f.LENGTH,
                    f.WIDTH,
                    f.AVERAGE_DEPTH,
                    f.ORIENTATION_DEG,
                    f.NOMINAL_WALL_THICKNESS,
                    f.DESCRIPTION,
                    f.FEATURE_DESCRIPTION,
                    f.BPR_PIG,
                    f.RPR_CALCULATED,
                    f.BPR_CALCULATED,
                    f.BPR_VARIANCE,
                    f.RPR_VARIANCE,
                    f.ILI_INSPECTION_ID,
                    ref1.DESCRIPTION ANOMALY_TYPE_LBL,
                    ref2.DESCRIPTION ANOMALY_EXTENSION_LBL,
                    calc2.ltg_thickness_measured,
                    calc2.ltg_corrosion_speed,
                    calc2.ltg_time_from_last_repair,
                    calc2.ltg_thickness_to_destroy,
                    calc2.ltg_residual_life,
                    calc2.ltg_min_thickness_allow,
                    calc2.ltg_actual_res_thickness,
                    calc2.ltg_probab_corrosion_speed,
                    calc2.ltg_depth_to_destroy,
                    calc2.ltg_time_to_destroy,
                    calc2.ltg_repair_method,
                    calc2.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN
                    report_info info
                    ON info.ili_inspection_id =
                    f.ili_inspection_id
                    LEFT OUTER JOIN
                    centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN
                    PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN
                    PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    join pods.sto_ili_data_calc_adv calc2
                    ON f.ili_data_id = calc2.ili_data_id

                    WHERE ref1.category_cl = 1) all_in_one
                    WHERE {FILTER}) dd
                </query>
            </dbQuery>
        </select>
    </data>
    <data table="STO_PIPE_SEGMENT_PARAMS" schema="PODS" id="PODS_STO_PIPE_SEGMENT_PARAMS"
          comment="PODS.STO_PIPE_SEGMENT_PARAMS">
        <select>
            <dbQuery idField="ID">
                <var name="FILTER" default="1=1">
                </var>
                <query>
                    SELECT ID ИДЕНТИФИКАТОР_ОБЪЕКТА, (SELECT description from pods.dot_class_rating_cl where
                    code=DOT_CLASS_RATING_CL) КАТЕГОРИЯ_УЧАСТКА,NOMINAL_DIAMETER_GCL
                    НОМ_ДИАМЕТР,NOMINAL_WALL_THICKNESS_GCL ТОЛЩИНА_СТЕНКИ_ММ,PROJECT_PRESSURE
                    ПРОЕКТ_ДАВЛЕНИЕ,TEST_PRESSURE ИСПЫТ_ДАВЛЕНИЕ,WORK_PRESSURE РАБ_ДАВЛЕНИЕ, (select description from
                    PODS.PIPE_LONG_SEAM_GCL where code=PIPE_LONG_SEAM_GCL) ТИП_ТРУБЫ, (SELECT description from
                    pods.pipe_segment_manufacturer_cl where code=PIPE_SEGMENT_MANUFACTURER_CL) КОМПАНИЯ_ИЗГОТОВИТЕЛЬ,
                    (select description from PODS.PIPE_SEGMENT_MATERIAL_CL where PIPE_SEGMENT_MATERIAL_CL=code)
                    МАТЕРИАЛ, coalesce ( (DATE_BEGIN_EXPLOITATION)::text, 'НЕИЗВЕСТНО') ДАТА_НАЧ_ЭКСПЛУАТАЦИИ, coalesce
                    ( (DATE_LAST_ILI)::text, 'НЕИЗВЕСТНО') ДАТА_ПОСЛЕД_ВТД, COST_REPAIR
                    СТОИМОСТЬ_РЕМОНТА_1_КМ,COST_REPLACE_PIPE СТОИМОСТЬ_ЗАМЕНЫ_ТРУБЫ_1_КМ, COST_ILI_1_KM
                    СТОИМОСТЬ_1_КМ_ВТД, COST_EXCAVATE СТОИМОСТЬ_ШУРФОВКИ_1_КМ,COST_CAPITAL_REPAIR
                    СТОИМОСТЬ_КАП_РЕМОНТА_1_КМ,(SELECT description from pods.COATING_TYPE_SCL where code=coat_code and
                    subcode=coat_subcode) ТИП_ПОКРЫТИЯ, (select description from pods.where_coating_applied_gcl where
                    code=where_coating_applied_gcl) МЕТОД_НАНЕСЕНИЯ,COMMENTS КОММЕНТАРИИ, coalesce (
                    (CREATE_DATE)::text, 'НЕИЗВЕСТНО') ДАТА_СОЗДАНИЯ_ЗАПИСИ, ID, event_id, route_id, station_begin,
                    station_end,
                    dot_class_rating_cl, nominal_diameter_gcl,
                    nominal_wall_thickness_gcl, project_pressure,
                    test_pressure, work_pressure, pipe_long_seam_gcl,
                    pipe_segment_material_cl, pipe_segment_manufacturer_cl,
                    coalesce ( (date_begin_exploitation)::text, 'НЕИЗВЕСТНО') date_begin_exploitation,
                    coalesce((date_last_ili)::text , 'НЕИЗВЕСТНО') date_last_ili, coalesce((cost_repair)::text ,
                    'НЕИЗВЕСТНО') cost_repair,
                    cost_replace_pipe, cost_ili_1_km, cost_excavate,
                    cost_capital_repair, coat_code||coat_subcode TYPE_SCL,
                    where_coating_applied_gcl, comments, coalesce((create_date)::text , 'НЕИЗВЕСТНО') create_date
                    FROM (SELECT EVENT_ID ID, t.* FROM PODS.STO_PIPE_SEGMENT_PARAMS t) d WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>

</root>