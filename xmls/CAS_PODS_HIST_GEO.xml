<?xml version="1.0" encoding="UTF-8"?>
<root version="5.5.2.1">
	<data table="CHEMICAL_INJECTION_LOG" schema="PODS" id="CAS_PODS_CHEMICAL_INJECTION_LOG" descr="Журнал добавления в грунт химических реагентов" comment="PODS_CHEMICAL_INJECTION_LOG">
		<select>
			<geoQuery idField="ID" geoField="X, Y">
				<var name="START_KM"/>
				<var name="FINISH_KM"/>
				<var name="LINE_ID"/>
				<var name="LABEL" default="Журнал добавления в грунт\n химических реагентов"/>
				<var name="LABEL_UNIT" default=""/>
				<var name="HEIGHT" default="5"/>
				<var name="TYPE" default="1D"/>
				<var name="LPU_ACCESS_FILTER" default="SELECT SRV_DISTRICT_ID FROM PODS.SRV_DISTRICT_GCL"/>
				<var name="ROUTE_TYPE_FILTER" default="ROUTE_TYPE_10"/>
				<var name="FILTERED_CLASS" default="PODS_CHEMICAL_INJECTION_LOG_LIST"/>
				<query>WITH spline AS (SELECT sp.station_id, s.station_begin, s.station_end, sp.measure FROM pods.line l JOIN pods.route r ON r.line_id = l.line_id AND r.type_cl = CASE l.type_cl WHEN 'LINE_TYPE_01' THEN 'ROUTE_TYPE_10' WHEN 'LINE_TYPE_02' THEN 'ROUTE_TYPE_11' WHEN 'LINE_TYPE_03' THEN 'ROUTE_TYPE_12' WHEN 'LINE_TYPE_04' THEN 'ROUTE_TYPE_04' END JOIN pods.series s ON s.route_id = r.route_id JOIN pods.station_point sp ON s.series_id = sp.series_id  WHERE /*sp.station locked BETWEEN {START_KM} AND {FINISH_KM} AND*/ l.line_id = {LINE_ID}  AND EXISTS (SELECT 1 FROM pods.location l WHERE l.location_id = sp.location_id AND l.srv_district_gcl in ({LPU_ACCESS_FILTER}))) select * from (SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID,( sp.station_begin + sp.measure / 1000 - {START_KM})  X,0  Y FROM PODS.CHEMICAL_INJECTION_LOG v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_begin = sp.station_id UNION SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID, ( sp.station_begin + sp.measure / 1000 - {START_KM})  X ,0  Y   FROM PODS.CHEMICAL_INJECTION_LOG v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_end = sp.station_id) mainQuery ORDER BY ID,X</query>
			</geoQuery>
		</select>
	</data>
	<data table="GRANDFATHER_PRESSURE" schema="PODS" id="CAS_PODS_GRANDFATHER_PRESSURE" descr="Журнал изменений рабочего давления" comment="PODS_GRANDFATHER_PRESSURE">
		<select>
			<geoQuery idField="ID" geoField="X, Y">
				<var name="START_KM"/>
				<var name="FINISH_KM"/>
				<var name="LINE_ID"/>
				<var name="LABEL" default="Журнал изменений рабочего давления"/>
				<var name="LABEL_UNIT" default=""/>
				<var name="HEIGHT" default="5"/>
				<var name="TYPE" default="1D"/>
				<var name="LPU_ACCESS_FILTER" default="SELECT SRV_DISTRICT_ID FROM PODS.SRV_DISTRICT_GCL"/>
				<var name="ROUTE_TYPE_FILTER" default="ROUTE_TYPE_10"/>
				<var name="FILTERED_CLASS" default="PODS_GRANDFATHER_PRESSURE_LIST"/>
				<query>WITH spline AS (SELECT sp.station_id, s.station_begin, s.station_end, sp.measure FROM pods.line l JOIN pods.route r ON r.line_id = l.line_id AND r.type_cl = CASE l.type_cl WHEN 'LINE_TYPE_01' THEN 'ROUTE_TYPE_10' WHEN 'LINE_TYPE_02' THEN 'ROUTE_TYPE_11' WHEN 'LINE_TYPE_03' THEN 'ROUTE_TYPE_12' WHEN 'LINE_TYPE_04' THEN 'ROUTE_TYPE_04' END JOIN pods.series s ON s.route_id = r.route_id JOIN pods.station_point sp ON s.series_id = sp.series_id  WHERE /*sp.station locked BETWEEN {START_KM} AND {FINISH_KM} AND*/ l.line_id = {LINE_ID}  AND EXISTS (SELECT 1 FROM pods.location l WHERE l.location_id = sp.location_id AND l.srv_district_gcl in ({LPU_ACCESS_FILTER}))) select * from (SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID,( sp.station_begin + sp.measure / 1000 - {START_KM})  X,0  Y FROM PODS.GRANDFATHER_PRESSURE v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_begin = sp.station_id UNION SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID, ( sp.station_begin + sp.measure / 1000 - {START_KM})  X ,0  Y   FROM PODS.GRANDFATHER_PRESSURE v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_end = sp.station_id) mainQuery ORDER BY ID,X</query>
			</geoQuery>
		</select>
	</data>
	<data table="CUSTOMER_INTERRUPT" schema="PODS" id="CAS_PODS_CUSTOMER_INTERRUPT" descr="Журнал отключения потребителей" comment="PODS_CUSTOMER_INTERRUPT">
		<select>
			<geoQuery idField="ID" geoField="X, Y">
				<var name="START_KM"/>
				<var name="FINISH_KM"/>
				<var name="LINE_ID"/>
				<var name="LABEL" default="Журнал отключения потребителей"/>
				<var name="LABEL_UNIT" default=""/>
				<var name="HEIGHT" default="5"/>
				<var name="TYPE" default="1D"/>
				<var name="LPU_ACCESS_FILTER" default="SELECT SRV_DISTRICT_ID FROM PODS.SRV_DISTRICT_GCL"/>
				<var name="ROUTE_TYPE_FILTER" default="ROUTE_TYPE_10"/>
				<var name="FILTERED_CLASS" default="PODS_CUSTOMER_INTERRUPT_LIST"/>
				<query>WITH spline AS (SELECT sp.station_id, s.station_begin, s.station_end, sp.measure FROM pods.line l JOIN pods.route r ON r.line_id = l.line_id AND r.type_cl = CASE l.type_cl WHEN 'LINE_TYPE_01' THEN 'ROUTE_TYPE_10' WHEN 'LINE_TYPE_02' THEN 'ROUTE_TYPE_11' WHEN 'LINE_TYPE_03' THEN 'ROUTE_TYPE_12' WHEN 'LINE_TYPE_04' THEN 'ROUTE_TYPE_04' END JOIN pods.series s ON s.route_id = r.route_id JOIN pods.station_point sp ON s.series_id = sp.series_id  WHERE /*sp.station locked BETWEEN {START_KM} AND {FINISH_KM} AND*/ l.line_id = {LINE_ID}  AND EXISTS (SELECT 1 FROM pods.location l WHERE l.location_id = sp.location_id AND l.srv_district_gcl in ({LPU_ACCESS_FILTER}))) select * from (SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID,( sp.station_begin + sp.measure / 1000 - {START_KM})  X,0  Y FROM PODS.CUSTOMER_INTERRUPT v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_begin = sp.station_id UNION SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID, ( sp.station_begin + sp.measure / 1000 - {START_KM})  X ,0  Y   FROM PODS.CUSTOMER_INTERRUPT v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_end = sp.station_id) mainQuery ORDER BY ID,X</query>
			</geoQuery>
		</select>
	</data>
	<data table="LEAK_HISTORY" schema="PODS" id="CAS_PODS_LEAK_HISTORY" descr="Журнал регистрации аварийных заявок" comment="PODS_LEAK_HISTORY">
		<select>
			<geoQuery idField="ID" geoField="X, Y">
				<var name="START_KM"/>
				<var name="FINISH_KM"/>
				<var name="LINE_ID"/>
				<var name="LABEL" default="Журнал регистрации аварийных заявок"/>
				<var name="LABEL_UNIT" default=""/>
				<var name="HEIGHT" default="5"/>
				<var name="TYPE" default="1D"/>
				<var name="LPU_ACCESS_FILTER" default="SELECT SRV_DISTRICT_ID FROM PODS.SRV_DISTRICT_GCL"/>
				<var name="ROUTE_TYPE_FILTER" default="ROUTE_TYPE_10"/>
				<var name="FILTERED_CLASS" default="PODS_LEAK_HISTORY_LIST"/>
				<query>WITH spline AS (SELECT sp.station_id, s.station_begin, s.station_end, sp.measure FROM pods.line l JOIN pods.route r ON r.line_id = l.line_id AND r.type_cl = CASE l.type_cl WHEN 'LINE_TYPE_01' THEN 'ROUTE_TYPE_10' WHEN 'LINE_TYPE_02' THEN 'ROUTE_TYPE_11' WHEN 'LINE_TYPE_03' THEN 'ROUTE_TYPE_12' WHEN 'LINE_TYPE_04' THEN 'ROUTE_TYPE_04' END JOIN pods.series s ON s.route_id = r.route_id JOIN pods.station_point sp ON s.series_id = sp.series_id  WHERE /*sp.station locked BETWEEN {START_KM} AND {FINISH_KM} AND*/ l.line_id = {LINE_ID}  AND EXISTS (SELECT 1 FROM pods.location l WHERE l.location_id = sp.location_id AND l.srv_district_gcl in ({LPU_ACCESS_FILTER}))) select * from (SELECT v.DESCRIPTION "LABEL",  v.event_id ID,( sp.station_begin + sp.measure / 1000 - {START_KM})  X,0  Y FROM PODS.LEAK_HISTORY v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_begin = sp.station_id UNION SELECT v.DESCRIPTION "LABEL",  v.event_id ID, ( sp.station_begin + sp.measure / 1000 - {START_KM})  X ,0  Y   FROM PODS.LEAK_HISTORY v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_end = sp.station_id) mainQuery ORDER BY ID,X</query>
			</geoQuery>
		</select>
	</data>
	<data table="PIPE_OPERATING_HISTORY" schema="PODS" id="CAS_PODS_PIPE_OPERATING_HISTORY" descr="Оперативный журнал трубопровода" comment="PODS_PIPE_OPERATING_HISTORY">
		<select>
			<geoQuery idField="ID" geoField="X, Y">
				<var name="START_KM"/>
				<var name="FINISH_KM"/>
				<var name="LINE_ID"/>
				<var name="LABEL" default="Оперативный журнал трубопровода"/>
				<var name="LABEL_UNIT" default=""/>
				<var name="HEIGHT" default="5"/>
				<var name="TYPE" default="1D"/>
				<var name="LPU_ACCESS_FILTER" default="SELECT SRV_DISTRICT_ID FROM PODS.SRV_DISTRICT_GCL"/>
				<var name="ROUTE_TYPE_FILTER" default="ROUTE_TYPE_10"/>
				<var name="FILTERED_CLASS" default="PODS_PIPE_OPERATING_HISTORY_LIST"/>
				<query>WITH spline AS (SELECT sp.station_id, s.station_begin, s.station_end, sp.measure FROM pods.line l JOIN pods.route r ON r.line_id = l.line_id AND r.type_cl = CASE l.type_cl WHEN 'LINE_TYPE_01' THEN 'ROUTE_TYPE_10' WHEN 'LINE_TYPE_02' THEN 'ROUTE_TYPE_11' WHEN 'LINE_TYPE_03' THEN 'ROUTE_TYPE_12' WHEN 'LINE_TYPE_04' THEN 'ROUTE_TYPE_04' END JOIN pods.series s ON s.route_id = r.route_id JOIN pods.station_point sp ON s.series_id = sp.series_id  WHERE /*sp.station locked BETWEEN {START_KM} AND {FINISH_KM} AND*/ l.line_id = {LINE_ID}  AND EXISTS (SELECT 1 FROM pods.location l WHERE l.location_id = sp.location_id AND l.srv_district_gcl in ({LPU_ACCESS_FILTER}))) select * from (SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID,( sp.station_begin + sp.measure / 1000 - {START_KM})  X,0  Y FROM PODS.PIPE_OPERATING_HISTORY v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_begin = sp.station_id UNION SELECT CAST(FLOOR(sp.station_begin) as VARCHAR(50)) || '-' || CAST(FLOOR(sp.station_end) as VARCHAR(50)) || ' ' || v.description "LABEL",  v.event_id ID, ( sp.station_begin + sp.measure / 1000 - {START_KM})  X ,0  Y   FROM PODS.PIPE_OPERATING_HISTORY v JOIN pods.event_range er ON v.event_id = er.event_id JOIN spline sp ON er.station_id_end = sp.station_id) mainQuery ORDER BY ID,X</query>
			</geoQuery>
		</select>
	</data>
</root>
