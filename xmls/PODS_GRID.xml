<root version="6.0.2.3">
<data id="PODS_ACTIVITY_ZONE" comment="PODS.ACTIVITY_ZONE" schema="PODS" table="ACTIVITY_ZONE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.ZONE_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.ZONE_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION ZONE_LBL
                     FROM centerline c 
                          JOIN PODS.ACTIVITY_ZONE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ACTIVITY_ZONE_CL ref1 
                        ON f.ZONE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ACTIVITY_ZONE_CNT" comment="PODS.ACTIVITY_ZONE" schema="PODS" table="ACTIVITY_ZONE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.ZONE_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.ACTIVITY_ZONE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ACTIVITY_ZONE_CL ref1 
                        ON f.ZONE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ANODE" comment="PODS.ANODE" schema="PODS" table="ANODE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH  lpu_info AS (SELECT er.event_id
                         ,lpu.srv_district_id
                         ,lpu.description srv_district_lbl
                     FROM pods.event_range er
                         JOIN pods.station_point sp
                           ON er.station_id_begin = sp.station_id
                         JOIN pods.location l
                           ON l.location_id = sp.location_id
                         JOIN pods.srv_district_gcl lpu
                           ON lpu.srv_district_id = l.srv_district_gcl
                   WHERE er.current_indicator_lf = 'Y' )                                                   
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.DESCRIPTION,all_in_one.MODEL,all_in_one.MATERIAL_CL,all_in_one.ANODE_DIAMETER,all_in_one.ANODE_LENGTH
            ,all_in_one.DEPTH_OF_COVER,all_in_one.BACK_FILL_MATERIAL_GCL,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT DISTINCT f.EVENT_ID ID
		      ,coalesce(lpu.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(lpu.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MODEL  
                      ,f.MATERIAL_CL  
                      ,f.ANODE_DIAMETER  
                      ,f.ANODE_LENGTH  
                      ,f.DEPTH_OF_COVER  
                      ,f.BACK_FILL_MATERIAL_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION BACK_FILL_MATERIAL_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                      ,ref4.DESCRIPTION MATERIAL_LBL
                     FROM PODS.ANODE f 
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                      LEFT OUTER JOIN PODS.ANODE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.BACK_FILL_MATERIAL_GCL ref2 
                        ON f.BACK_FILL_MATERIAL_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.ANODE_MANUFACTURER_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.ANODE_MATERIAL_CL ref4 
                        ON f.MATERIAL_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}         
          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ANODE_CNT" comment="PODS.ANODE" schema="PODS" table="ANODE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
WITH  lpu_info AS (SELECT er.event_id
                         ,lpu.srv_district_id
                         ,lpu.description srv_district_lbl
                     FROM pods.event_range er
                         JOIN pods.station_point sp
                           ON er.station_id_begin = sp.station_id
                         JOIN pods.location l
                           ON l.location_id = sp.location_id
                         JOIN pods.srv_district_gcl lpu
                           ON lpu.srv_district_id = l.srv_district_gcl
                   WHERE er.current_indicator_lf = 'Y' )                                                   
                                                
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.EVENT_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MODEL  
                      ,f.MATERIAL_CL  
                      ,f.ANODE_DIAMETER  
                      ,f.ANODE_LENGTH  
                      ,f.DEPTH_OF_COVER  
                      ,f.BACK_FILL_MATERIAL_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                         FROM PODS.ANODE f 
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_BOND_LEAD" comment="PODS.BOND_LEAD" schema="PODS" table="BOND_LEAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.NAME,all_in_one.MATERIAL_CL,all_in_one.MAX_RESISTANCE
            ,all_in_one.DATE_INSTALLED,all_in_one.BONDED_COMPANY_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.MATERIAL_CL  
                      ,f.MAX_RESISTANCE  
                      ,f.DATE_INSTALLED  
                      ,f.BONDED_COMPANY_CL
                      ,ref1.DESCRIPTION MATERIAL_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.BOND_LEAD f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.BOND_LEAD_MATERIAL_CL ref1 
                        ON f.MATERIAL_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.BOND_LEAD_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_BOND_LEAD_CNT" comment="PODS.BOND_LEAD" schema="PODS" table="BOND_LEAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.MATERIAL_CL  
                      ,f.MAX_RESISTANCE  
                      ,f.DATE_INSTALLED  
                      ,f.BONDED_COMPANY_CL
                       FROM centerline c 
                          JOIN PODS.BOND_LEAD f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_BRANCH_CONNECT" comment="PODS.BRANCH_CONNECT" schema="PODS" table="BRANCH_CONNECT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.NOMINAL_WALL_THICKNESS_GCL
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.BRANCH_CONNECT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.BRANCH_CONNECT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref2 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.BRANCH_CONNECT_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_BRANCH_CONNECT_CNT" comment="PODS.BRANCH_CONNECT" schema="PODS" table="BRANCH_CONNECT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                         FROM centerline c 
                          JOIN PODS.BRANCH_CONNECT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.BRANCH_CONNECT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CASING" comment="PODS.CASING" schema="PODS" table="CASING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.CROSSING_TYPE_GCL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.LENGTH,all_in_one.DESCRIPTION
            ,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED,all_in_one.PIPE_GRADE_GCL,all_in_one.PIPE_MILL_LOCATION_GCL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CROSSING_TYPE_GCL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.LENGTH  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_GRADE_GCL  
                      ,f.PIPE_MILL_LOCATION_GCL
                      ,ref1.DESCRIPTION CROSSING_TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref5.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.CASING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.CROSSING_TYPE_GCL ref1 
                        ON f.CROSSING_TYPE_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.CASING_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.CASING_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CASING_CNT" comment="PODS.CASING" schema="PODS" table="CASING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CROSSING_TYPE_GCL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.LENGTH  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_GRADE_GCL  
                      ,f.PIPE_MILL_LOCATION_GCL
                          FROM centerline c 
                          JOIN PODS.CASING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.CROSSING_TYPE_GCL ref1 
                        ON f.CROSSING_TYPE_GCL = ref1.CODE
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CATHODIC_PROTECTION_RANGE" comment="PODS.CATHODIC_PROTECTION_RANGE" schema="PODS" table="CATHODIC_PROTECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.CATHODICALLY_PROTECTED_LF 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CATHODICALLY_PROTECTED_LF
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.CATHODIC_PROTECTION_RANGE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CATHODIC_PROTECTION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CATHODIC_PROTECTION_RANGE_CNT" comment="PODS.CATHODIC_PROTECTION_RANGE" schema="PODS" table="CATHODIC_PROTECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CATHODICALLY_PROTECTED_LF
                      FROM centerline c 
                          JOIN PODS.CATHODIC_PROTECTION_RANGE f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CHEMICAL_INJECTION_LOG" comment="PODS.CHEMICAL_INJECTION_LOG" schema="PODS" table="CHEMICAL_INJECTION_LOG">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.CHEMICAL_TYPE_CL,all_in_one.DESCRIPTION,all_in_one.CHEMICAL_MEASUREMENT
            ,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.CHEMICAL_TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CHEMICAL_MEASUREMENT  
                      ,f.REF_CHEMICAL_INJECTOR_EVENT_ID  
                      ,f.INSPECTION_DATE
                      ,ref1.DESCRIPTION CHEMICAL_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.CHEMICAL_INJECTION_LOG f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CHEMICAL_TYPE_CL ref1 
                        ON f.CHEMICAL_TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CHEMICAL_INJECTION_LOG_CNT" comment="PODS.CHEMICAL_INJECTION_LOG" schema="PODS" table="CHEMICAL_INJECTION_LOG">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.CHEMICAL_TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CHEMICAL_MEASUREMENT  
                      ,f.REF_CHEMICAL_INJECTOR_EVENT_ID  
                      ,f.INSPECTION_DATE
                      FROM centerline c 
                          JOIN PODS.CHEMICAL_INJECTION_LOG f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CHEMICAL_INJECTOR" comment="PODS.CHEMICAL_INJECTOR" schema="PODS" table="CHEMICAL_INJECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.INJECTOR_NAME,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INJECTOR_NAME  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.CHEMICAL_INJECTOR f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CHEMICAL_INJECTOR_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CHEMICAL_INJECTOR_CNT" comment="PODS.CHEMICAL_INJECTOR" schema="PODS" table="CHEMICAL_INJECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INJECTOR_NAME  
                      ,f.DATE_INSTALLED
                      FROM centerline c 
                          JOIN PODS.CHEMICAL_INJECTOR f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CLOSURE" comment="PODS.CLOSURE" schema="PODS" table="CLOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION
            ,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref5.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.CLOSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.CLOSURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.CLOSURE_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.CLOSURE_MATERIAL_CL ref5 
                        ON f.MATERIAL_CL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CLOSURE_CNT" comment="PODS.CLOSURE" schema="PODS" table="CLOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                          FROM centerline c 
                          JOIN PODS.CLOSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.CLOSURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COLLAR" comment="PODS.COLLAR" schema="PODS" table="COLLAR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL
            ,all_in_one.INTERNAL_NOMINAL_DIAMETER_GCL,all_in_one.DATE_INSTALLED,all_in_one.COATING_TYPE_SCL
            ,all_in_one.EXTERNAL_NOMINAL_DIAMETER_GCL,all_in_one.FITTING_TYPE_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.INTERNAL_NOMINAL_DIAMETER_GCL  
                      ,f.COLLAR_ID  
                      ,f.DATE_INSTALLED  
                      ,coalesce(f.COATING_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.COATING_SUBTYPE_SCL, 'NONE') COATING_TYPE_SCL
                      ,f.EXTERNAL_NOMINAL_DIAMETER_GCL  
                      ,f.FITTING_TYPE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION INTERNAL_NOMINAL_DIAMETER_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref5.DESCRIPTION MATERIAL_LBL
                      ,ref6.DESCRIPTION COATING_TYPE_SCL_LBL 
                     FROM centerline c 
                          JOIN PODS.COLLAR f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COLLAR_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.COLLAR_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.INTERNAL_NOMINAL_DIAMETER_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.COLLAR_MATERIAL_CL ref5 
                        ON f.MATERIAL_CL = ref5.CODE 
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref6 
                        ON f.COATING_TYPE_SCL = ref6.CODE AND f.COATING_SUBTYPE_SCL = ref6.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COLLAR_CNT" comment="PODS.COLLAR" schema="PODS" table="COLLAR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.INTERNAL_NOMINAL_DIAMETER_GCL  
                      ,f.COLLAR_ID  
                      ,f.DATE_INSTALLED  
                      ,f.COATING_TYPE_SCL  
                      ,f.EXTERNAL_NOMINAL_DIAMETER_GCL  
                      ,f.FITTING_TYPE_CL
                          FROM centerline c 
                          JOIN PODS.COLLAR f 
                            ON c.event_id = f.event_id
                     WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COLLET_CONNECTOR" comment="PODS.COLLET_CONNECTOR" schema="PODS" table="COLLET_CONNECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.CONNECTOR_ID  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MATERIAL_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.COLLET_CONNECTOR f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COLLET_CONNECTOR_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.COLLET_CONNECTOR_MATERIAL_CL ref2 
                        ON f.MATERIAL_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.COLLET_CONNECTOR_MFGR_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COLLET_CONNECTOR_CNT" comment="PODS.COLLET_CONNECTOR" schema="PODS" table="COLLET_CONNECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.CONNECTOR_ID  
                      ,f.DATE_INSTALLED
                        FROM centerline c 
                          JOIN PODS.COLLET_CONNECTOR f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COMPRESSOR_STATION" comment="PODS.COMPRESSOR_STATION" schema="PODS" table="COMPRESSOR_STATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                    FROM(SELECT offline_id
                              ,lpu.srv_district_id
                              ,lpu.description srv_district_lbl
                              ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                          FROM pods.offline_event oe
                                LEFT OUTER JOIN pods.part p
                                  ON p.shape_id = oe.shape_id
                                LEFT OUTER JOIN pods.vertex v
                                  ON v.part_id = p.part_id
                                LEFT OUTER JOIN pods.location l
                                  ON l.location_id = v.location_id  
                                JOIN pods.srv_district_gcl lpu
                                  ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                            WHERE oe.current_indicator_lf = 'Y') d
                  WHERE rwn = 1)                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS}  ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION_NAME
            ,all_in_one.STATION_NUMBER,all_in_one.TOTAL_HORSEPOWER,all_in_one.PRIMARY_FUNCTION_CL,all_in_one.NUMBER_OF_ENGINES,all_in_one.NUMBER_OF_MOTORS
            ,all_in_one.NUMBER_OF_TURBINES 
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID            
                      ,lpu.SRV_DISTRICT_LBL 
                      ,f.STATION_NAME  
                      ,f.STATION_NUMBER  
                      ,f.TOTAL_HORSEPOWER  
                      ,f.PRIMARY_FUNCTION_CL  
                      ,f.NUMBER_OF_ENGINES  
                      ,f.NUMBER_OF_MOTORS  
                      ,f.NUMBER_OF_TURBINES  
                      ,ref1.DESCRIPTION PRIMARY_FUNCTION_LBL
                     FROM PODS.COMPRESSOR_STATION f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.PRIMARY_FUNCTION_CL ref1 
                        ON f.PRIMARY_FUNCTION_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               
         
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COMPRESSOR_STATION_CNT" comment="PODS.COMPRESSOR_STATION" schema="PODS" table="COMPRESSOR_STATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
WITH lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                    FROM(SELECT offline_id
                              ,lpu.srv_district_id
                              ,lpu.description srv_district_lbl
                              ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                          FROM pods.offline_event oe
                                LEFT OUTER JOIN pods.part p
                                  ON p.shape_id = oe.shape_id
                                LEFT OUTER JOIN pods.vertex v
                                  ON v.part_id = p.part_id
                                LEFT OUTER JOIN pods.location l
                                  ON l.location_id = v.location_id  
                                JOIN pods.srv_district_gcl lpu
                                  ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                            WHERE oe.current_indicator_lf = 'Y') d
                  WHERE rwn = 1)                                         
          SELECT  COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID            
                      ,lpu.SRV_DISTRICT_LBL 
                      ,f.STATION_NAME  
                      ,f.STATION_NUMBER  
                      ,f.TOTAL_HORSEPOWER  
                      ,f.PRIMARY_FUNCTION_CL  
                      ,f.NUMBER_OF_ENGINES  
                      ,f.NUMBER_OF_MOTORS  
                      ,f.NUMBER_OF_TURBINES  
                      ,f.ENGINES_USED_FOR_ELECTRICITY  
                      ,f.SIP_APPLICABLE_LF  
                      ,f.SIP_ISSUED_DATE  
                      ,f.SIP_SUBMITTED_DATE  
                      ,f.TURBINES_USED_FOR_ELECTRICITY  
                      ,f.TITLE_V_APPLICABLE_LF  
                      ,f.TITLE_V_RECEIVED_DATE  
                      ,f.TITLE_V_SUBMITTED_DATE
                     FROM PODS.COMPRESSOR_STATION f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CONCRETE_SLAB" comment="PODS.CONCRETE_SLAB" schema="PODS" table="CONCRETE_SLAB">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.WEIGHT,all_in_one.DESCRIPTION,all_in_one.THICKNESS,all_in_one.NAME,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.WEIGHT  
                      ,f.DESCRIPTION  
                      ,f.THICKNESS  
                      ,f.NAME  
                      ,f.DATE_INSTALLED
                     FROM centerline c 
                          JOIN PODS.CONCRETE_SLAB f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CONCRETE_SLAB_CNT" comment="PODS.CONCRETE_SLAB" schema="PODS" table="CONCRETE_SLAB">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.WEIGHT  
                      ,f.DESCRIPTION  
                      ,f.THICKNESS  
                      ,f.NAME  
                      ,f.DATE_INSTALLED
                     FROM centerline c 
                          JOIN PODS.CONCRETE_SLAB f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COUNTY_BOUNDARY" comment="PODS.COUNTY_BOUNDARY" schema="PODS" table="COUNTY_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.STATE_GCL  
                      ,f.DESCRIPTION  
                      ,f.FIPS_CL
                      ,ref1.NAME FIPS_LBL
                      ,ref3.NAME STATE_LBL
                      ,ref6.DESCRIPTION SOURCE_LBL
                     FROM centerline c 
                          JOIN PODS.COUNTY_BOUNDARY f 
                            ON c.event_id = f.event_id
                          JOIN PODS.COUNTY_CL ref1 
                            ON f.STATE_GCL = ref1.STATE_GCL
                            AND f.FIPS_CL = ref1.FIPS_CODE
                          JOIN PODS.STATE_PROVINCE_GCL ref3 
                            ON f.STATE_GCL = ref3.CODE
                          LEFT OUTER JOIN PODS.SOURCE_GCL ref6 
                            ON f.SOURCE_GCL = ref6.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               

        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COUNTY_BOUNDARY_CNT" comment="PODS.COUNTY_BOUNDARY" schema="PODS" table="COUNTY_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.STATE_GCL  
                      ,f.DESCRIPTION  
                      ,f.FIPS_CL
                  FROM centerline c 
                      JOIN PODS.COUNTY_BOUNDARY f 
                        ON c.event_id = f.event_id
                      JOIN PODS.COUNTY_CL ref1 
                        ON f.STATE_GCL = ref1.STATE_GCL
                        AND f.FIPS_CL = ref1.FIPS_CODE
                      JOIN PODS.STATE_PROVINCE_GCL ref3 
                        ON f.STATE_GCL = ref3.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COUPON_SITE" comment="PODS.COUPON_SITE" schema="PODS" table="COUPON_SITE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.MODEL
            ,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT f.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.DATE_INSTALLED  
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.COUPON_SITE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COUPON_SITE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.COUPON_SITE_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_COUPON_SITE_CNT" comment="PODS.COUPON_SITE" schema="PODS" table="COUPON_SITE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.DATE_INSTALLED  
                      ,f.REF_TEST_LEAD_EVENT_ID
                       FROM centerline c 
                          JOIN PODS.COUPON_SITE f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CUSTOMER_INTERRUPT" comment="PODS.CUSTOMER_INTERRUPT" schema="PODS" table="CUSTOMER_INTERRUPT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION,all_in_one.STATUS_CL,all_in_one.DETERMINATION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.STATUS_CL  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION STATUS_LBL
                     FROM centerline c 
                          JOIN PODS.CUSTOMER_INTERRUPT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.INTERRUPT_STATUS_CL ref1 
                        ON f.STATUS_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CUSTOMER_INTERRUPT_CNT" comment="PODS.CUSTOMER_INTERRUPT" schema="PODS" table="CUSTOMER_INTERRUPT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.STATUS_CL  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.CUSTOMER_INTERRUPT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.INTERRUPT_STATUS_CL ref1 
                        ON f.STATUS_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DEPTH_OF_COVER" comment="PODS.DEPTH_OF_COVER" schema="PODS" table="DEPTH_OF_COVER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.MEASUREMENT,all_in_one.MEASUREMENT_METHOD_CL,all_in_one.DESCRIPTION,all_in_one.DETERMINATION_DATE
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.MEASUREMENT  
                      ,f.MEASUREMENT_METHOD_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION MEASUREMENT_METHOD_LBL
                     FROM centerline c 
                          JOIN PODS.DEPTH_OF_COVER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DEPTH_MEASUREMENT_METHOD_CL ref1 
                        ON f.MEASUREMENT_METHOD_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DEPTH_OF_COVER_CNT" comment="PODS.DEPTH_OF_COVER" schema="PODS" table="DEPTH_OF_COVER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.MEASUREMENT  
                      ,f.MEASUREMENT_METHOD_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.DEPTH_OF_COVER f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DISTRIBUTION_PLANT" comment="PODS.DISTRIBUTION_PLANT" schema="PODS" table="DISTRIBUTION_PLANT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                    FROM(SELECT offline_id
                              ,lpu.srv_district_id
                              ,lpu.description srv_district_lbl
                              ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                          FROM pods.offline_event oe
                                LEFT OUTER JOIN pods.part p
                                  ON p.shape_id = oe.shape_id
                                LEFT OUTER JOIN pods.vertex v
                                  ON v.part_id = p.part_id
                                LEFT OUTER JOIN pods.location l
                                  ON l.location_id = v.location_id  
                                JOIN pods.srv_district_gcl lpu
                                  ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                            WHERE oe.current_indicator_lf = 'Y') d
                  WHERE rwn = 1)                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.DESCRIPTION,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL,all_in_one.NOMINAL_PRESSURE_RATING_INLET,all_in_one.NOMINAL_PRESSURE_RATING_OUTLET
            ,all_in_one.NAME,all_in_one.MANUFACTURER_CL,all_in_one.MODEL,all_in_one.SERIAL_NUMBER,all_in_one.DATE_INSTALLED
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING_INLET  
                      ,f.NOMINAL_PRESSURE_RATING_OUTLET  
                      ,f.NAME  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.SERIAL_NUMBER  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_OUTLET_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                     FROM PODS.DISTRIBUTION_PLANT f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.DISTRIBUTION_PLANT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_OUTLET_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.DISTR_PLANT_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DISTRIBUTION_PLANT_CNT" comment="PODS.DISTRIBUTION_PLANT" schema="PODS" table="DISTRIBUTION_PLANT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
WITH lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                    FROM(SELECT offline_id
                              ,lpu.srv_district_id
                              ,lpu.description srv_district_lbl
                              ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                          FROM pods.offline_event oe
                                LEFT OUTER JOIN pods.part p
                                  ON p.shape_id = oe.shape_id
                                LEFT OUTER JOIN pods.vertex v
                                  ON v.part_id = p.part_id
                                LEFT OUTER JOIN pods.location l
                                  ON l.location_id = v.location_id  
                                JOIN pods.srv_district_gcl lpu
                                  ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                            WHERE oe.current_indicator_lf = 'Y') d
                  WHERE rwn = 1)                             
          SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING_INLET  
                      ,f.NOMINAL_PRESSURE_RATING_OUTLET  
                      ,f.NAME  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.SERIAL_NUMBER  
                      ,f.DATE_INSTALLED
                     FROM PODS.DISTRIBUTION_PLANT f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRAG_REDUCING_AGENT" comment="PODS.DRAG_REDUCING_AGENT" schema="PODS" table="DRAG_REDUCING_AGENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.DRAG_REDUCING_AGENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DRAG_REDUCING_AGENT_MFGR_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.DRAG_REDUCING_AGENT_MATL_CL ref2 
                        ON f.MATERIAL_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRAG_REDUCING_AGENT_CNT" comment="PODS.DRAG_REDUCING_AGENT" schema="PODS" table="DRAG_REDUCING_AGENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DRA_SKID_ID
                       FROM centerline c 
                          JOIN PODS.DRAG_REDUCING_AGENT f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRIP" comment="PODS.DRIP" schema="PODS" table="DRIP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.MANUFACTURER_CL,all_in_one.DESCRIPTION,all_in_one.NAME
            ,all_in_one.PURCHASE_ORDER_NUMBER,all_in_one.DATE_INSTALLED,all_in_one.PIPE_MILL_LOCATION_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.PURCHASE_ORDER_NUMBER  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.DRIP f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DRIP_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref3 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRIP_CNT" comment="PODS.DRIP" schema="PODS" table="DRIP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.PURCHASE_ORDER_NUMBER  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                        FROM centerline c 
                          JOIN PODS.DRIP f 
                            ON c.event_id = f.event_id
                       JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRIP_RISER" comment="PODS.DRIP_RISER" schema="PODS" table="DRIP_RISER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.MANUFACTURER_CL,all_in_one.DESCRIPTION,all_in_one.NAME
            ,all_in_one.SMYS_GCL,all_in_one.DATE_INSTALLED,all_in_one.PIPE_MILL_LOCATION_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.SMYS_GCL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION SMYS_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.DRIP_RISER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DRIP_RISER_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.SMYS_GCL ref2 
                        ON f.SMYS_GCL = ref2.CODE
                      JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_DRIP_RISER_CNT" comment="PODS.DRIP_RISER" schema="PODS" table="DRIP_RISER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.SMYS_GCL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                         FROM centerline c 
                          JOIN PODS.DRIP_RISER f 
                            ON c.event_id = f.event_id
                        JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_GCL = ref3.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ELBOW" comment="PODS.ELBOW" schema="PODS" table="ELBOW">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.MANUFACTURER_CL
            ,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_OUTLET_LBL
                      ,ref3.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.ELBOW f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref1 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_OUTLET_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref3 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.ELBOW_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ELBOW_CNT" comment="PODS.ELBOW" schema="PODS" table="ELBOW">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                         FROM centerline c 
                          JOIN PODS.ELBOW f 
                            ON c.event_id = f.event_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXPOSURE" comment="PODS.EXPOSURE" schema="PODS" table="EXPOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.HEIGHT,all_in_one.SUPPORT_TYPE_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.HEIGHT  
                      ,f.SUPPORT_TYPE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION SUPPORT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.EXPOSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.EXPOSURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.EXPOSURE_SUPPORT_TYPE_CL ref2 
                        ON f.SUPPORT_TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXPOSURE_CNT" comment="PODS.EXPOSURE" schema="PODS" table="EXPOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.HEIGHT  
                      ,f.SUPPORT_TYPE_CL
                       FROM centerline c 
                          JOIN PODS.EXPOSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.EXPOSURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTERNAL_COATING" comment="PODS.EXTERNAL_COATING" schema="PODS" table="EXTERNAL_COATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.COATING_MATERIAL_GCL,all_in_one.COATING_APPLICATOR_GCL,all_in_one.COATING_MANUFACTURER_GCL,all_in_one.DESCRIPTION
            ,all_in_one.WHERE_COATING_APPLIED_GCL,all_in_one.PRODUCT_NAME,all_in_one.DATE_APPLIED,all_in_one.TYPE_SCL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.COATING_MATERIAL_GCL  
                      ,f.COATING_APPLICATOR_GCL  
                      ,f.COATING_MANUFACTURER_GCL  
                      ,f.DESCRIPTION  
                      ,f.WHERE_COATING_APPLIED_GCL  
                      ,f.PRODUCT_NAME  
                      ,f.DATE_APPLIED  
                      ,coalesce(f.TYPE_SCL, 'UNKNOWN')||'@'||coalesce(f.SUBTYPE_SCL, 'NONE') TYPE_SCL
                      ,ref1.DESCRIPTION COATING_MATERIAL_LBL
                      ,ref2.DESCRIPTION COATING_MANUFACTURER_LBL
                      ,ref3.DESCRIPTION COATING_APPLICATOR_LBL
                      ,ref4.DESCRIPTION WHERE_COATING_APPLIED_LBL
                      ,ref5.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.EXTERNAL_COATING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COATING_MATERIAL_GCL ref1 
                        ON f.COATING_MATERIAL_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.COATING_MANUFACTURER_GCL ref2 
                        ON f.COATING_MANUFACTURER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.COATING_APPLICATOR_GCL ref3 
                        ON f.COATING_APPLICATOR_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.WHERE_COATING_APPLIED_GCL ref4 
                        ON f.WHERE_COATING_APPLIED_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref5 
                        ON f.TYPE_SCL = ref5.CODE AND f.SUBTYPE_SCL = ref5.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTERNAL_COATING_CNT" comment="PODS.EXTERNAL_COATING" schema="PODS" table="EXTERNAL_COATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.COATING_MATERIAL_GCL  
                      ,f.COATING_APPLICATOR_GCL  
                      ,f.COATING_MANUFACTURER_GCL  
                      ,f.DESCRIPTION  
                      ,f.WHERE_COATING_APPLIED_GCL  
                      ,f.PRODUCT_NAME  
                      ,f.DATE_APPLIED  
                      ,f.TYPE_SCL
                         FROM centerline c 
                          JOIN PODS.EXTERNAL_COATING f 
                            ON c.event_id = f.event_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTRUSION" comment="PODS.EXTRUSION" schema="PODS" table="EXTRUSION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_WALL_THICKNESS_IN_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_IN_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_IN_LBL
                     FROM centerline c 
                          JOIN PODS.EXTRUSION f 
                            ON c.event_id = f.event_id
                      JOIN PODS.EXTRUSION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.EXTRUSION_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_IN_GCL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTRUSION_CNT" comment="PODS.EXTRUSION" schema="PODS" table="EXTRUSION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_IN_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                         FROM centerline c 
                          JOIN PODS.EXTRUSION f 
                            ON c.event_id = f.event_id
                      JOIN PODS.EXTRUSION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTRUSION_OPENING" comment="PODS.EXTRUSION_OPENING" schema="PODS" table="EXTRUSION_OPENING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref2.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.EXTRUSION_OPENING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref1 
                        ON f.NOMINAL_DIAMETER_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref2 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_EXTRUSION_OPENING_CNT" comment="PODS.EXTRUSION_OPENING" schema="PODS" table="EXTRUSION_OPENING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.DESCRIPTION  
                      ,f.SERIES_BRANCH  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.EXTRUSION_OPENING f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FABRICATION" comment="PODS.FABRICATION" schema="PODS" table="FABRICATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.LOCATION_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.LOCATION_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION LOCATION_LBL
                     FROM centerline c 
                          JOIN PODS.FABRICATION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.FABRICATION_LOCATION_CL ref1 
                        ON f.LOCATION_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FABRICATION_CNT" comment="PODS.FABRICATION" schema="PODS" table="FABRICATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.LOCATION_CL  
                      ,f.DATE_INSTALLED
                      FROM centerline c 
                          JOIN PODS.FABRICATION f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RANKING" comment="PODS.FACILITY_RANKING" schema="PODS" table="FACILITY_RANKING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.RANKING,all_in_one.PURPOSE_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.RANKING  
                      ,f.PURPOSE_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION PURPOSE_LBL
                     FROM centerline c 
                          JOIN PODS.FACILITY_RANKING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.RANKING_PURPOSE_CL ref1 
                        ON f.PURPOSE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RANKING_CNT" comment="PODS.FACILITY_RANKING" schema="PODS" table="FACILITY_RANKING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.RANKING  
                      ,f.PURPOSE_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.FACILITY_RANKING f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RATING" comment="PODS.FACILITY_RATING" schema="PODS" table="FACILITY_RATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.RATING,all_in_one.PURPOSE_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.RATING  
                      ,f.PURPOSE_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION PURPOSE_LBL
                     FROM centerline c 
                          JOIN PODS.FACILITY_RATING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.RATING_PURPOSE_CL ref1 
                        ON f.PURPOSE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RATING_CNT" comment="PODS.FACILITY_RATING" schema="PODS" table="FACILITY_RATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.RATING  
                      ,f.PURPOSE_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.FACILITY_RATING f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RATING_VARIANCE" comment="PODS.FACILITY_RATING_VARIANCE" schema="PODS" table="FACILITY_RATING_VARIANCE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.UPRATED_PRESSURE,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.UPRATED_PRESSURE  
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.FACILITY_RATING_VARIANCE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FACILITY_RATING_VARIANCE_CNT" comment="PODS.FACILITY_RATING_VARIANCE" schema="PODS" table="FACILITY_RATING_VARIANCE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.UPRATED_PRESSURE  
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.FACILITY_RATING_VARIANCE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FAIRING" comment="PODS.FAIRING" schema="PODS" table="FAIRING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED
            ,all_in_one.COATING_TYPE_SCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,coalesce(f.COATING_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.COATING_SUBTYPE_SCL, 'NONE') COATING_TYPE_SCL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION COATING_TYPE_LBL 
                     FROM centerline c 
                          JOIN PODS.FAIRING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.FAIRING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.FAIRING_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref3 
                        ON f.COATING_TYPE_SCL = ref3.CODE AND f.COATING_SUBTYPE_SCL = ref3.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FAIRING_CNT" comment="PODS.FAIRING" schema="PODS" table="FAIRING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.COATING_TYPE_SCL
                       FROM centerline c 
                          JOIN PODS.FAIRING f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLANGE" comment="PODS.FLANGE" schema="PODS" table="FLANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            ,all_in_one.MATERIAL_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MATERIAL_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                      ,ref4.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.FLANGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.FLANGE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.FLANGE_MANUFACTURER_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.FLANGE_MATERIAL_CL ref4 
                        ON f.MATERIAL_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLANGE_CNT" comment="PODS.FLANGE" schema="PODS" table="FLANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MATERIAL_CL  
                      ,f.DATE_INSTALLED
                         FROM centerline c 
                          JOIN PODS.FLANGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.FLANGE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLEXIBLE_JOINT" comment="PODS.FLEXIBLE_JOINT" schema="PODS" table="FLEXIBLE_JOINT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.CONNECTION_TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CONNECTION_TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION CONNECTION_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.FLEXIBLE_JOINT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.FLEXIBLE_JOINT_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.FLEXIBLE_JOINT_CONN_TYPE_CL ref3 
                        ON f.CONNECTION_TYPE_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLEXIBLE_JOINT_CNT" comment="PODS.FLEXIBLE_JOINT" schema="PODS" table="FLEXIBLE_JOINT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CONNECTION_TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.FLEXIBLE_JOINT_ID
                        FROM centerline c 
                          JOIN PODS.FLEXIBLE_JOINT f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLOW_DIRECTION_RANGE" comment="PODS.FLOW_DIRECTION_RANGE" schema="PODS" table="FLOW_DIRECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.ODORANT_GRANDFATHER_LF,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.ODORANT_GRANDFATHER_LF  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.FLOW_DIRECTION_RANGE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.FLOW_DIRECTION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLOW_DIRECTION_RANGE_CNT" comment="PODS.FLOW_DIRECTION_RANGE" schema="PODS" table="FLOW_DIRECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.ODORANT_GRANDFATHER_LF  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.FLOW_DIRECTION_RANGE f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLOW_MEASUREMENT" comment="PODS.FLOW_MEASUREMENT" schema="PODS" table="FLOW_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.FLOW_MEASUREMENT,all_in_one.UNIT_OF_MEASURE_GCL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.FLOW_MEASUREMENT  
                      ,f.UNIT_OF_MEASURE_GCL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION UNIT_OF_MEASURE_LBL
                     FROM centerline c 
                          JOIN PODS.FLOW_MEASUREMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.UNIT_OF_MEASURE_GCL ref1 
                        ON f.UNIT_OF_MEASURE_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FLOW_MEASUREMENT_CNT" comment="PODS.FLOW_MEASUREMENT" schema="PODS" table="FLOW_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.FLOW_MEASUREMENT  
                      ,f.UNIT_OF_MEASURE_GCL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.FLOW_MEASUREMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FOREIGN_LINE_CROSSING" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                      AND er.event_id > 0)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.FOREIGN_DIAMETER,all_in_one.MATERIAL_CL,all_in_one.LINE_BELOW_GROUND_LF
            ,all_in_one.OWNER_CL,all_in_one.WIDTH 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION OWNER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.FOREIGN_LINE_CROSSING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.OUTSIDE_COMPANY_CL ref2 
                        ON f.OWNER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.CROSSING_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FOREIGN_LINE_CROSSING_CNT" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                     AND er.event_id > 0)
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                        FROM centerline c 
                          JOIN PODS.FOREIGN_LINE_CROSSING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_GRANDFATHER_PRESSURE" comment="PODS.GRANDFATHER_PRESSURE" schema="PODS" table="GRANDFATHER_PRESSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.VERIFIED_BY,all_in_one.DETERMINATION_DATE
            ,all_in_one.HIGH_PRESSURE_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.VERIFIED_BY  
                      ,f.DETERMINATION_DATE  
                      ,f.HIGH_PRESSURE_DATE
                     FROM centerline c 
                          JOIN PODS.GRANDFATHER_PRESSURE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_GRANDFATHER_PRESSURE_CNT" comment="PODS.GRANDFATHER_PRESSURE" schema="PODS" table="GRANDFATHER_PRESSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.VERIFIED_BY  
                      ,f.DETERMINATION_DATE  
                      ,f.HIGH_PRESSURE_DATE
                     FROM centerline c 
                          JOIN PODS.GRANDFATHER_PRESSURE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_GROUND_BED" comment="PODS.GROUND_BED" schema="PODS" table="GROUND_BED">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.DEPTH_OF_COVER,all_in_one.MATERIAL_CL
            ,all_in_one.DATE_INSTALLED,all_in_one.INSTALLATION_CL,all_in_one.POS_CABLE_GAUGE_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.DEPTH_OF_COVER  
                      ,f.MATERIAL_CL  
                      ,f.DATE_INSTALLED  
                      ,f.INSTALLATION_CL  
                      ,f.POS_CABLE_GAUGE_GCL
                      ,ref1.DESCRIPTION MATERIAL_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.GROUND_BED f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.GROUND_BED_MATERIAL_CL ref1 
                        ON f.MATERIAL_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.GROUND_BED_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_GROUND_BED_CNT" comment="PODS.GROUND_BED" schema="PODS" table="GROUND_BED">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.DEPTH_OF_COVER  
                      ,f.MATERIAL_CL  
                      ,f.DATE_INSTALLED  
                      ,f.INSTALLATION_CL  
                      ,f.POS_CABLE_GAUGE_GCL
                       FROM centerline c 
                          JOIN PODS.GROUND_BED f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_HCA_BOUNDARY" comment="PODS.HCA_BOUNDARY" schema="PODS" table="HCA_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.DETERMINATION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.HCA_BOUNDARY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.HCA_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_HCA_BOUNDARY_CNT" comment="PODS.HCA_BOUNDARY" schema="PODS" table="HCA_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.HCA_BOUNDARY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.HCA_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_HCA_CA_SEGMENT" comment="PODS.HCA_CA_SEGMENT" schema="PODS" table="HCA_CA_SEGMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.DETERMINATION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.HCA_CA_SEGMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.HCA_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_HCA_CA_SEGMENT_CNT" comment="PODS.HCA_CA_SEGMENT" schema="PODS" table="HCA_CA_SEGMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.HCA_CA_SEGMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
    <data id="PODS_HCA_IDENTIFIED_SITE" comment="PODS.HCA_IDENTIFIED_SITE" schema="PODS" table="HCA_IDENTIFIED_SITE">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
                <query>

                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,r.route_id
                    ,r.description route_id_lbl
                    ,r.type_cl route_type_cl
                    ,rt.description route_type_lbl
                    ,ln.line_id
                    ,ln.description line_id_lbl
                    ,ln.type_cl line_type_cl
                    ,lt.description line_type_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.series s
                    ON s.series_id = spb.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
                    ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.TYPE_CL
                    ,all_in_one.DESCRIPTION
                    FROM (
                    SELECT C.EVENT_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,C.ROUTE_TYPE_CL
                    ,C.ROUTE_TYPE_LBL
                    ,C.LINE_ID
                    ,C.LINE_ID_LBL
                    ,C.STATION
                    ,f.TYPE_CL
                    ,f.DESCRIPTION
                    ,ref1.DESCRIPTION TYPE_LBL
                    FROM centerline c
                    JOIN PODS.HCA_IDENTIFIED_SITE f
                    ON c.event_id = f.hca_identified_site_id
                    LEFT OUTER JOIN PODS.HCA_IDENTIFIED_SITE_TYPE_CL ref1
                    ON f.TYPE_CL = ref1.CODE
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                    AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                    AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
                    ) all_in_one WHERE {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_HCA_IDENTIFIED_SITE_CNT" comment="PODS.HCA_IDENTIFIED_SITE" schema="PODS" table="HCA_IDENTIFIED_SITE">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <query>

                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,r.route_id
                    ,r.description route_id_lbl
                    ,r.type_cl route_type_cl
                    ,rt.description route_type_lbl
                    ,ln.line_id
                    ,ln.description line_id_lbl
                    ,ln.type_cl line_type_cl
                    ,lt.description line_type_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.series s
                    ON s.series_id = spb.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (
                    SELECT C.EVENT_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,C.ROUTE_TYPE_CL
                    ,C.ROUTE_TYPE_LBL
                    ,C.LINE_ID
                    ,C.LINE_ID_LBL
                    ,C.STATION
                    ,f.TYPE_CL
                    ,f.DESCRIPTION
                    ,f.HCA_IDENTIFIED_SITE_ID
                    FROM centerline c
                    JOIN PODS.HCA_IDENTIFIED_SITE f
                    ON c.event_id = f.hca_identified_site_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                    AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                    AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
                    ) all_in_one WHERE {FILTER}

                </query>
            </dbQuery>
        </select>
    </data>

  <data id="PODS_HORIZONTAL_DIRECTIONAL_DRILL" comment="PODS.HORIZONTAL_DIRECTIONAL_DRILL" schema="PODS" table="HORIZONTAL_DIRECTIONAL_DRILL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.HORIZONTAL_DIRECTIONAL_DRILL f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_HORIZONTAL_DIRECTIONAL_DRILL_CNT" comment="PODS.HORIZONTAL_DIRECTIONAL_DRILL" schema="PODS" table="HORIZONTAL_DIRECTIONAL_DRILL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.HORIZONTAL_DIRECTIONAL_DRILL f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)                                    
          SELECT {COLUMNS_FILTER} FROM (
SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
  ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
            ,all_in_one.WELD_NUMBER,all_in_one.ABSOLUTE_ODOMETER,all_in_one.ANOMALY_TYPE_CL,all_in_one.ANOMALY_EXTENSION_CL,all_in_one.LENGTH
            ,all_in_one.WIDTH,all_in_one.AVERAGE_DEPTH,all_in_one.ORIENTATION_DEG,all_in_one.NOMINAL_WALL_THICKNESS
            ,all_in_one.DESCRIPTION
            ,all_in_one.FEATURE_DESCRIPTION,all_in_one.BPR_PIG,all_in_one.ILI_INSPECTION_ID 
            ,all_in_one.RPR_CALCULATED,all_in_one.BPR_CALCULATED,all_in_one.BPR_VARIANCE,all_in_one.RPR_VARIANCE,all_in_one.cluster_comment
            ,all_in_one.r_595_2011_repair_method,all_in_one.r_595_2011_depth_abrasion,all_in_one.r_595_2011_square_abrasion
            ,all_in_one.r_595_2011_length_pipe_repair,all_in_one.r_595_2011_comment,all_in_one.sto_112_2007_assurance_factor
            ,all_in_one.sto_112_2007_destruct_pressure,all_in_one.sto_112_2007_allow_pressure,all_in_one.sto_112_2007_performance_eval
            ,all_in_one.sto_173_2007_critical_pressure,all_in_one.sto_173_2007_danger_degree,all_in_one.sto_173_2007_safe_pressure
            ,all_in_one.sto_292_2007_danger_rank,all_in_one.sto_401_2009_fail_probability
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.BPR_PIG
                      ,f.RPR_CALCULATED
                      ,f.BPR_CALCULATED
                      ,f.BPR_VARIANCE
                      ,f.RPR_VARIANCE
                      ,f.ILI_INSPECTION_ID
                      ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                      ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                      ,calc.cluster_comment
                      ,calc.r_595_2011_repair_method
                      ,calc.r_595_2011_depth_abrasion
                      ,calc.r_595_2011_square_abrasion
                      ,calc.r_595_2011_length_pipe_repair
                      ,calc.r_595_2011_comment
                      ,calc.sto_112_2007_assurance_factor
                      ,calc.sto_112_2007_destruct_pressure
                      ,calc.sto_112_2007_allow_pressure
                      ,calc.sto_112_2007_performance_eval
                      ,calc.sto_173_2007_critical_pressure
                      ,calc.sto_173_2007_danger_degree
                      ,calc.sto_173_2007_safe_pressure
                      ,calc.sto_292_2007_danger_rank
                      ,calc.sto_401_2009_fail_probability
                     FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN  centerline c   
                            ON c.event_id = f.event_id
                          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                            ON f.ANOMALY_TYPE_CL = ref1.CODE
                          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2 
                            ON f.ANOMALY_EXTENSION_CL = ref2.CODE 
                          LEFT OUTER JOIN pods.sto_ili_data_calc calc
			    ON f.ili_data_id = calc.ili_data_id  
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}        
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA_CNT" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
  WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)                                    

SELECT count(*) CNT
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.BPR_PIG
                      ,f.RPR_CALCULATED
                      ,f.BPR_CALCULATED
                      ,f.BPR_VARIANCE
                      ,f.RPR_VARIANCE
                      ,f.ILI_INSPECTION_ID
                      ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                      ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                      ,calc.cluster_comment
                      ,calc.r_595_2011_repair_method
                      ,calc.r_595_2011_depth_abrasion
                      ,calc.r_595_2011_square_abrasion
                      ,calc.r_595_2011_length_pipe_repair
                      ,calc.r_595_2011_comment
                      ,calc.sto_112_2007_assurance_factor
                      ,calc.sto_112_2007_destruct_pressure
                      ,calc.sto_112_2007_allow_pressure
                      ,calc.sto_112_2007_performance_eval
                      ,calc.sto_173_2007_critical_pressure
                      ,calc.sto_173_2007_danger_degree
                      ,calc.sto_173_2007_safe_pressure
                      ,calc.sto_292_2007_danger_rank
                      ,calc.sto_401_2009_fail_probability
                     FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN  centerline c   
                            ON c.event_id = f.event_id
                          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                            ON f.ANOMALY_TYPE_CL = ref1.CODE
                          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2 
                            ON f.ANOMALY_EXTENSION_CL = ref2.CODE 
                          LEFT OUTER JOIN pods.sto_ili_data_calc calc
			    ON f.ili_data_id = calc.ili_data_id  
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}      
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_INSPECTION_RANGE" comment="PODS.ILI_INSPECTION_RANGE" schema="PODS" table="ILI_INSPECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
                WITH series_to_lpu AS (SELECT DISTINCT sp.series_id
                                             ,CASE sp.series_id 
                                                WHEN 0 THEN 0
                                                ELSE
                                                 CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END 
                                              END srv_district_id 
                                         FROM pods.station_point sp
                                              JOIN pods.location l
                                                ON l.location_id = sp.location_id),
                    centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,s.station_begin station_beg
                                         ,s.station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN series_to_lpu s2l
                                            ON s2l.series_id = s.series_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON s2l.srv_district_id = lpu.srv_district_id
                                   WHERE lpu.SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})      
                                     AND er.current_indicator_lf = 'Y')

          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.WELD_START_NUMBER,all_in_one.DESCRIPTION,all_in_one.ILI_INSPECTION_RANGE_ID
            ,all_in_one.WORK_ORDER_ID,all_in_one.ILI_INSPECTION_ID 
            FROM (
                SELECT f.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.WELD_START_NUMBER  
                      ,f.WELD_INCREMENT  
                      ,f.DESCRIPTION  
                      ,f.ILI_INSPECTION_RANGE_ID  
                      ,f.WORK_ORDER_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM centerline c 
                          JOIN PODS.ILI_INSPECTION_RANGE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_INSPECTION_RANGE_CNT" comment="PODS.ILI_INSPECTION_RANGE" schema="PODS" table="ILI_INSPECTION_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
                WITH series_to_lpu AS (SELECT DISTINCT sp.series_id
                                             ,CASE sp.series_id 
                                                WHEN 0 THEN 0
                                                ELSE
                                                 CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END 
                                              END srv_district_id 
                                         FROM pods.station_point sp
                                              JOIN pods.location l
                                                ON l.location_id = sp.location_id),
                    centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,s.station_begin station_beg
                                         ,s.station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN series_to_lpu s2l
                                            ON s2l.series_id = s.series_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON s2l.srv_district_id = lpu.srv_district_id
                                   WHERE lpu.SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})      
                                     AND er.current_indicator_lf = 'Y')

      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.WELD_START_NUMBER  
                      ,f.WELD_INCREMENT  
                      ,f.DESCRIPTION  
                      ,f.ILI_INSPECTION_RANGE_ID  
                      ,f.WORK_ORDER_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM centerline c 
                          JOIN PODS.ILI_INSPECTION_RANGE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_PIPE_LENGTH" comment="PODS.ILI_PIPE_LENGTH" schema="PODS" table="ILI_PIPE_LENGTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)                                    
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
            ,all_in_one.WELD_NUMBER,all_in_one.NOMINAL_WALL_THICKNESS,all_in_one.SEAM_ORIENTATION_DEG,all_in_one.START_ODOMETER
            ,all_in_one.SEQUENCE_NUMBER,all_in_one.DESCRIPTION,all_in_one.ILI_PIPE_LENGTH_ID,all_in_one.ILI_INSPECTION_ID 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.SEAM_ORIENTATION_DEG  
                      ,f.START_ODOMETER  
                      ,f.SEQUENCE_NUMBER  
                      ,f.DESCRIPTION  
                      ,f.ILI_PIPE_LENGTH_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM PODS.ILI_PIPE_LENGTH f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN centerline c
                            ON c.event_id = f.event_id 
                WHERE  f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_PIPE_LENGTH_CNT" comment="PODS.ILI_PIPE_LENGTH" schema="PODS" table="ILI_PIPE_LENGTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)    
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.SEAM_ORIENTATION_DEG  
                      ,f.START_ODOMETER  
                      ,f.SEQUENCE_NUMBER  
                      ,f.DESCRIPTION  
                      ,f.ILI_PIPE_LENGTH_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM PODS.ILI_PIPE_LENGTH f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN centerline c
                            ON c.event_id = f.event_id 
                WHERE f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_RANGE" comment="PODS.ILI_RANGE" schema="PODS" table="ILI_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.ILI_RANGE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_RANGE_CNT" comment="PODS.ILI_RANGE" schema="PODS" table="ILI_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.ILI_RANGE f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INJECTOR" comment="PODS.INJECTOR" schema="PODS" table="INJECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.INJECTOR f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.INJECTOR_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INJECTOR_CNT" comment="PODS.INJECTOR" schema="PODS" table="INJECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      FROM centerline c 
                          JOIN PODS.INJECTOR f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INTERFACE_DETECTOR" comment="PODS.INTERFACE_DETECTOR" schema="PODS" table="INTERFACE_DETECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.INTERFACE_DETECTOR f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.INTERFACE_DETECTOR_MFGR_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.INTERFACE_DETECTOR_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INTERFACE_DETECTOR_CNT" comment="PODS.INTERFACE_DETECTOR" schema="PODS" table="INTERFACE_DETECTOR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.INTERFACE_DETECTOR f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INTERNAL_COATING" comment="PODS.INTERNAL_COATING" schema="PODS" table="INTERNAL_COATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.COATING_MATERIAL_GCL,all_in_one.COATING_MANUFACTURER_CL,all_in_one.DESCRIPTION,all_in_one.PRODUCT_NAME
            ,all_in_one.DATE_APPLIED,all_in_one.TYPE_SCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.COATING_MATERIAL_GCL  
                      ,f.COATING_MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.PRODUCT_NAME  
                      ,f.DATE_APPLIED  
                      ,coalesce(f.TYPE_SCL, 'UNKNOWN')||'@'||coalesce(f.SUBTYPE_SCL, 'NONE') TYPE_SCL
                      ,ref1.DESCRIPTION COATING_MATERIAL_LBL
                      ,ref2.DESCRIPTION COATING_MANUFACTURER_LBL
                      ,ref3.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.INTERNAL_COATING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COATING_MATERIAL_GCL ref1 
                        ON f.COATING_MATERIAL_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.COATING_MANUFACTURER_GCL ref2 
                        ON f.COATING_MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref3 
                        ON f.TYPE_SCL = ref3.CODE AND f.SUBTYPE_SCL = ref3.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_INTERNAL_COATING_CNT" comment="PODS.INTERNAL_COATING" schema="PODS" table="INTERNAL_COATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.COATING_MATERIAL_GCL  
                      ,f.COATING_MANUFACTURER_CL  
                      ,f.DESCRIPTION  
                      ,f.PRODUCT_NAME  
                      ,f.DATE_APPLIED  
                      ,f.TYPE_SCL
                       FROM centerline c 
                          JOIN PODS.INTERNAL_COATING f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_JUNCTION_BOX" comment="PODS.JUNCTION_BOX" schema="PODS" table="JUNCTION_BOX">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID
            ,all_in_one.DESCRIPTION,all_in_one.NAME,all_in_one.BOX_SIZE,all_in_one.WEATHERPROOF,all_in_one.DATE_INSTALLED
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.BOX_SIZE  
                      ,f.WEATHERPROOF  
                      ,f.DATE_INSTALLED
                     FROM centerline c 
                          JOIN PODS.JUNCTION_BOX f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_JUNCTION_BOX_CNT" comment="PODS.JUNCTION_BOX" schema="PODS" table="JUNCTION_BOX">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.BOX_SIZE  
                      ,f.WEATHERPROOF  
                      ,f.DATE_INSTALLED
                     FROM centerline c 
                          JOIN PODS.JUNCTION_BOX f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LAND_USE" comment="PODS.LAND_USE" schema="PODS" table="LAND_USE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.USE_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.USE_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION USE_LBL
                     FROM centerline c 
                          JOIN PODS.LAND_USE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.LAND_USE_CL ref1 
                        ON f.USE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LAND_USE_CNT" comment="PODS.LAND_USE" schema="PODS" table="LAND_USE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.USE_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.LAND_USE f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LAUNCHER_RECEIVER" comment="PODS.LAUNCHER_RECEIVER" schema="PODS" table="LAUNCHER_RECEIVER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.NAME,all_in_one.TRAP_PRESSURE_RATING,all_in_one.DATE_INSTALLED
            ,all_in_one.OVERBORE_DIAMETER_GCL
            ,all_in_one.TRAP_VALVE_DIAMETER_GCL,all_in_one.TRAP_VALVE_TYPE_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.TRAP_PRESSURE_RATING  
                      ,f.DATE_INSTALLED  
                      ,f.OVERBORE_DIAMETER_GCL  
                      ,f.TRAP_VALVE_DIAMETER_GCL  
                      ,f.TRAP_VALVE_TYPE_GCL
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.LAUNCHER_RECEIVER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.LAUNCHER_RECEIVER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LAUNCHER_RECEIVER_CNT" comment="PODS.LAUNCHER_RECEIVER" schema="PODS" table="LAUNCHER_RECEIVER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.NAME  
                      ,f.TRAP_PRESSURE_RATING  
                      ,f.DATE_INSTALLED  
                      ,f.BRIDLE_DIAMETER_GCL  
                      ,f.KICKER_BYPASS_DIAMETER_GCL  
                      ,f.OVERBORE_DIAMETER_GCL  
                      ,f.REDUCER_TYPE_GCL  
                      ,f.TRAP_STATUS_CL  
                      ,f.TRAP_VALVE_DIAMETER_GCL  
                      ,f.TRAP_VALVE_TYPE_GCL
                      FROM centerline c 
                          JOIN PODS.LAUNCHER_RECEIVER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.LAUNCHER_RECEIVER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LEAK_HISTORY" comment="PODS.LEAK_HISTORY" schema="PODS" table="LEAK_HISTORY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.CITY,all_in_one.LEAK_DATE,all_in_one.LEAK_REPORT_DATE,all_in_one.TELEPHONIC_REPORT_DATE,all_in_one.DESCRIPTION
            ,all_in_one.PRODUCT_TYPE_SCL,all_in_one.STATE_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CITY  
                      ,f.LEAK_DATE  
                      ,f.LEAK_REPORT_DATE  
                      ,f.TELEPHONIC_REPORT_DATE  
                      ,f.DESCRIPTION  
                      ,f.LEAK_ID  
                      ,coalesce(f.PRODUCT_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.PRODUCT_SUBTYPE_SCL, 'NONE') PRODUCT_TYPE_SCL
                      ,f.STATE_GCL
                      ,ref3.DESCRIPTION PRODUCT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.LEAK_HISTORY f 
                            ON c.event_id = f.event_id 
                          LEFT OUTER JOIN PODS.PRODUCT_TYPE_SCL ref3 
                        ON f.PRODUCT_TYPE_SCL = ref3.CODE AND f.PRODUCT_SUBTYPE_SCL = ref3.SUBCODE
                WHERE f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LEAK_HISTORY_CNT" comment="PODS.LEAK_HISTORY" schema="PODS" table="LEAK_HISTORY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.CITY  
                      ,f.LEAK_DATE  
                      ,f.LEAK_REPORT_DATE  
                      ,f.TELEPHONIC_REPORT_DATE  
                      ,f.DESCRIPTION  
                      ,f.LEAK_ID  
                      ,f.PRODUCT_TYPE_SCL  
                      ,f.STATE_GCL
                     FROM centerline c 
                          JOIN PODS.LEAK_HISTORY f 
                            ON c.event_id = f.event_id 
                WHERE  f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LEGACY_LINE_BOUNDARY" comment="PODS.LEGACY_LINE_BOUNDARY" schema="PODS" table="LEGACY_LINE_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                     FROM centerline c 
                          JOIN PODS.LEGACY_LINE_BOUNDARY f 
                            ON c.event_id = f.event_id
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_LEGACY_LINE_BOUNDARY_CNT" comment="PODS.LEGACY_LINE_BOUNDARY" schema="PODS" table="LEGACY_LINE_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.LEGACY_LINE_ID
                  FROM centerline c 
                      JOIN PODS.LEGACY_LINE_BOUNDARY f 
                        ON c.event_id = f.event_id
                      JOIN PODS.LEGACY_LINE_NAME_CL ref1 
                        ON f.LEGACY_LINE_ID = ref1.LEGACY_LINE_ID
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MAINTENANCE" comment="PODS.MAINTENANCE" schema="PODS" table="MAINTENANCE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MAINT_DATE
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MAINT_DATE  
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.MAINTENANCE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MAINTENANCE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MAINTENANCE_CNT" comment="PODS.MAINTENANCE" schema="PODS" table="MAINTENANCE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MAINT_DATE  
                      ,f.MAINT_ID
                      FROM centerline c 
                          JOIN PODS.MAINTENANCE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MAINTENANCE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE f.event_id IS NOT NULL
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MAOP_RATING" comment="PODS.MAOP_RATING" schema="PODS" table="MAOP_RATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.MAOP_RATING,all_in_one.DETERMINATION_METHOD_CL,all_in_one.DESCRIPTION,all_in_one.MOP
            ,all_in_one.DETERMINATION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.MAOP_RATING  
                      ,f.DETERMINATION_METHOD_CL  
                      ,f.DESCRIPTION  
                      ,f.MOP  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION DETERMINATION_METHOD_LBL
                     FROM centerline c 
                          JOIN PODS.MAOP_RATING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MAOP_DETERMINATION_METHOD_CL ref1 
                        ON f.DETERMINATION_METHOD_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MAOP_RATING_CNT" comment="PODS.MAOP_RATING" schema="PODS" table="MAOP_RATING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.MAOP_RATING  
                      ,f.DETERMINATION_METHOD_CL  
                      ,f.DESCRIPTION  
                      ,f.MOP  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.MAOP_RATING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MAOP_DETERMINATION_METHOD_CL ref1 
                        ON f.DETERMINATION_METHOD_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_METER" comment="PODS.METER" schema="PODS" table="METER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.METER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.METER_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_METER_CNT" comment="PODS.METER" schema="PODS" table="METER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.METER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_METER_STATION" comment="PODS.METER_STATION" schema="PODS" table="METER_STATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.CLASS_CL,all_in_one.DESCRIPTION,all_in_one.STATION_NUMBER,all_in_one.STATUS_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.CLASS_CL  
                      ,f.DESCRIPTION  

                      ,f.STATION_NUMBER  
                      ,f.STATUS_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION STATUS_LBL
                      ,ref3.DESCRIPTION CLASS_LBL
                     FROM centerline c 
                          JOIN PODS.METER_STATION f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METER_STATION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.METER_STATION_STATUS_CL ref2 
                        ON f.STATUS_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.METER_STATION_CLASS_CL ref3 
                        ON f.CLASS_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_METER_STATION_CNT" comment="PODS.METER_STATION" schema="PODS" table="METER_STATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.CLASS_CL  
                      ,f.DESCRIPTION  
                      ,f.STATION_NUMBER  
                      ,f.STATUS_CL
                        FROM centerline c 
                          JOIN PODS.METER_STATION f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METER_STATION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ODORANT_MEASUREMENT" comment="PODS.ODORANT_MEASUREMENT" schema="PODS" table="ODORANT_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.MEASUREMENT,all_in_one.MEASUREMENT_STATION_NAME,all_in_one.DESCRIPTION,all_in_one.DETERMINATION_DATE
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.MEASUREMENT  
                      ,f.MEASUREMENT_STATION_NAME  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.ODORANT_MEASUREMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.ODORANT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ODORANT_MEASUREMENT_CNT" comment="PODS.ODORANT_MEASUREMENT" schema="PODS" table="ODORANT_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.MEASUREMENT  
                      ,f.MEASUREMENT_STATION_NAME  
                      ,f.DESCRIPTION  
                      ,f.DETERMINATION_DATE
                      FROM centerline c 
                          JOIN PODS.ODORANT_MEASUREMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ODORANT_RANGE" comment="PODS.ODORANT_RANGE" schema="PODS" table="ODORANT_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.ODORANT_GRANDFATHER_LF 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.ODORANT_GRANDFATHER_LF
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.ODORANT_RANGE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.ODORANT_RANGE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ODORANT_RANGE_CNT" comment="PODS.ODORANT_RANGE" schema="PODS" table="ODORANT_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.ODORANT_GRANDFATHER_LF
                      FROM centerline c 
                          JOIN PODS.ODORANT_RANGE f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_OFFSHORE_RISER" comment="PODS.OFFSHORE_RISER" schema="PODS" table="OFFSHORE_RISER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED,all_in_one.MATERIAL_GRADE_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.MATERIAL_GRADE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                      ,ref5.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.OFFSHORE_RISER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.OFFSHORE_RISER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref3 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.OFFSHORE_RISER_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE
                      LEFT OUTER JOIN PODS.OFFSHORE_RISER_MATERIAL_CL ref5 
                        ON f.MATERIAL_CL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_OFFSHORE_RISER_CNT" comment="PODS.OFFSHORE_RISER" schema="PODS" table="OFFSHORE_RISER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.MATERIAL_GRADE_CL
                          FROM centerline c 
                          JOIN PODS.OFFSHORE_RISER f 
                            ON c.event_id = f.event_id
                     WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_OWNER_OPERATOR_RANGE" comment="PODS.OWNER_OPERATOR_RANGE" schema="PODS" table="OWNER_OPERATOR_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.COMPANY_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.COMPANY_GCL
                      ,ref1.DESCRIPTION COMPANY_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.OWNER_OPERATOR_RANGE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COMPANY_GCL ref1 
                        ON f.COMPANY_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.OWNER_OPERATOR_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_OWNER_OPERATOR_RANGE_CNT" comment="PODS.OWNER_OPERATOR_RANGE" schema="PODS" table="OWNER_OPERATOR_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.COMPANY_GCL
                       FROM centerline c 
                          JOIN PODS.OWNER_OPERATOR_RANGE f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PHYSICAL_INSPECTION" comment="PODS.PHYSICAL_INSPECTION" schema="PODS" table="PHYSICAL_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.INSPECTION_TYPE_GCL,all_in_one.CLASS_CL,all_in_one.DESCRIPTION,all_in_one.PERFORMED_BY
            ,all_in_one.INSPECTION_START_DATE,all_in_one.REASON_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.INSPECTION_TYPE_GCL  
                      ,f.CLASS_CL  
                      ,f.DESCRIPTION  
                      ,f.PERFORMED_BY  
                      ,f.INSPECTION_START_DATE  
                      ,f.REASON_CL
                      ,ref1.DESCRIPTION REASON_LBL
                      ,ref2.DESCRIPTION CLASS_LBL
                      ,ref3.DESCRIPTION INSPECTION_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PHYSICAL_INSPECTION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PHYSICAL_INSPECTION_REASON_CL ref1 
                        ON f.REASON_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.PHYSICAL_INSPECTION_CLASS_CL ref2 
                        ON f.CLASS_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.INSPECTION_TYPE_GCL ref3 
                        ON f.INSPECTION_TYPE_GCL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PHYSICAL_INSPECTION_CNT" comment="PODS.PHYSICAL_INSPECTION" schema="PODS" table="PHYSICAL_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.INSPECTION_TYPE_GCL  
                      ,f.CLASS_CL  
                      ,f.DESCRIPTION  
                      ,f.PERFORMED_BY  
                      ,f.INSPECTION_START_DATE  
                      ,f.REASON_CL
                        FROM centerline c 
                          JOIN PODS.PHYSICAL_INSPECTION f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIG_SIGNAL" comment="PODS.PIG_SIGNAL" schema="PODS" table="PIG_SIGNAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PIG_SIGNAL f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIG_SIGNAL_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.PIG_SIGNAL_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIG_SIGNAL_CNT" comment="PODS.PIG_SIGNAL" schema="PODS" table="PIG_SIGNAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.PIG_SIGNAL f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_BEND" comment="PODS.PIPE_BEND" schema="PODS" table="PIPE_BEND">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.TECHNIQUE_CL,all_in_one.DATE_INSTALLED,all_in_one.FABRICATOR_NAME_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.TECHNIQUE_CL  
                      ,f.DATE_INSTALLED  
                      ,f.FABRICATOR_NAME_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION TECHNIQUE_LBL
                     FROM centerline c 
                          JOIN PODS.PIPE_BEND f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PIPE_BEND_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.PIPE_BEND_TECHNIQUE_CL ref2 
                        ON f.TECHNIQUE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_BEND_CNT" comment="PODS.PIPE_BEND" schema="PODS" table="PIPE_BEND">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.TECHNIQUE_CL  
                      ,f.DATE_INSTALLED  
                      ,f.FABRICATOR_NAME_CL
                       FROM centerline c 
                          JOIN PODS.PIPE_BEND f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PIPE_BEND_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_JOIN" comment="PODS.PIPE_JOIN" schema="PODS" table="PIPE_JOIN">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL,all_in_one.IDENTIFIER_TYPE_CL,all_in_one.JOIN_IDENTIFIER
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.IDENTIFIER_TYPE_CL  
                      ,f.JOIN_IDENTIFIER
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION IDENTIFIER_TYPE_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.PIPE_JOIN f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIPE_JOIN_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.JOIN_IDENTIFIER_TYPE_CL ref2 
                        ON f.IDENTIFIER_TYPE_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.PIPE_JOIN_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_JOIN_CNT" comment="PODS.PIPE_JOIN" schema="PODS" table="PIPE_JOIN">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.IDENTIFIER_TYPE_CL  
                      ,f.JOIN_IDENTIFIER
                        FROM centerline c 
                          JOIN PODS.PIPE_JOIN f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_LENGTH" comment="PODS.PIPE_LENGTH" schema="PODS" table="PIPE_LENGTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                         ,spb.measure
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.LENGTH_IDENTIFIER,all_in_one.DESCRIPTION,all_in_one.COIL_NUMBER,all_in_one.END_TREATMENT_CL
            ,all_in_one.HEAT_NUMBER 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END   
                      ,C.MEASURE
                      ,f.LENGTH_IDENTIFIER  
                      ,f.DESCRIPTION  
                      ,f.COIL_NUMBER  
                      ,f.END_TREATMENT_CL  
                      ,f.HEAT_NUMBER
                      ,ref1.DESCRIPTION END_TREATMENT_LBL
                     FROM centerline c 
                          JOIN PODS.PIPE_LENGTH f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.END_TREATMENT_CL ref1 
                        ON f.END_TREATMENT_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_LENGTH_CNT" comment="PODS.PIPE_LENGTH" schema="PODS" table="PIPE_LENGTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.LENGTH_IDENTIFIER  
                      ,f.DESCRIPTION  
                      ,f.COIL_NUMBER  
                      ,f.END_TREATMENT_CL  
                      ,f.HEAT_NUMBER
                      FROM centerline c 
                          JOIN PODS.PIPE_LENGTH f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_OPERATING_HISTORY" comment="PODS.PIPE_OPERATING_HISTORY" schema="PODS" table="PIPE_OPERATING_HISTORY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION,all_in_one.VERIFIED_DATE,all_in_one.MIN_OPERATING_PRESSURE,all_in_one.MAX_OPERATING_PRESSURE
            ,all_in_one.MAX_PERCENT_PRESSURE,all_in_one.CORROSION_INHIBITOR_LAST_DATE,all_in_one.CLEANING_FREQUENCY_CL,all_in_one.INTERNAL_CLEANING_PROGRAM_LF,all_in_one.SUSPECTED_FES_LF
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.VERIFIED_DATE  
                      ,f.MIN_OPERATING_PRESSURE  
                      ,f.MAX_OPERATING_PRESSURE  
                      ,f.MAX_PERCENT_PRESSURE  
                      ,f.CORROSION_INHIBITOR_LAST_DATE  
                      ,f.CLEANING_FREQUENCY_CL  
                      ,f.INTERNAL_CLEANING_PROGRAM_LF  
                      ,f.SUSPECTED_FES_LF
                      ,ref1.DESCRIPTION CLEANING_FREQUENCY_LBL
                     FROM centerline c 
                          JOIN PODS.PIPE_OPERATING_HISTORY f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CLEANING_FREQUENCY_CL ref1 
                        ON f.CLEANING_FREQUENCY_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_OPERATING_HISTORY_CNT" comment="PODS.PIPE_OPERATING_HISTORY" schema="PODS" table="PIPE_OPERATING_HISTORY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.VERIFIED_DATE  
                      ,f.MIN_OPERATING_PRESSURE  
                      ,f.MAX_OPERATING_PRESSURE  
                      ,f.MAX_PERCENT_PRESSURE  
                      ,f.CORROSION_INHIBITOR_LAST_DATE  
                      ,f.CLEANING_FREQUENCY_CL  
                      ,f.INTERNAL_CLEANING_PROGRAM_LF  
                      ,f.SUSPECTED_FES_LF
                      FROM centerline c 
                          JOIN PODS.PIPE_OPERATING_HISTORY f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_SEGMENT" comment="PODS.PIPE_SEGMENT" schema="PODS" table="PIPE_SEGMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.MANUFACTURER_CL,all_in_one.PIPE_SPECIFICATION_GCL
            ,all_in_one.PIPE_GRADE_GCL,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED,all_in_one.MATERIAL_CL,all_in_one.PIPE_MILL_LOCATION_GCL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.PIPE_SPECIFICATION_GCL  
                      ,f.PIPE_GRADE_GCL  

                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED  
                      ,f.MATERIAL_CL  
                      ,f.PIPE_MILL_LOCATION_GCL
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION PIPE_SPECIFICATION_LBL
                      ,ref3.DESCRIPTION PIPE_GRADE_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref5.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.PIPE_SEGMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIPE_SEGMENT_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.PIPE_SPECIFICATION_GCL ref2 
                        ON f.PIPE_SPECIFICATION_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.PIPE_GRADE_GCL ref3 
                        ON f.PIPE_GRADE_GCL = ref3.CODE
                      JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_SEGMENT_CNT" comment="PODS.PIPE_SEGMENT" schema="PODS" table="PIPE_SEGMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.MANUFACTURER_CL  
                      ,f.PIPE_SPECIFICATION_GCL  
                      ,f.PIPE_GRADE_GCL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED  
                      ,f.MATERIAL_CL  
                      ,f.PIPE_MILL_LOCATION_GCL
                          FROM centerline c 
                          JOIN PODS.PIPE_SEGMENT f 
                            ON c.event_id = f.event_id
                         JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_SYSTEM_BOUNDARY" comment="PODS.PIPE_SYSTEM_BOUNDARY" schema="PODS" table="PIPE_SYSTEM_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.LINE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG,all_in_one.STATION_END
            ,all_in_one.DESCRIPTION,all_in_one.PIPE_SYSTEM_ID ,all_in_one.srv_district_id
            FROM (
                  SELECT DISTINCT f.PIPE_SYSTEM_ID||';'||f.LINE_ID||';'||f.KM_BEGIN||';'||f.KM_END ID
                      ,ln.TYPE_CL LINE_TYPE_CL
                      ,lt.DESCRIPTION LINE_TYPE_LBL  
                      ,F.LINE_ID
                      ,ln.DESCRIPTION LINE_ID_LBL
                      ,f.KM_BEGIN STATION_BEG
                      ,f.KM_END STATION_END  
                      ,f.DESCRIPTION  
                      ,f.PIPE_SYSTEM_ID
                      ,ref1.DESCRIPTION PIPE_SYSTEM_ID_LBL
                      ,lpu.srv_district_id
                      ,lpu.description srv_district_lbl
                     FROM pods.pipe_system_boundary f 
                          JOIN pods.pipe_system_cl ref1 
                            ON f.pipe_system_id = ref1.pipe_system_id 
                          JOIN pods.line ln
                            ON ln.line_id = f.line_id  
                          JOIN pods.line_type_cl lt
                            ON ln.type_cl = lt.code
                          JOIN pods.route r
                            ON r.line_id = f.line_id
                          JOIN pods.series s
                            ON s.route_id = r.route_id
                          JOIN pods.station_point sp
                            ON sp.series_id = s.series_id
                          JOIN pods.location lc
                            ON sp.location_id = lc.location_id
                          JOIN pods.srv_district_gcl lpu
                            ON CASE WHEN lc.srv_district_gcl IS NULL THEN 0 ELSE lc.srv_district_gcl END = lpu.srv_district_id            
                WHERE sp.station BETWEEN f.km_begin AND f.km_end
                  AND SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})
                  AND f.LINE_ID IN ({LINE_ID_FILTER})) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_SYSTEM_BOUNDARY_CNT" comment="PODS.PIPE_SYSTEM_BOUNDARY" schema="PODS" table="PIPE_SYSTEM_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
      SELECT COUNT(*) CNT
            FROM (SELECT DISTINCT f.PIPE_SYSTEM_ID||';'||f.LINE_ID||';'||f.KM_BEGIN||';'||f.KM_END ID
                      ,ln.TYPE_CL LINE_TYPE_CL
                      ,lt.DESCRIPTION LINE_TYPE_LBL  
                      ,F.LINE_ID
                      ,ln.DESCRIPTION LINE_ID_LBL
                      ,f.KM_BEGIN STATION_BEG
                      ,f.KM_END STATION_END  
                      ,f.DESCRIPTION  
                      ,f.PIPE_SYSTEM_ID
                      ,ref1.DESCRIPTION PIPE_SYSTEM_ID_LBL
                      ,lpu.srv_district_id
                      ,lpu.description srv_district_lbl
                     FROM pods.pipe_system_boundary f 
                          JOIN pods.pipe_system_cl ref1 
                            ON f.pipe_system_id = ref1.pipe_system_id 
                          JOIN pods.line ln
                            ON ln.line_id = f.line_id  
                          JOIN pods.line_type_cl lt
                            ON ln.type_cl = lt.code
                          JOIN pods.route r
                            ON r.line_id = f.line_id
                          JOIN pods.series s
                            ON s.route_id = r.route_id
                          JOIN pods.station_point sp
                            ON sp.series_id = s.series_id
                          JOIN pods.location lc
                            ON sp.location_id = lc.location_id
                          JOIN pods.srv_district_gcl lpu
                            ON CASE WHEN lc.srv_district_gcl IS NULL THEN 0 ELSE lc.srv_district_gcl END = lpu.srv_district_id            
                WHERE sp.station BETWEEN f.km_begin AND f.km_end
                  AND SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})
                  AND f.LINE_ID IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ADJACENT_CONSTRUCTION" comment="PODS.PI_ADJACENT_CONSTRUCTION" schema="PODS" table="PI_ADJACENT_CONSTRUCTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.INSPECTION_DATE,all_in_one.MARKER_TYPE_GCL,all_in_one.PI_EVENT_ID 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.MARKER_TYPE_GCL  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_ADJACENT_CONSTRUCTION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ADJACENT_CONSTRUCTION_CNT" comment="PODS.PI_ADJACENT_CONSTRUCTION" schema="PODS" table="PI_ADJACENT_CONSTRUCTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.MARKER_TYPE_GCL  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_ADJACENT_CONSTRUCTION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ANODE_READING" comment="PODS.PI_ANODE_READING" schema="PODS" table="PI_ANODE_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE,f.PI_CP_EVENT_ID   
                      FROM centerline c 
                          JOIN PODS.PI_ANODE_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ANODE_READING_CNT" comment="PODS.PI_ANODE_READING" schema="PODS" table="PI_ANODE_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_ANODE_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_ANODE_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_BOND_READING" comment="PODS.PI_BOND_READING" schema="PODS" table="PI_BOND_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_BOND_LEAD_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_BOND_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_BOND_READING_CNT" comment="PODS.PI_BOND_READING" schema="PODS" table="PI_BOND_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_BOND_LEAD_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_BOND_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CASING_READING" comment="PODS.PI_CASING_READING" schema="PODS" table="PI_CASING_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_CASING_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_CASING_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CASING_READING_CNT" comment="PODS.PI_CASING_READING" schema="PODS" table="PI_CASING_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_CASING_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_CASING_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CIS_READING" comment="PODS.PI_CIS_READING" schema="PODS" table="PI_CIS_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.PS_ON,all_in_one.PS_OFF,all_in_one.STATIC,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.PS_ON  
                      ,f.PS_OFF  
                      ,f.STATIC  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_CIS_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CIS_READING_CNT" comment="PODS.PI_CIS_READING" schema="PODS" table="PI_CIS_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.PS_ON  
                      ,f.PS_OFF  
                      ,f.STATIC  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_CIS_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_COATING_DATA" comment="PODS.PI_COATING_DATA" schema="PODS" table="PI_COATING_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.DEFECT_TYPE_CL,all_in_one.CONDITION_CL,all_in_one.INSPECTION_DATE
            ,all_in_one.COATING_TYPE_SCL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.DEFECT_TYPE_CL  
                      ,f.CONDITION_CL  
                      ,f.INSPECTION_DATE  
                      ,coalesce(f.COATING_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.COATING_SUBTYPE_SCL, 'NONE') COATING_TYPE_SCL
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION CONDITION_LBL
                      ,ref2.DESCRIPTION DEFECT_TYPE_LBL
                      ,ref3.DESCRIPTION COATING_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_COATING_DATA f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.COATING_CONDITION_CL ref1 
                        ON f.CONDITION_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.COATING_DEFECT_TYPE_CL ref2 
                        ON f.DEFECT_TYPE_CL = ref2.CODE 
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref3 
                        ON f.COATING_TYPE_SCL = ref3.CODE AND f.COATING_SUBTYPE_SCL = ref3.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_COATING_DATA_CNT" comment="PODS.PI_COATING_DATA" schema="PODS" table="PI_COATING_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.DEFECT_TYPE_CL  
                      ,f.CONDITION_CL  
                      ,f.INSPECTION_DATE  
                      ,f.COATING_TYPE_SCL  
                      ,f.PI_EVENT_ID
                       FROM centerline c 
                          JOIN PODS.PI_COATING_DATA f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CORROSION" comment="PODS.PI_CORROSION" schema="PODS" table="PI_CORROSION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DEFECT_TYPE_CL,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DEFECT_TYPE_CL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID  
                      ,f.SURFACE_CL
                      ,ref1.DESCRIPTION DEFECT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_CORROSION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CORROSION_DEFECT_TYPE_CL ref1 
                        ON f.DEFECT_TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CORROSION_CNT" comment="PODS.PI_CORROSION" schema="PODS" table="PI_CORROSION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DEFECT_TYPE_CL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID  
                      ,f.SURFACE_CL
                      FROM centerline c 
                          JOIN PODS.PI_CORROSION f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CP_INSPECTION" comment="PODS.PI_CP_INSPECTION" schema="PODS" table="PI_CP_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT DISTINCT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.route r2
                                            ON ln.line_id = r2.line_id
                                            AND ln.type_cl = CASE r2.type_cl
                                                               WHEN 'ROUTE_TYPE_10' THEN 'LINE_TYPE_01'
                                                               WHEN 'ROUTE_TYPE_11' THEN 'LINE_TYPE_02'
                                                               WHEN 'ROUTE_TYPE_12' THEN 'LINE_TYPE_03'
                                                               WHEN 'ROUTE_TYPE_04' THEN 'LINE_TYPE_04'
                                                             END
                                          JOIN pods.route_type_cl rt
                                            ON r2.type_cl = rt.code
                                          JOIN pods.series s2
                                            ON r2.route_id = s2.route_id
                                          JOIN pods.station_point sp2
                                            ON s2.series_id = sp2.series_id
                                            AND s2.station_begin + sp2.measure/1000 BETWEEN spb.station AND spe.station 
                                          JOIN pods.location l
                                            ON l.location_id = sp2.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y'
                                     AND er.feature_id = 'PI_CP_INSPECTION')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS}) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION,all_in_one.TOOL_CL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.TOOL_CL,f.PI_EVENT_ID  
                     ,ref1.DESCRIPTION TOOL_LBL
                     FROM centerline c 
                          JOIN PODS.PI_CP_INSPECTION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CP_TOOL_CL ref1 
                        ON f.TOOL_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CP_INSPECTION_CNT" comment="PODS.PI_CP_INSPECTION" schema="PODS" table="PI_CP_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT DISTINCT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.route r2
                                            ON ln.line_id = r2.line_id
                                            AND ln.type_cl = CASE r2.type_cl
                                                               WHEN 'ROUTE_TYPE_10' THEN 'LINE_TYPE_01'
                                                               WHEN 'ROUTE_TYPE_11' THEN 'LINE_TYPE_02'
                                                               WHEN 'ROUTE_TYPE_12' THEN 'LINE_TYPE_03'
                                                               WHEN 'ROUTE_TYPE_04' THEN 'LINE_TYPE_04'
                                                             END
                                          JOIN pods.route_type_cl rt
                                            ON r2.type_cl = rt.code
                                          JOIN pods.series s2
                                            ON r2.route_id = s2.route_id
                                          JOIN pods.station_point sp2
                                            ON s2.series_id = sp2.series_id
                                            AND s2.station_begin + sp2.measure/1000 BETWEEN spb.station AND spe.station 
                                          JOIN pods.location l
                                            ON l.location_id = sp2.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y'
                                     AND er.feature_id = 'PI_CP_INSPECTION')
      SELECT COUNT(*) CNT
                FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.TOOL_CL,f.PI_EVENT_ID  
                     ,ref1.DESCRIPTION TOOL_LBL
                     FROM centerline c 
                          JOIN PODS.PI_CP_INSPECTION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CP_TOOL_CL ref1 
                        ON f.TOOL_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CP_READING" comment="PODS.PI_CP_READING" schema="PODS" table="PI_CP_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.PS_ON,all_in_one.PS_OFF
            ,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.INSPECTION_DATE
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.PS_ON  
                      ,f.PS_OFF  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                   ,f.PI_CP_READING_ID  
                      ,f.PI_CP_EVENT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_CP_READING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PI_CP_READING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CP_READING_CNT" comment="PODS.PI_CP_READING" schema="PODS" table="PI_CP_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.PS_ON  
                      ,f.PS_OFF  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_READING_ID  
                      ,f.PI_CP_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_CP_READING f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PI_CP_READING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CRACK" comment="PODS.PI_CRACK" schema="PODS" table="PI_CRACK">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.AXIAL_LENGTH,all_in_one.ORIENTATION,all_in_one.CORROSION_PRESENT_LF
            ,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AXIAL_LENGTH  
                      ,f.ORIENTATION  
                      ,f.CORROSION_PRESENT_LF  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_CRACK f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.CRACK_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_CRACK_CNT" comment="PODS.PI_CRACK" schema="PODS" table="PI_CRACK">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AXIAL_LENGTH  
                      ,f.ORIENTATION  
                      ,f.CORROSION_PRESENT_LF  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_CRACK f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_DEBRIS" comment="PODS.PI_DEBRIS" schema="PODS" table="PI_DEBRIS">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_DEBRIS f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PI_DEBRIS_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_DEBRIS_CNT" comment="PODS.PI_DEBRIS" schema="PODS" table="PI_DEBRIS">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_DEBRIS f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ENVIRONMENT" comment="PODS.PI_ENVIRONMENT" schema="PODS" table="PI_ENVIRONMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.PERFORMED_BY,all_in_one.INSPECTION_DATE,all_in_one.PIPELINE_LOCATION_CL,all_in_one.PIPELINE_TEMPERATURE
            ,all_in_one.AMBIENT_TEMPERATURE,all_in_one.STABILITY_CL,all_in_one.SURFACE_DRAINAGE_CL,all_in_one.TERRAIN_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.PERFORMED_BY  
                      ,f.INSPECTION_DATE  
                      ,f.PIPELINE_LOCATION_CL  
                      ,f.PIPELINE_TEMPERATURE  
                      ,f.AMBIENT_TEMPERATURE  
                      ,f.PI_EVENT_ID  
                      ,f.STABILITY_CL  
                      ,f.SURFACE_DRAINAGE_CL  
                      ,f.TERRAIN_CL
                      ,ref1.DESCRIPTION PIPELINE_LOCATION_LBL
                     FROM centerline c 
                          JOIN PODS.PI_ENVIRONMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIPELINE_LOCATION_CL ref1 
                        ON f.PIPELINE_LOCATION_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_ENVIRONMENT_CNT" comment="PODS.PI_ENVIRONMENT" schema="PODS" table="PI_ENVIRONMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.PERFORMED_BY  
                      ,f.INSPECTION_DATE  
                      ,f.PIPELINE_LOCATION_CL  
                      ,f.PIPELINE_TEMPERATURE  
                      ,f.AMBIENT_TEMPERATURE  
                      ,f.PI_EVENT_ID  
                      ,f.STABILITY_CL  
                      ,f.SURFACE_DRAINAGE_CL  
                      ,f.TERRAIN_CL
                      FROM centerline c 
                          JOIN PODS.PI_ENVIRONMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_EXCAVATION" comment="PODS.PI_EXCAVATION" schema="PODS" table="PI_EXCAVATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.EXCAVATION_DATE,all_in_one.EXCAVATION_CONTRACTOR,all_in_one.SITE_DESCRIPTION
            ,all_in_one.INSPECTION_DATE,all_in_one.RESPONSE_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.EXCAVATION_DATE  
                      ,f.EXCAVATION_CONTRACTOR  
                      ,f.SITE_DESCRIPTION  
                      ,f.SITE_NAME  
                      ,f.INSPECTION_DATE  
                      ,f.EXCAVATION_PROJECT_ID  
                      ,f.PI_EVENT_ID  
                      ,f.RESPONSE_CL
                     FROM centerline c 
                          JOIN PODS.PI_EXCAVATION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_EXCAVATION_CNT" comment="PODS.PI_EXCAVATION" schema="PODS" table="PI_EXCAVATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.EXCAVATION_DATE  
                      ,f.EXCAVATION_CONTRACTOR  
                      ,f.SITE_DESCRIPTION  
                      ,f.SITE_NAME  
                      ,f.INSPECTION_DATE  
                      ,f.EXCAVATION_PROJECT_ID  
                      ,f.PI_EVENT_ID  
                      ,f.RESPONSE_CL
                     FROM centerline c 
                          JOIN PODS.PI_EXCAVATION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_GIRTH_WELD" comment="PODS.PI_GIRTH_WELD" schema="PODS" table="PI_GIRTH_WELD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.WELD_THICKNESS,all_in_one.WELD_CONDITION_GCL,all_in_one.INSPECTION_DATE
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.WELD_THICKNESS  
                      ,f.WELD_CONDITION_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION WELD_CONDITION_LBL
                     FROM centerline c 
                          JOIN PODS.PI_GIRTH_WELD f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.WELD_CONDITION_GCL ref1 
                        ON f.WELD_CONDITION_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_GIRTH_WELD_CNT" comment="PODS.PI_GIRTH_WELD" schema="PODS" table="PI_GIRTH_WELD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.WELD_THICKNESS  
                      ,f.WELD_CONDITION_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_GIRTH_WELD f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_GROUND_BED_READING" comment="PODS.PI_GROUND_BED_READING" schema="PODS" table="PI_GROUND_BED_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_GROUND_BED_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_GROUND_BED_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_GROUND_BED_READING_CNT" comment="PODS.PI_GROUND_BED_READING" schema="PODS" table="PI_GROUND_BED_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID  
                      ,f.REF_GROUND_BED_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_GROUND_BED_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_IC_COUPON_READING" comment="PODS.PI_IC_COUPON_READING" schema="PODS" table="PI_IC_COUPON_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe

                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION,all_in_one.MASS_AT_INSPECTION,all_in_one.SURFACE_AREA_AT_INSPECTION,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.MASS_AT_INSPECTION  
                      ,f.SURFACE_AREA_AT_INSPECTION  
                      ,f.INSPECTION_DATE  
                      ,f.REF_COUPON_ID
                     FROM centerline c 
                          JOIN PODS.PI_IC_COUPON_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_IC_COUPON_READING_CNT" comment="PODS.PI_IC_COUPON_READING" schema="PODS" table="PI_IC_COUPON_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.MASS_AT_INSPECTION  
                      ,f.SURFACE_AREA_AT_INSPECTION  
                      ,f.INSPECTION_DATE  
                      ,f.REF_COUPON_ID
                     FROM centerline c 
                          JOIN PODS.PI_IC_COUPON_READING f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LEAK_SURVEY" comment="PODS.PI_LEAK_SURVEY" schema="PODS" table="PI_LEAK_SURVEY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.INSPECTION_DATE,all_in_one.NOMINAL_SPACING
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.NOMINAL_SPACING  
                      ,f.LS_TOOL_ID  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_LEAK_SURVEY f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.LEAK_SURVEY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LEAK_SURVEY_CNT" comment="PODS.PI_LEAK_SURVEY" schema="PODS" table="PI_LEAK_SURVEY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.NOMINAL_SPACING  
                      ,f.LS_TOOL_ID  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_LEAK_SURVEY f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LEAK_SURVEY_READING" comment="PODS.PI_LEAK_SURVEY_READING" schema="PODS" table="PI_LEAK_SURVEY_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.MEASUREMENT,all_in_one.INSPECTION_DATE,all_in_one.DETECTED_PRODUCT_CL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MEASUREMENT  
                      ,f.INSPECTION_DATE  
                      ,f.DETECTED_PRODUCT_CL  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION DETECTED_PRODUCT_LBL
                     FROM centerline c 
                          JOIN PODS.PI_LEAK_SURVEY_READING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DETECTED_PRODUCT_CL ref1 
                        ON f.DETECTED_PRODUCT_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LEAK_SURVEY_READING_CNT" comment="PODS.PI_LEAK_SURVEY_READING" schema="PODS" table="PI_LEAK_SURVEY_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MEASUREMENT  
                      ,f.INSPECTION_DATE  
                      ,f.DETECTED_PRODUCT_CL  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_LEAK_SURVEY_READING f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LONG_WELD" comment="PODS.PI_LONG_WELD" schema="PODS" table="PI_LONG_WELD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.WELD_THICKNESS,all_in_one.WELD_CONDITION_GCL,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.WELD_THICKNESS  
                      ,f.WELD_CONDITION_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION WELD_CONDITION_LBL
                     FROM centerline c 
                          JOIN PODS.PI_LONG_WELD f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.WELD_CONDITION_GCL ref1 
                        ON f.WELD_CONDITION_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_LONG_WELD_CNT" comment="PODS.PI_LONG_WELD" schema="PODS" table="PI_LONG_WELD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.WELD_THICKNESS  
                      ,f.WELD_CONDITION_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_LONG_WELD f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MARINE_GROWTH" comment="PODS.PI_MARINE_GROWTH" schema="PODS" table="PI_MARINE_GROWTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.INSPECTION_DATE,all_in_one.PERCENT_COVERAGE_CL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PERCENT_COVERAGE_CL  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION PERCENT_COVERAGE_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_MARINE_GROWTH f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PERCENT_COVERAGE_CL ref1 
                        ON f.PERCENT_COVERAGE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.MARINE_GROWTH_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MARINE_GROWTH_CNT" comment="PODS.PI_MARINE_GROWTH" schema="PODS" table="PI_MARINE_GROWTH">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PERCENT_COVERAGE_CL  
                      ,f.PI_EVENT_ID
                       FROM centerline c 
                          JOIN PODS.PI_MARINE_GROWTH f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MATERIAL_DEFECT" comment="PODS.PI_MATERIAL_DEFECT" schema="PODS" table="PI_MATERIAL_DEFECT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.MATERIAL_DEFECT_TYPE_GCL,all_in_one.ORIENTATION,all_in_one.INSPECTION_DATE
            ,all_in_one.SURFACE_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_DEFECT_TYPE_GCL  
                      ,f.ORIENTATION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID  
                      ,f.SURFACE_GCL
                      ,ref1.DESCRIPTION MATERIAL_DEFECT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_MATERIAL_DEFECT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MATERIAL_DEFECT_TYPE_GCL ref1 
                        ON f.MATERIAL_DEFECT_TYPE_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MATERIAL_DEFECT_CNT" comment="PODS.PI_MATERIAL_DEFECT" schema="PODS" table="PI_MATERIAL_DEFECT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_DEFECT_TYPE_GCL  
                      ,f.ORIENTATION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID  
                      ,f.SURFACE_GCL
                      FROM centerline c 
                          JOIN PODS.PI_MATERIAL_DEFECT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MATERIAL_DEFECT_TYPE_GCL ref1 
                        ON f.MATERIAL_DEFECT_TYPE_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MECHANICAL_DAMAGE" comment="PODS.PI_MECHANICAL_DAMAGE" schema="PODS" table="PI_MECHANICAL_DAMAGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.MECHANICAL_DEFECT_TYPE_GCL,all_in_one.ORIENTATION,all_in_one.WIDTH,all_in_one.PEAK_TO_PEAK_DEPTH
            ,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MECHANICAL_DEFECT_TYPE_GCL  
                      ,f.ORIENTATION  
                      ,f.WIDTH  
                      ,f.PEAK_TO_PEAK_DEPTH  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION MECHANICAL_DEFECT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_MECHANICAL_DAMAGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MECHANICAL_DEFECT_TYPE_GCL ref1 
                        ON f.MECHANICAL_DEFECT_TYPE_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted

          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_MECHANICAL_DAMAGE_CNT" comment="PODS.PI_MECHANICAL_DAMAGE" schema="PODS" table="PI_MECHANICAL_DAMAGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.MECHANICAL_DEFECT_TYPE_GCL  
                      ,f.ORIENTATION  
                      ,f.WIDTH  
                      ,f.PEAK_TO_PEAK_DEPTH  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_MECHANICAL_DAMAGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.MECHANICAL_DEFECT_TYPE_GCL ref1 
                        ON f.MECHANICAL_DEFECT_TYPE_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_METAL_LOSS" comment="PODS.PI_METAL_LOSS" schema="PODS" table="PI_METAL_LOSS">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.AXIAL_LENGTH,all_in_one.CIRCUM_LENGTH,all_in_one.ORIENTATION
            ,all_in_one.SURFACE_GCL,all_in_one.INSPECTION_DATE
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AXIAL_LENGTH  
                      ,f.CIRCUM_LENGTH  
                      ,f.ORIENTATION  
                      ,f.SURFACE_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION SURFACE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_METAL_LOSS f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METAL_LOSS_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      JOIN PODS.SURFACE_GCL ref2 
                        ON f.SURFACE_GCL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_METAL_LOSS_CNT" comment="PODS.PI_METAL_LOSS" schema="PODS" table="PI_METAL_LOSS">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AXIAL_LENGTH  
                      ,f.CIRCUM_LENGTH  
                      ,f.ORIENTATION  
                      ,f.SURFACE_GCL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                       FROM centerline c 
                          JOIN PODS.PI_METAL_LOSS f 
                            ON c.event_id = f.event_id
                      JOIN PODS.METAL_LOSS_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      JOIN PODS.SURFACE_GCL ref2 
                        ON f.SURFACE_GCL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_PIPELINE_MOVEMENT" comment="PODS.PI_PIPELINE_MOVEMENT" schema="PODS" table="PI_PIPELINE_MOVEMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.DISPLACEMENT_TYPE_CL,all_in_one.MAXIMUM_DISPLACEMENT 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.DISPLACEMENT_TYPE_CL  
                      ,f.MAXIMUM_DISPLACEMENT  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION DISPLACEMENT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_PIPELINE_MOVEMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.DISPLACEMENT_TYPE_CL ref1 
                        ON f.DISPLACEMENT_TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_PIPELINE_MOVEMENT_CNT" comment="PODS.PI_PIPELINE_MOVEMENT" schema="PODS" table="PI_PIPELINE_MOVEMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.DISPLACEMENT_TYPE_CL  
                      ,f.MAXIMUM_DISPLACEMENT  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_PIPELINE_MOVEMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_PIPE_CONDITION" comment="PODS.PI_PIPE_CONDITION" schema="PODS" table="PI_PIPE_CONDITION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.ACTUAL_DIAMETER,all_in_one.ACTUAL_WALL_THICKNESS,all_in_one.INSPECTION_DATE
            ,all_in_one.EXTERNAL_PIPE_CONDITION_CL,all_in_one.INTERNAL_PIPE_CONDITION_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.ACTUAL_DIAMETER  
                      ,f.ACTUAL_WALL_THICKNESS  
                      ,f.INSPECTION_DATE  
                      ,f.SITE_ID  
                      ,f.EXTERNAL_PIPE_CONDITION_CL  
                      ,f.INTERNAL_PIPE_CONDITION_CL  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_PIPE_CONDITION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_PIPE_CONDITION_CNT" comment="PODS.PI_PIPE_CONDITION" schema="PODS" table="PI_PIPE_CONDITION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.ACTUAL_DIAMETER  
                      ,f.ACTUAL_WALL_THICKNESS  
                      ,f.INSPECTION_DATE  
                      ,f.SITE_ID  
                      ,f.EXTERNAL_PIPE_CONDITION_CL  
                      ,f.INTERNAL_PIPE_CONDITION_CL  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_PIPE_CONDITION f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RECTIFIER_READING" comment="PODS.PI_RECTIFIER_READING" schema="PODS" table="PI_RECTIFIER_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION,all_in_one.PI_CP_EVENT_ID
            ,all_in_one.DESCRIPTION,all_in_one.CURRENT_READING,all_in_one.POTENTIAL_READING,all_in_one.RESISTANCE_READING,all_in_one.AC_VOLTAGE_CL
            ,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.AC_VOLTAGE_CL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID
                      ,ref1.DESCRIPTION AC_VOLTAGE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_RECTIFIER_READING f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PI_RECT_READING_AC_VOLTAGE_CL ref1 
                        ON f.AC_VOLTAGE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RECTIFIER_READING_CNT" comment="PODS.PI_RECTIFIER_READING" schema="PODS" table="PI_RECTIFIER_READING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.CURRENT_READING  
                      ,f.POTENTIAL_READING  
                      ,f.RESISTANCE_READING  
                      ,f.AC_VOLTAGE_CL  
                      ,f.INSPECTION_DATE  
                      ,f.PI_CP_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_RECTIFIER_READING f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RELIEF_VALVE" comment="PODS.PI_RELIEF_VALVE" schema="PODS" table="PI_RELIEF_VALVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.SERVICE_TYPE_CL,all_in_one.PERFORMED_BY,all_in_one.FINAL_PRESSURE_SETTING,all_in_one.INITIAL_PRESSURE_SETTING
            ,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SERVICE_TYPE_CL  
                      ,f.PERFORMED_BY  
                      ,f.FINAL_PRESSURE_SETTING  
                      ,f.INITIAL_PRESSURE_SETTING  
                      ,f.INSPECTION_DATE  
                      ,f.RELIEF_VALVE_ID  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION SERVICE_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_RELIEF_VALVE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.RELIEF_VALVE_SERVICE_TYPE_CL ref1 
                        ON f.SERVICE_TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RELIEF_VALVE_CNT" comment="PODS.PI_RELIEF_VALVE" schema="PODS" table="PI_RELIEF_VALVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SERVICE_TYPE_CL  
                      ,f.PERFORMED_BY  
                      ,f.FINAL_PRESSURE_SETTING  
                      ,f.INITIAL_PRESSURE_SETTING  
                      ,f.INSPECTION_DATE  
                      ,f.RELIEF_VALVE_ID  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_RELIEF_VALVE f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RIGHT_OF_WAY" comment="PODS.PI_RIGHT_OF_WAY" schema="PODS" table="PI_RIGHT_OF_WAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.INSPECTION_DATE  
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_RIGHT_OF_WAY f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_RIGHT_OF_WAY_CNT" comment="PODS.PI_RIGHT_OF_WAY" schema="PODS" table="PI_RIGHT_OF_WAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                     FROM centerline c 
                          JOIN PODS.PI_RIGHT_OF_WAY f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_SOIL" comment="PODS.PI_SOIL" schema="PODS" table="PI_SOIL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.TEXTURE_CL,all_in_one.COVER_THICKNESS,all_in_one.WATER_TABLE_DEPTH
            ,all_in_one.INSPECTION_DATE  
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.TEXTURE_CL  
                      ,f.COVER_THICKNESS  
                      ,f.WATER_TABLE_DEPTH  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION TEXTURE_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PI_SOIL f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.SOIL_TEXTURE_CL ref1 
                        ON f.TEXTURE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.SOIL_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_SOIL_CNT" comment="PODS.PI_SOIL" schema="PODS" table="PI_SOIL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.TEXTURE_CL  
                      ,f.COVER_THICKNESS  
                      ,f.WATER_TABLE_DEPTH  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                       FROM centerline c 
                          JOIN PODS.PI_SOIL f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_SUBSEA_INSPECTION" comment="PODS.PI_SUBSEA_INSPECTION" schema="PODS" table="PI_SUBSEA_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.SENSOR_USED_CL,all_in_one.UNIT_NUMBER,all_in_one.INSPECTION_DATE,all_in_one.INSPECTION_TYPE_GCL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SENSOR_USED_CL  
                      ,f.UNIT_NUMBER  
                      ,f.INSPECTION_DATE  
                      ,f.INSPECTION_TYPE_GCL  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION SENSOR_USED_LBL
                     FROM centerline c 
                          JOIN PODS.PI_SUBSEA_INSPECTION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PI_SUBSEA_SENSOR_USED_CL ref1 
                        ON f.SENSOR_USED_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_SUBSEA_INSPECTION_CNT" comment="PODS.PI_SUBSEA_INSPECTION" schema="PODS" table="PI_SUBSEA_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SENSOR_USED_CL  
                      ,f.UNIT_NUMBER  
                      ,f.INSPECTION_DATE  
                      ,f.INSPECTION_TYPE_GCL  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_SUBSEA_INSPECTION f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_WATER" comment="PODS.PI_WATER" schema="PODS" table="PI_WATER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.SAMPLE_LOCATION_CL,all_in_one.SAMPLE_NUMBER,all_in_one.INSPECTION_DATE 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SAMPLE_LOCATION_CL  
                      ,f.SAMPLE_NUMBER  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      ,ref1.DESCRIPTION SAMPLE_LOCATION_LBL
                     FROM centerline c 
                          JOIN PODS.PI_WATER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.SAMPLE_LOCATION_CL ref1 
                        ON f.SAMPLE_LOCATION_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PI_WATER_CNT" comment="PODS.PI_WATER" schema="PODS" table="PI_WATER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.SAMPLE_LOCATION_CL  
                      ,f.SAMPLE_NUMBER  
                      ,f.INSPECTION_DATE  
                      ,f.PI_EVENT_ID
                      FROM centerline c 
                          JOIN PODS.PI_WATER f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_POPULATED_AREA" comment="PODS.POPULATED_AREA" schema="PODS" table="POPULATED_AREA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
WITH lpu_info AS (SELECT offline_id,srv_district_id, srv_district_lbl
                         FROM (SELECT offline_id
                                     ,lpu.srv_district_id
                                     ,lpu.description srv_district_lbl
                                     ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN
                                 FROM pods.offline_event oe
                                      JOIN pods.part p
                                        ON p.shape_id = oe.shape_id
                                      JOIN pods.vertex v
                                        ON v.part_id = p.part_id
                                      JOIN pods.location l
                                        ON l.location_id = v.location_id  
                                      JOIN pods.srv_district_gcl lpu
                                        ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                  WHERE oe.current_indicator_lf = 'Y' ) d
                             WHERE rwn = 1 )                                          
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.NAME,all_in_one.OCCUPANT_COUNT,all_in_one.OCCUPANCY_CATEGORY_GCL  
            FROM (
                SELECT f.OFFLINE_ID ID
                      ,CASE WHEN lpu.SRV_DISTRICT_ID IS NULL THEN 0 ELSE lpu.SRV_DISTRICT_ID END SRV_DISTRICT_ID
                      ,CASE WHEN lpu.SRV_DISTRICT_LBL IS NULL THEN 'Неизвестно' ELSE lpu.SRV_DISTRICT_LBL END SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,f.OCCUPANCY_CATEGORY_GCL  
                      ,f.CONTACT_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION OCCUPANCY_CATEGORY_LBL
                     FROM PODS.POPULATED_AREA f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.POPULATED_AREA_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.OCCUPANCY_CATEGORY_GCL ref2 
                        ON f.OCCUPANCY_CATEGORY_GCL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_POPULATED_AREA_CNT" comment="PODS.POPULATED_AREA" schema="PODS" table="POPULATED_AREA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
WITH lpu_info AS (SELECT offline_id,srv_district_id, srv_district_lbl
                         FROM (SELECT offline_id
                                     ,lpu.srv_district_id
                                     ,lpu.description srv_district_lbl
                                     ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN
                                 FROM pods.offline_event oe
                                      JOIN pods.part p
                                        ON p.shape_id = oe.shape_id
                                      JOIN pods.vertex v
                                        ON v.part_id = p.part_id
                                      JOIN pods.location l
                                        ON l.location_id = v.location_id  
                                      JOIN pods.srv_district_gcl lpu
                                        ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                  WHERE oe.current_indicator_lf = 'Y' ) d
                             WHERE rwn = 1 )                                        
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.OFFLINE_ID ID
                      ,CASE WHEN lpu.SRV_DISTRICT_ID IS NULL THEN 0 ELSE lpu.SRV_DISTRICT_ID END SRV_DISTRICT_ID
                      ,CASE WHEN lpu.SRV_DISTRICT_LBL IS NULL THEN 'Неизвестно' ELSE lpu.SRV_DISTRICT_LBL END SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,f.OCCUPANCY_CATEGORY_GCL  
                      ,f.CONTACT_ID
                       FROM PODS.POPULATED_AREA f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRESSURE_CAP" comment="PODS.PRESSURE_CAP" schema="PODS" table="PRESSURE_CAP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.PRESSURE_CAP f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PRESSURE_CAP_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.PRESSURE_CAP_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.PRESSURE_CAP_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRESSURE_CAP_CNT" comment="PODS.PRESSURE_CAP" schema="PODS" table="PRESSURE_CAP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                         FROM centerline c 
                          JOIN PODS.PRESSURE_CAP f 
                            ON c.event_id = f.event_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRESSURE_MEASUREMENT" comment="PODS.PRESSURE_MEASUREMENT" schema="PODS" table="PRESSURE_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.PRESSURE,all_in_one.MEASUREMENT_STATION_NAME,all_in_one.DETERMINATION_DATE,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.PRESSURE  
                      ,f.MEASUREMENT_STATION_NAME  
                      ,f.DETERMINATION_DATE  
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.PRESSURE_MEASUREMENT f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRESSURE_MEASUREMENT_CNT" comment="PODS.PRESSURE_MEASUREMENT" schema="PODS" table="PRESSURE_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.PRESSURE  
                      ,f.MEASUREMENT_STATION_NAME  
                      ,f.DETERMINATION_DATE  
                      ,f.DESCRIPTION
                     FROM centerline c 
                          JOIN PODS.PRESSURE_MEASUREMENT f 
                            ON c.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRODUCT_RANGE" comment="PODS.PRODUCT_RANGE" schema="PODS" table="PRODUCT_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG,all_in_one.STATION_END,all_in_one.PRODUCT_TYPE_SCL,all_in_one.DESCRIPTION
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,coalesce(f.PRODUCT_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.PRODUCT_SUBTYPE_SCL, 'NONE') PRODUCT_TYPE_SCL
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION PRODUCT_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PRODUCT_RANGE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PRODUCT_TYPE_SCL ref1 
                        ON f.PRODUCT_TYPE_SCL = ref1.CODE
                        AND f.PRODUCT_SUBTYPE_SCL = ref1.SUBCODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PRODUCT_RANGE_CNT" comment="PODS.PRODUCT_RANGE" schema="PODS" table="PRODUCT_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.PRODUCT_TYPE_SCL  
                      ,f.DESCRIPTION
                         FROM centerline c 
                          JOIN PODS.PRODUCT_RANGE f 
                            ON c.event_id = f.event_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PROFILE" comment="PODS.PROFILE" schema="PODS" table="PROFILE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.ELEVATION,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.ELEVATION  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.PROFILE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PROFILE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PROFILE_CNT" comment="PODS.PROFILE" schema="PODS" table="PROFILE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.ELEVATION  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.PROFILE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.PROFILE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RAILROAD" comment="PODS.RAILROAD" schema="PODS" table="RAILROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                      AND er.event_id > 0)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.WIDTH,all_in_one.OPERATOR_CL,all_in_one.SCALED_GCL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.OPERATOR_CL  
                      ,f.SCALED_GCL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION OPERATOR_LBL
                      ,ref3.DESCRIPTION SCALED_LBL
                     FROM centerline c 
                          JOIN PODS.RAILROAD f 
                            ON c.event_id = f.event_id
                      JOIN PODS.RAILROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.RAILROAD_OPERATOR_CL ref2 
                        ON f.OPERATOR_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.SCALED_GCL ref3 
                        ON f.SCALED_GCL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RAILROAD_CNT" comment="PODS.RAILROAD" schema="PODS" table="RAILROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                      AND er.event_id > 0)
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.OPERATOR_CL  
                      ,f.SCALED_GCL
                        FROM centerline c 
                          JOIN PODS.RAILROAD f 
                            ON c.event_id = f.event_id
                      JOIN PODS.RAILROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RECTIFIER" comment="PODS.RECTIFIER" schema="PODS" table="RECTIFIER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
        WITH lpu_info AS (SELECT er.event_id
                                ,lpu.srv_district_id
                                ,lpu.description srv_district_lbl
                            FROM pods.event_range er
                                JOIN pods.station_point sp
                                  ON er.station_id_begin = sp.station_id
                                JOIN pods.location l
                                  ON l.location_id = sp.location_id
                                JOIN pods.srv_district_gcl lpu
                                  ON lpu.srv_district_id = l.srv_district_gcl
                          WHERE er.current_indicator_lf = 'Y' )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.DESCRIPTION,all_in_one.AMP_RATING,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT f.EVENT_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AMP_RATING  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.RECTIFIER_ID
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM PODS.RECTIFIER f 
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                      LEFT OUTER JOIN PODS.RECTIFIER_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.RECTIFIER_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RECTIFIER_CNT" comment="PODS.RECTIFIER" schema="PODS" table="RECTIFIER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
        WITH lpu_info AS (SELECT er.event_id
                                ,lpu.srv_district_id
                                ,lpu.description srv_district_lbl
                            FROM pods.event_range er
                                JOIN pods.station_point sp
                                  ON er.station_id_begin = sp.station_id
                                JOIN pods.location l
                                  ON l.location_id = sp.location_id
                                JOIN pods.srv_district_gcl lpu
                                  ON lpu.srv_district_id = l.srv_district_gcl
                          WHERE er.current_indicator_lf = 'Y' )                                       
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.EVENT_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.AMP_RATING  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.RECTIFIER_ID
                       FROM PODS.RECTIFIER f 
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RECTIFIER_ENCLOSURE" comment="PODS.RECTIFIER_ENCLOSURE" schema="PODS" table="RECTIFIER_ENCLOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED
            ,all_in_one.NEG_CABLE_GAUGE_GCL,all_in_one.POWER_BILLING_SOURCE_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.RECTIFIER_ENCLOSURE_ID  
                      ,f.NEG_CABLE_GAUGE_GCL  
                      ,f.POWER_BILLING_SOURCE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.RECTIFIER_ENCLOSURE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.RECTIFIER_ENCLOSURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.RECTIFIER_ENCLOSURE_MFGR_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RECTIFIER_ENCLOSURE_CNT" comment="PODS.RECTIFIER_ENCLOSURE" schema="PODS" table="RECTIFIER_ENCLOSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.RECTIFIER_ENCLOSURE_ID  
                      ,f.NEG_CABLE_GAUGE_GCL  
                      ,f.POWER_BILLING_SOURCE_CL
                       FROM centerline c 
                          JOIN PODS.RECTIFIER_ENCLOSURE f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_REDUCER" comment="PODS.REDUCER" schema="PODS" table="REDUCER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_WALL_THICKNESS_IN_GCL,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_IN_GCL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_IN_LBL
                     FROM centerline c 
                          JOIN PODS.REDUCER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.REDUCER_TYPE_GCL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.REDUCER_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_IN_GCL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_REDUCER_CNT" comment="PODS.REDUCER" schema="PODS" table="REDUCER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_IN_GCL  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                         FROM centerline c 
                          JOIN PODS.REDUCER f 
                            ON c.event_id = f.event_id
                      JOIN PODS.REDUCER_TYPE_GCL ref1 
                        ON f.TYPE_CL = ref1.CODE
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RIGHT_OF_WAY" comment="PODS.RIGHT_OF_WAY" schema="PODS" table="RIGHT_OF_WAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
           WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                               FROM(SELECT entity_id geographic_entity_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.geographic_entity ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1)                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.OWNER_NAME,all_in_one.DESCRIPTION,all_in_one.PARCEL_NUMBER,all_in_one.ADDRESS 
            FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.OWNER_NAME  
                      ,f.DESCRIPTION  
                      ,f.PARCEL_NUMBER  
                      ,f.ADDRESS
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM PODS.RIGHT_OF_WAY f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                          JOIN PODS.RIGHT_OF_WAY_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
          </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RIGHT_OF_WAY_CNT" comment="PODS.RIGHT_OF_WAY" schema="PODS" table="RIGHT_OF_WAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
        WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                                 FROM(SELECT entity_id geographic_entity_id
                                           ,lpu.srv_district_id
                                           ,lpu.description srv_district_lbl
                                           ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                       FROM pods.geographic_entity ge
                                            LEFT OUTER JOIN pods.part p
                                              ON p.shape_id = ge.shape_id
                                            LEFT OUTER JOIN pods.vertex v
                                              ON v.part_id = p.part_id
                                            LEFT OUTER JOIN pods.location l
                                              ON l.location_id = v.location_id  
                                            JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1)                                                
         SELECT COUNT(*) CNT
          FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.OWNER_NAME  
                      ,f.DESCRIPTION  
                      ,f.PARCEL_NUMBER  
                      ,f.ADDRESS
                      FROM PODS.RIGHT_OF_WAY f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                      JOIN PODS.RIGHT_OF_WAY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}              
          
          </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RIVER_WEIGHT" comment="PODS.RIVER_WEIGHT" schema="PODS" table="RIVER_WEIGHT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.RIVER_WEIGHT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.RIVER_WEIGHT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_RIVER_WEIGHT_CNT" comment="PODS.RIVER_WEIGHT" schema="PODS" table="RIVER_WEIGHT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED
                      FROM centerline c 
                          JOIN PODS.RIVER_WEIGHT f 
                            ON c.event_id = f.event_id
                      JOIN PODS.RIVER_WEIGHT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROAD" comment="PODS.ROAD" schema="PODS" table="ROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                      AND er.event_id > 0)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.WIDTH,all_in_one.SURFACE_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SURFACE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION SURFACE_LBL
                     FROM centerline c 
                          JOIN PODS.ROAD f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.ROAD_SURFACE_CL ref2 
                        ON f.SURFACE_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROAD_CNT" comment="PODS.ROAD" schema="PODS" table="ROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'
                                      AND er.event_id > 0)
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SURFACE_CL
                       FROM centerline c 
                          JOIN PODS.ROAD f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROUTING_NOTE" comment="PODS.ROUTING_NOTE" schema="PODS" table="ROUTING_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.SOURCE_NUMBER 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.SOURCE_NUMBER
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.ROUTING_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ROUTING_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROUTING_NOTE_CNT" comment="PODS.ROUTING_NOTE" schema="PODS" table="ROUTING_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.SOURCE_NUMBER
                      FROM centerline c 
                          JOIN PODS.ROUTING_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.ROUTING_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SCC_PIPE_SUSCEPTIBILITY" comment="PODS.SCC_PIPE_SUSCEPTIBILITY" schema="PODS" table="SCC_PIPE_SUSCEPTIBILITY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.SUSCEPTIBILITY_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.SUSCEPTIBILITY_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION SUSCEPTIBILITY_LBL
                     FROM centerline c 
                          JOIN PODS.SCC_PIPE_SUSCEPTIBILITY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SCC_PIPE_SUSCEPTIBILITY_CL ref1 
                        ON f.SUSCEPTIBILITY_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SCC_PIPE_SUSCEPTIBILITY_CNT" comment="PODS.SCC_PIPE_SUSCEPTIBILITY" schema="PODS" table="SCC_PIPE_SUSCEPTIBILITY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.SUSCEPTIBILITY_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.SCC_PIPE_SUSCEPTIBILITY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SCC_PIPE_SUSCEPTIBILITY_CL ref1 
                        ON f.SUSCEPTIBILITY_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SCC_SOIL_POTENTIAL" comment="PODS.SCC_SOIL_POTENTIAL" schema="PODS" table="SCC_SOIL_POTENTIAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.POTENTIAL_CL,all_in_one.DESCRIPTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.POTENTIAL_CL  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION POTENTIAL_LBL
                     FROM centerline c 
                          JOIN PODS.SCC_SOIL_POTENTIAL f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SCC_SOIL_POTENTIAL_CL ref1 
                        ON f.POTENTIAL_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SCC_SOIL_POTENTIAL_CNT" comment="PODS.SCC_SOIL_POTENTIAL" schema="PODS" table="SCC_SOIL_POTENTIAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.POTENTIAL_CL  
                      ,f.DESCRIPTION
                      FROM centerline c 
                          JOIN PODS.SCC_SOIL_POTENTIAL f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SCC_SOIL_POTENTIAL_CL ref1 
                        ON f.POTENTIAL_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.WIDTH,all_in_one.SOURCE_NUMBER 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400057','C1400058')
                  AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE_CNT" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400057','C1400058')
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SITE" comment="PODS.SITE" schema="PODS" table="SITE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
           WITH lpu_info AS (SELECT site_id,srv_district_id,srv_district_lbl
                               FROM(SELECT site_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.site ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.OPERATOR,all_in_one.OWNER,all_in_one.STATE_GCL
            FROM (
                SELECT DISTINCT f.SITE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.OPERATOR  
                      ,f.OWNER  
                      ,f.STATE_GCL  
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.NAME STATE_LBL
                     FROM PODS.SITE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.site_id = f.site_id 
                          JOIN PODS.SITE_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE
                          LEFT OUTER JOIN PODS.STATE_PROVINCE_GCL ref2 
                            ON f.STATE_GCL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SITE_CNT" comment="PODS.SITE" schema="PODS" table="SITE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
           WITH lpu_info AS (SELECT site_id,srv_district_id,srv_district_lbl
                               FROM(SELECT site_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.site ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                         
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.SITE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.OPERATOR  
                      ,f.OWNER  
                      ,f.STATE_GCL  
                      ,f.CONTACT_ID
                       FROM PODS.SITE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.site_id = f.site_id 
                          JOIN PODS.SITE_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SLEEVE" comment="PODS.SLEEVE" schema="PODS" table="SLEEVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION
            ,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref4.DESCRIPTION MANUFACTURER_LBL
                      ,ref5.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.SLEEVE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SLEEVE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref3 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.SLEEVE_MANUFACTURER_CL ref4 
                        ON f.MANUFACTURER_CL = ref4.CODE
                      LEFT OUTER JOIN PODS.SLEEVE_MATERIAL_CL ref5 
                        ON f.MATERIAL_CL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SLEEVE_CNT" comment="PODS.SLEEVE" schema="PODS" table="SLEEVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                          FROM centerline c 
                          JOIN PODS.SLEEVE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SLEEVE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SRV_DISTRICT_BOUNDARY" comment="PODS.SRV_DISTRICT_BOUNDARY" schema="PODS" table="SRV_DISTRICT_BOUNDARY">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT r.route_id
                    ,r.description route_id_lbl
                    ,r.type_cl route_type_cl
                    ,rt.description route_type_lbl
                    ,ln.line_id
                    ,ln.description line_id_lbl
                    ,ln.type_cl line_type_cl
                    ,lt.description line_type_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.series s
                    ON s.series_id = spb.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
                    ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
                    ,all_in_one.STATION_END,all_in_one.DESCRIPTION
                    FROM (
                    SELECT C.EVENT_ID ID
                    ,f.SRV_DISTRICT_ID
                    ,ref1.DESCRIPTION SRV_DISTRICT_LBL
                    ,C.ROUTE_TYPE_CL
                    ,C.ROUTE_TYPE_LBL
                    ,C.LINE_ID
                    ,C.LINE_ID_LBL
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,f.DESCRIPTION
                    FROM centerline c
                    JOIN PODS.SRV_DISTRICT_BOUNDARY f
                    ON c.event_id = f.event_id
                    JOIN PODS.SRV_DISTRICT_GCL ref1
                    ON f.SRV_DISTRICT_ID = ref1.SRV_DISTRICT_ID
                    WHERE CASE WHEN f.SRV_DISTRICT_ID IS NULL THEN 0 ELSE f.SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                    AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                    AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
                    ) all_in_one WHERE {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}


                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_SRV_DISTRICT_BOUNDARY_CNT" comment="PODS.SRV_DISTRICT_BOUNDARY" schema="PODS" table="SRV_DISTRICT_BOUNDARY">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <query>
                    WITH centerline AS (SELECT r.route_id
                    ,r.description route_id_lbl
                    ,r.type_cl route_type_cl
                    ,rt.description route_type_lbl
                    ,ln.line_id
                    ,ln.description line_id_lbl
                    ,ln.type_cl line_type_cl
                    ,lt.description line_type_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.series s
                    ON s.series_id = spb.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (
                    SELECT C.EVENT_ID ID
                    ,f.SRV_DISTRICT_ID
                    ,ref1.DESCRIPTION SRV_DISTRICT_LBL
                    ,C.ROUTE_TYPE_CL
                    ,C.ROUTE_TYPE_LBL
                    ,C.LINE_ID
                    ,C.LINE_ID_LBL
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,f.DESCRIPTION
                    FROM centerline c
                    JOIN PODS.SRV_DISTRICT_BOUNDARY f
                    ON c.event_id = f.event_id
                    JOIN PODS.SRV_DISTRICT_GCL ref1
                    ON f.SRV_DISTRICT_ID = ref1.SRV_DISTRICT_ID
                    WHERE CASE WHEN f.SRV_DISTRICT_ID IS NULL THEN 0 ELSE f.SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                    AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                    AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
                    ) all_in_one WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STABILIZATION" comment="PODS.STABILIZATION" schema="PODS" table="STABILIZATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.THICKNESS,all_in_one.WIDTH,all_in_one.HEIGHT
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.THICKNESS  
                      ,f.WIDTH  
                      ,f.HEIGHT  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.STABILIZATION f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.STABILIZATION_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.STABILIZATION_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STABILIZATION_CNT" comment="PODS.STABILIZATION" schema="PODS" table="STABILIZATION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.THICKNESS  
                      ,f.WIDTH  
                      ,f.HEIGHT  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.STABILIZATION f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRAIGHTENING_VANES" comment="PODS.STRAIGHTENING_VANES" schema="PODS" table="STRAIGHTENING_VANES">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.MODEL,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MODEL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                     FROM centerline c 
                          JOIN PODS.STRAIGHTENING_VANES f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.STRAIGHTENING_VANE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.STRAIGHTENING_VANE_MFGR_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.STRAIGHTENING_VANE_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRAIGHTENING_VANES_CNT" comment="PODS.STRAIGHTENING_VANES" schema="PODS" table="STRAIGHTENING_VANES">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.MODEL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                        FROM centerline c 
                          JOIN PODS.STRAIGHTENING_VANES f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRAKE" comment="PODS.STRAKE" schema="PODS" table="STRAKE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DESCRIPTION,all_in_one.HEIGHT,all_in_one.LENGTH,all_in_one.PITCH,all_in_one.MATERIAL_CL
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED,all_in_one.COATING_TYPE_SCL,all_in_one.FASTENER_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.HEIGHT  
                      ,f.LENGTH  
                      ,f.PITCH  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,coalesce(f.COATING_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.COATING_SUBTYPE_SCL, 'NONE') COATING_TYPE_SCL
                      ,f.FASTENER_CL
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION MATERIAL_LBL
                      ,ref3.DESCRIPTION COATING_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.STRAKE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.STRAKE_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.STRAKE_MATERIAL_CL ref2 
                        ON f.MATERIAL_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref3 
                        ON f.COATING_TYPE_SCL = ref3.CODE AND f.COATING_SUBTYPE_SCL = ref3.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRAKE_CNT" comment="PODS.STRAKE" schema="PODS" table="STRAKE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DESCRIPTION  
                      ,f.HEIGHT  
                      ,f.LENGTH  
                      ,f.PITCH  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.COATING_TYPE_SCL  
                      ,f.FASTENER_CL
                       FROM centerline c 
                          JOIN PODS.STRAKE f 
                            ON c.event_id = f.event_id
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.NAME,all_in_one.OCCUPANT_COUNT  
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.STRUCTURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                WHERE f.type_cl NOT IN ('STRUCT_TYPE_16','STRUCT_TYPE_17')
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE_CNT" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,f.OCCUPANCY_CATEGORY_GCL  
                      ,f.CONTACT_ID
                       FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                WHERE f.type_cl NOT IN ('STRUCT_TYPE_16','STRUCT_TYPE_17')
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SUBSEA_SLED_ASSEMBLY" comment="PODS.SUBSEA_SLED_ASSEMBLY" schema="PODS" table="SUBSEA_SLED_ASSEMBLY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH lpu_info AS (SELECT er.event_id
                                       ,lpu.srv_district_id
                                       ,lpu.description srv_district_lbl
                                   FROM pods.event_range er
                                        JOIN pods.station_point sp
                                          ON er.station_id_begin = sp.station_id
                                        JOIN pods.location l
                                          ON l.location_id = sp.location_id
                                        JOIN pods.srv_district_gcl lpu
                                          ON lpu.srv_district_id = l.srv_district_gcl
                                  WHERE er.current_indicator_lf = 'Y' )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.NOMINAL_MAINLINE_DIAMETER_GCL,all_in_one.NOMINAL_BRANCH_DIAMETER_GCL,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL 
            ,all_in_one.DATE_INSTALLED,all_in_one.DESCRIPTION 
            FROM (
                SELECT f.EVENT_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NOMINAL_MAINLINE_DIAMETER_GCL  
                      ,f.NOMINAL_BRANCH_DIAMETER_GCL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.SLED_ID  
                      ,f.DATE_INSTALLED  
                      ,f.DESCRIPTION
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION NOMINAL_MAINLINE_DIAMETER_LBL
                      ,ref4.DESCRIPTION NOMINAL_BRANCH_DIAMETER_LBL
                      ,ref5.DESCRIPTION MATERIAL_LBL
                     FROM PODS.SUBSEA_SLED_ASSEMBLY f 
                          JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                      LEFT OUTER JOIN PODS.SUBSEA_SLED_ASSEMBLY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.SUBSEA_SLED_ASSEMBLY_MFGR_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_MAINLINE_DIAMETER_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_BRANCH_DIAMETER_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.SUBSEA_SLED_ASSEMBLY_MATL_CL ref5 
                        ON f.MATERIAL_CL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SUBSEA_SLED_ASSEMBLY_CNT" comment="PODS.SUBSEA_SLED_ASSEMBLY" schema="PODS" table="SUBSEA_SLED_ASSEMBLY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH lpu_info AS (SELECT er.event_id
                                       ,lpu.srv_district_id
                                       ,lpu.description srv_district_lbl
                                   FROM pods.event_range er
                                        JOIN pods.station_point sp
                                          ON er.station_id_begin = sp.station_id
                                        JOIN pods.location l
                                          ON l.location_id = sp.location_id
                                        JOIN pods.srv_district_gcl lpu
                                          ON lpu.srv_district_id = l.srv_district_gcl
                                  WHERE er.current_indicator_lf = 'Y' )                                         
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.EVENT_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NOMINAL_MAINLINE_DIAMETER_GCL  
                      ,f.NOMINAL_BRANCH_DIAMETER_GCL  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.SLED_ID  
                      ,f.DATE_INSTALLED  
                      ,f.DESCRIPTION
                          FROM PODS.SUBSEA_SLED_ASSEMBLY f 
                          JOIN lpu_info lpu
                            ON lpu.event_id = f.event_id 
                     WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAP" comment="PODS.TAP" schema="PODS" table="TAP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.TAP f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TAP_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.TAP_MANUFACTURER_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAP_CNT" comment="PODS.TAP" schema="PODS" table="TAP">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                        FROM centerline c 
                          JOIN PODS.TAP f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TAP_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAPERED_STRESS_JOINT" comment="PODS.TAPERED_STRESS_JOINT" schema="PODS" table="TAPERED_STRESS_JOINT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED,all_in_one.COATING_TYPE_SCL,all_in_one.CONNECTION_TYPE_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,coalesce(f.COATING_TYPE_SCL, 'UNKNOWN') ||'@'|| coalesce(f.COATING_SUBTYPE_SCL, 'NONE') COATING_TYPE_SCL
                      ,f.CONNECTION_TYPE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                      ,ref4.DESCRIPTION MATERIAL_LBL
                      ,ref5.DESCRIPTION COATING_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.TAPERED_STRESS_JOINT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.TAPERED_STRESS_JOINT_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.TAPERED_STRESS_JOINT_MFGR_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.TAPERED_STRESS_JOINT_MATL_CL ref4 
                        ON f.MATERIAL_CL = ref4.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref5 
                        ON f.COATING_TYPE_SCL = ref5.CODE AND f.COATING_SUBTYPE_SCL = ref5.SUBCODE
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAPERED_STRESS_JOINT_CNT" comment="PODS.TAPERED_STRESS_JOINT" schema="PODS" table="TAPERED_STRESS_JOINT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.STRESS_JOINT_ID  
                      ,f.COATING_TYPE_SCL  
                      ,f.CONNECTION_TYPE_CL
                         FROM centerline c 
                          JOIN PODS.TAPERED_STRESS_JOINT f 
                            ON c.event_id = f.event_id
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAX_DISTRICT_BOUNDARY" comment="PODS.TAX_DISTRICT_BOUNDARY" schema="PODS" table="TAX_DISTRICT_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION  
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                     FROM centerline c 
                          JOIN PODS.TAX_DISTRICT_BOUNDARY f 
                            ON c.event_id = f.event_id
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               

        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TAX_DISTRICT_BOUNDARY_CNT" comment="PODS.TAX_DISTRICT_BOUNDARY" schema="PODS" table="TAX_DISTRICT_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                   FROM centerline c 
                        JOIN PODS.TAX_DISTRICT_BOUNDARY f 
                          ON c.event_id = f.event_id
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEE" comment="PODS.TEE" schema="PODS" table="TEE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION
            ,all_in_one.MANUFACTURER_CL,all_in_one.DATE_INSTALLED,all_in_one.NOMINAL_DIAMETER_BRANCH_GCL,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_BRANCH_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                      ,ref3.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref4.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.TEE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TEE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.TEE_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref3 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref4 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEE_CNT" comment="PODS.TEE" schema="PODS" table="TEE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.NOMINAL_DIAMETER_BRANCH_GCL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                         FROM centerline c 
                          JOIN PODS.TEE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TEE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEMPERATURE_MEASUREMENT" comment="PODS.TEMPERATURE_MEASUREMENT" schema="PODS" table="TEMPERATURE_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.DETERMINATION_DATE,all_in_one.AVERAGE_TEMPERATURE,all_in_one.MAXIMUM_TEMPERATURE,all_in_one.DESCRIPTION,all_in_one.MEASUREMENT_METHOD_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DETERMINATION_DATE  
                      ,f.AVERAGE_TEMPERATURE  
                      ,f.MAXIMUM_TEMPERATURE  
                      ,f.DESCRIPTION  
                      ,f.MEASUREMENT_METHOD_CL
                      ,ref1.DESCRIPTION MEASUREMENT_METHOD_LBL
                     FROM centerline c 
                          JOIN PODS.TEMPERATURE_MEASUREMENT f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.TEMPERATURE_MEASURE_METHOD_CL ref1 
                        ON f.MEASUREMENT_METHOD_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEMPERATURE_MEASUREMENT_CNT" comment="PODS.TEMPERATURE_MEASUREMENT" schema="PODS" table="TEMPERATURE_MEASUREMENT">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.DETERMINATION_DATE  
                      ,f.AVERAGE_TEMPERATURE  
                      ,f.MAXIMUM_TEMPERATURE  
                      ,f.DESCRIPTION  
                      ,f.MEASUREMENT_METHOD_CL
                      FROM centerline c 
                          JOIN PODS.TEMPERATURE_MEASUREMENT f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEST_LEAD" comment="PODS.TEST_LEAD" schema="PODS" table="TEST_LEAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.DATE_INSTALLED,all_in_one.STATUS_CL
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED  
                      ,f.STATUS_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.TEST_LEAD f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.TEST_LEAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEST_LEAD_CNT" comment="PODS.TEST_LEAD" schema="PODS" table="TEST_LEAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.DATE_INSTALLED  
                      ,f.STATUS_CL
                      FROM centerline c 
                          JOIN PODS.TEST_LEAD f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEST_PRESSURE" comment="PODS.TEST_PRESSURE" schema="PODS" table="TEST_PRESSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TEST_TYPE_CL,all_in_one.TEST_DATE,all_in_one.DESCRIPTION,all_in_one.REASON_CL
            ,all_in_one.REPORT_NUMBER 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TEST_TYPE_CL  
                      ,f.TEST_DATE  
                      ,f.DESCRIPTION  
                      ,f.REASON_CL  
                      ,f.REPORT_NUMBER
                      ,ref1.DESCRIPTION TEST_TYPE_LBL
                      ,ref2.DESCRIPTION REASON_LBL
                     FROM centerline c 
                          JOIN PODS.TEST_PRESSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TEST_PRESSURE_TYPE_CL ref1 
                        ON f.TEST_TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.TEST_PRESSURE_REASON_CL ref2 
                        ON f.REASON_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TEST_PRESSURE_CNT" comment="PODS.TEST_PRESSURE" schema="PODS" table="TEST_PRESSURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TEST_TYPE_CL  
                      ,f.TEST_DATE  
                      ,f.DESCRIPTION  
                      ,f.REASON_CL  
                      ,f.REPORT_NUMBER
                       FROM centerline c 
                          JOIN PODS.TEST_PRESSURE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.TEST_PRESSURE_TYPE_CL ref1 
                        ON f.TEST_TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TOWNSHIP_BOUNDARY" comment="PODS.TOWNSHIP_BOUNDARY" schema="PODS" table="TOWNSHIP_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.DESCRIPTION,all_in_one.TOWNSHIP_DIRECTION 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.TOWNSHIP_DIRECTION
                     FROM centerline c 
                          JOIN PODS.TOWNSHIP_BOUNDARY f 
                            ON c.event_id = f.event_id
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_TOWNSHIP_BOUNDARY_CNT" comment="PODS.TOWNSHIP_BOUNDARY" schema="PODS" table="TOWNSHIP_BOUNDARY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.DESCRIPTION  
                      ,f.STATE_SURVEY_CL  
                      ,f.TOWNSHIP_DIRECTION
                      FROM centerline c 
                          JOIN PODS.TOWNSHIP_BOUNDARY f 
                            ON c.event_id = f.event_id
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_UMBILICAL" comment="PODS.UMBILICAL" schema="PODS" table="UMBILICAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query> 
            WITH lpu_info AS (SELECT offline_id
                                       ,lpu.srv_district_id
                                       ,lpu.description srv_district_lbl
                                 FROM pods.offline_event oe
                                      JOIN pods.part p
                                        ON p.shape_id = oe.shape_id
                                      JOIN pods.vertex v
                                        ON v.part_id = p.part_id
                                      JOIN pods.location l
                                        ON l.location_id = v.location_id  
                                      JOIN pods.srv_district_gcl lpu
                                        ON l.srv_district_gcl = lpu.srv_district_id
                                  WHERE oe.current_indicator_lf = 'Y' )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.TYPE_CL
            ,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.LENGTH,all_in_one.DESCRIPTION,all_in_one.MATERIAL_CL,all_in_one.FUNCTION_CL
             
            FROM (
                SELECT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.LENGTH  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.FUNCTION_CL
                      ,ref1.DESCRIPTION FUNCTION_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                     FROM PODS.UMBILICAL f  
                          JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.UMBILICAL_FUNCTION_CL ref1 
                        ON f.FUNCTION_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.UMBILICAL_TYPE_CL ref2 
                        ON f.TYPE_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.UMBILICAL_MATERIAL_CL ref3 
                        ON f.MATERIAL_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_UMBILICAL_CNT" comment="PODS.UMBILICAL" schema="PODS" table="UMBILICAL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH lpu_info AS (SELECT offline_id
                                       ,lpu.srv_district_id
                                       ,lpu.description srv_district_lbl
                                 FROM pods.offline_event oe
                                      JOIN pods.part p
                                        ON p.shape_id = oe.shape_id
                                      JOIN pods.vertex v
                                        ON v.part_id = p.part_id
                                      JOIN pods.location l
                                        ON l.location_id = v.location_id  
                                      JOIN pods.srv_district_gcl lpu
                                        ON l.srv_district_gcl = lpu.srv_district_id
                                  WHERE oe.current_indicator_lf = 'Y' )                                         
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.LENGTH  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.FUNCTION_CL
                         FROM PODS.UMBILICAL f  
                          JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                    WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VALVE" comment="PODS.VALVE" schema="PODS" table="VALVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.VALVE_IDENTIFIER,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_INLET_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.NAME
            ,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL,all_in_one.MODEL,all_in_one.DATE_INSTALLED,all_in_one.FUNCTION_CL
            ,all_in_one.JOINT_TYPE_CL,all_in_one.NOMINAL_DIAMETER_OUTLET_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.VALVE_IDENTIFIER  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.DATE_INSTALLED  
                      ,f.FUNCTION_CL  
                      ,f.JOINT_TYPE_CL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                      ,ref1.DESCRIPTION NOMINAL_DIAMETER_INLET_LBL
                      ,ref2.DESCRIPTION TYPE_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.VALVE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.NOMINAL_DIAMETER_GCL ref1 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref1.CODE
                      LEFT OUTER JOIN PODS.VALVE_TYPE_GCL ref2 
                        ON f.TYPE_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.VALVE_MANUFACTURER_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VALVE_CNT" comment="PODS.VALVE" schema="PODS" table="VALVE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.VALVE_IDENTIFIER  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_INLET_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.MODEL  
                      ,f.DATE_INSTALLED  
                      ,f.FUNCTION_CL  
                      ,f.JOINT_TYPE_CL  
                      ,f.NOMINAL_DIAMETER_OUTLET_GCL
                        FROM centerline c 
                          JOIN PODS.VALVE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.NOMINAL_DIAMETER_GCL ref1 
                        ON f.NOMINAL_DIAMETER_INLET_GCL = ref1.CODE
                  WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VENT_PIPE" comment="PODS.VENT_PIPE" schema="PODS" table="VENT_PIPE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.NAME,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED,all_in_one.PIPE_MILL_LOCATION_GCL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref3.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.VENT_PIPE f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.VENT_PIPE_MANUFACTURER_CL ref1 
                        ON f.MANUFACTURER_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref2 
                        ON f.NOMINAL_DIAMETER_GCL = ref2.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref3 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref3.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VENT_PIPE_CNT" comment="PODS.VENT_PIPE" schema="PODS" table="VENT_PIPE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NAME  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED  
                      ,f.PIPE_MILL_LOCATION_GCL
                        FROM centerline c 
                          JOIN PODS.VENT_PIPE f 
                            ON c.event_id = f.event_id
                   WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VESSEL" comment="PODS.VESSEL" schema="PODS" table="VESSEL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.NOMINAL_TEMPERATURE_RATING,all_in_one.DESCRIPTION,all_in_one.MANUFACTURER_CL
            ,all_in_one.DATE_INSTALLED 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_TEMPERATURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MANUFACTURER_LBL
                     FROM centerline c 
                          JOIN PODS.VESSEL f 
                            ON c.event_id = f.event_id
                      JOIN PODS.VESSEL_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.VESSEL_MANUFACTURER_CL ref2 
                        ON f.MANUFACTURER_CL = ref2.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_VESSEL_CNT" comment="PODS.VESSEL" schema="PODS" table="VESSEL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.NOMINAL_TEMPERATURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MANUFACTURER_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.VESSEL f 
                            ON c.event_id = f.event_id
                      JOIN PODS.VESSEL_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_WATERWAY" comment="PODS.WATERWAY" schema="PODS" table="WATERWAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y'
                                     AND er.event_id > 0)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.WIDTH,all_in_one.PROTECTED_LF
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.PROTECTED_LF
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.WATERWAY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.WATERWAY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_WATERWAY_CNT" comment="PODS.WATERWAY" schema="PODS" table="WATERWAY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y'
                                     AND er.event_id > 0)
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.PROTECTED_LF
                      FROM centerline c 
                          JOIN PODS.WATERWAY f 
                            ON c.event_id = f.event_id
                      JOIN PODS.WATERWAY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_WELLHEAD_ASSEMBLY" comment="PODS.WELLHEAD_ASSEMBLY" schema="PODS" table="WELLHEAD_ASSEMBLY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.TYPE_CL,all_in_one.NOMINAL_DIAMETER_GCL,all_in_one.NOMINAL_WALL_THICKNESS_GCL,all_in_one.NOMINAL_PRESSURE_RATING,all_in_one.DESCRIPTION
            ,all_in_one.MATERIAL_CL,all_in_one.MANUFACTURER_CL 
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION MATERIAL_LBL
                      ,ref3.DESCRIPTION MANUFACTURER_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref5.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                     FROM centerline c 
                          JOIN PODS.WELLHEAD_ASSEMBLY f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.WELLHEAD_ASSEMBLY_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.WELLHEAD_ASSEMBLY_MATERIAL_CL ref2 
                        ON f.MATERIAL_CL = ref2.CODE
                      LEFT OUTER JOIN PODS.WELLHEAD_ASSEMBLY_MFGR_CL ref3 
                        ON f.MANUFACTURER_CL = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_WELLHEAD_ASSEMBLY_CNT" comment="PODS.WELLHEAD_ASSEMBLY" schema="PODS" table="WELLHEAD_ASSEMBLY">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.NOMINAL_DIAMETER_GCL  
                      ,f.NOMINAL_WALL_THICKNESS_GCL  
                      ,f.NOMINAL_PRESSURE_RATING  
                      ,f.DESCRIPTION  
                      ,f.MATERIAL_CL  
                      ,f.MANUFACTURER_CL
                          FROM centerline c 
                          JOIN PODS.WELLHEAD_ASSEMBLY f 
                            ON c.event_id = f.event_id
                     WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_INSPECTION" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
                WITH series_to_lpu AS (SELECT DISTINCT sp.series_id
                                             ,CASE sp.series_id 
                                                WHEN 0 THEN 0
                                                ELSE
                                                 CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END 
                                              END srv_district_id 
                                         FROM pods.station_point sp
                                              JOIN pods.location l
                                                ON l.location_id = sp.location_id),
                    centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,s.station_begin station_beg
                                         ,s.station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN series_to_lpu s2l
                                            ON s2l.series_id = s.series_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON s2l.srv_district_id = lpu.srv_district_id
                                   WHERE lpu.SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})      
                                     AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
               ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_LBL,all_in_one.LINE_ID_LBL,all_in_one.ROUTE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.TOOL_VENDOR_CL,all_in_one.BEGIN_DATE,all_in_one.SENSOR_GCL,all_in_one.TOOL_TYPE_CL,all_in_one.MODEL,all_in_one.sto_292_2007_damage_mechanical
            ,all_in_one.sto_292_2007_value_weld,all_in_one.sto_292_2007_damage_crack,all_in_one.sto_292_2007_damage_corrosion,all_in_one.sto_292_2007_damage_dent
            ,all_in_one.sto_292_2007_value_pipe,all_in_one.sto_292_2007_damage_duty_var,all_in_one.sto_292_2007_bad_pipe_count,all_in_one.sto_292_2007_value_condition
            ,all_in_one.sto_401_2003_op_rep_pipe_count,all_in_one.sto_401_2003_time_limit_expl,all_in_one.sto_401_2003_mean_time_fail,all_in_one.priority_cond
            ,all_in_one.priority_time_exp,all_in_one.priority_probab,all_in_one.priority_time_fai,all_in_one.priority_summary,all_in_one.sto_095_2007_next_insp_scc
            ,all_in_one.sto_095_2007_next_insp,all_in_one.sto_095_2007_next_comp_insp
            FROM (
                SELECT f.ILI_INSPECTION_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. '
                            ELSE C.ROUTE_TYPE_LBL
                       END ROUTE_TYPE_LBL
                      ,CASE WHEN C.line_id = 0 THEN r.description 
                            ELSE C.LINE_ID_LBL
                       END LINE_ID_LBL
                      ,C.ROUTE_ID
                      ,C.ROUTE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END  
                      ,f.TOOL_VENDOR_CL
                      ,f.SENSOR_GCL
                      ,f.TOOL_TYPE_CL
                      ,f.BEGIN_DATE
                      ,f.MODEL
                      ,calc.sto_292_2007_damage_mechanical
                      ,calc.sto_292_2007_value_weld
                      ,calc.sto_292_2007_damage_crack
                      ,calc.sto_292_2007_damage_corrosion
                      ,calc.sto_292_2007_damage_dent
                      ,calc.sto_292_2007_value_pipe
                      ,calc.sto_292_2007_damage_duty_var
                      ,calc.sto_292_2007_bad_pipe_count
                      ,calc.sto_292_2007_value_condition
                      ,calc.sto_401_2003_op_rep_pipe_count
                      ,calc.sto_401_2003_time_limit_expl
                      ,calc.sto_401_2003_mean_time_fail
                      ,calc.priority_cond
                      ,calc.priority_time_exp
                      ,calc.priority_probab
                      ,calc.priority_time_fai
                      ,calc.priority_summary
                      ,calc.sto_095_2007_next_insp_scc
                      ,calc.sto_095_2007_next_insp
                      ,calc.sto_095_2007_next_comp_insp
                      ,ref1.description TOOL_TYPE_LBL
                      ,ref2.description SENSOR_LBL
                      ,ref3.description TOOL_VENDOR_LBL
                 FROM centerline c
                      JOIN pods.ili_inspection_range r
                        ON c.event_id = r.event_id 
                      JOIN pods.ili_inspection f
                        ON r.ili_inspection_id = f.ili_inspection_id
                      LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                        on f.ili_inspection_id = calc.ili_inspection_id and calc.type_cl like 'Оценка состояния по линейному event-объекту'
                      LEFT OUTER JOIN pods.ili_tool_type_cl ref1
                        ON f.tool_type_cl = ref1.code 
                      LEFT OUTER JOIN pods.sensor_gcl ref2
                        ON f.sensor_gcl = ref2.code 
                      LEFT OUTER JOIN pods.ili_tool_vendor_cl ref3
                        ON f.tool_vendor_cl = ref3.code 
                WHERE ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN (SELECT line_id FROM pods.line lz WHERE lz.line_id IN  ({LINE_ID_FILTER}))
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
          
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_INSPECTION_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
                WITH series_to_lpu AS (SELECT DISTINCT sp.series_id
                                             ,CASE sp.series_id 
                                                WHEN 0 THEN 0
                                                ELSE
                                                 CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END 
                                              END srv_district_id 
                                         FROM pods.station_point sp
                                              JOIN pods.location l
                                                ON l.location_id = sp.location_id),
                    centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,s.station_begin station_beg
                                         ,s.station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN series_to_lpu s2l
                                            ON s2l.series_id = s.series_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON s2l.srv_district_id = lpu.srv_district_id
                                   WHERE lpu.SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})      
                                     AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT
            FROM (
                SELECT f.ILI_INSPECTION_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. '
                            ELSE C.ROUTE_TYPE_LBL
                       END ROUTE_TYPE_LBL
                      ,CASE WHEN C.line_id = 0 THEN r.description 
                            ELSE C.LINE_ID_LBL
                       END LINE_ID_LBL
                      ,C.ROUTE_ID
                      ,C.ROUTE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END  
                      ,f.TOOL_VENDOR_CL
                      ,f.SENSOR_GCL
                      ,f.TOOL_TYPE_CL
                      ,f.BEGIN_DATE
                      ,f.MODEL
                      ,calc.sto_292_2007_damage_mechanical
                      ,calc.sto_292_2007_value_weld
                      ,calc.sto_292_2007_damage_crack
                      ,calc.sto_292_2007_damage_corrosion
                      ,calc.sto_292_2007_damage_dent
                      ,calc.sto_292_2007_value_pipe
                      ,calc.sto_292_2007_damage_duty_var
                      ,calc.sto_292_2007_bad_pipe_count
                      ,calc.sto_292_2007_value_condition
                      ,calc.sto_401_2003_op_rep_pipe_count
                      ,calc.sto_401_2003_time_limit_expl
                      ,calc.sto_401_2003_mean_time_fail
                      ,calc.priority_cond
                      ,calc.priority_time_exp
                      ,calc.priority_probab
                      ,calc.priority_time_fai
                      ,calc.priority_summary
                      ,calc.sto_095_2007_next_insp_scc
                      ,calc.sto_095_2007_next_insp
                      ,calc.sto_095_2007_next_comp_insp
                      ,ref1.description TOOL_TYPE_LBL
                      ,ref2.description SENSOR_LBL
                      ,ref3.description TOOL_VENDOR_LBL
                 FROM centerline c
                      JOIN pods.ili_inspection_range r
                        ON c.event_id = r.event_id 
                      JOIN pods.ili_inspection f
                        ON r.ili_inspection_id = f.ili_inspection_id
                      LEFT OUTER JOIN pods.sto_ili_inspection_calc calc
                          ON f.ili_inspection_id = calc.ili_inspection_id and calc.type_cl like 'Оценка состояния по линейному event-объекту'
                      LEFT OUTER JOIN pods.ili_tool_type_cl ref1
                        ON f.tool_type_cl = ref1.code 
                      LEFT OUTER JOIN pods.sensor_gcl ref2
                        ON f.sensor_gcl = ref2.code 
                      LEFT OUTER JOIN pods.ili_tool_vendor_cl ref3
                        ON f.tool_vendor_cl = ref3.code 
                WHERE ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN (SELECT line_id FROM pods.line lz WHERE lz.line_id IN  ({LINE_ID_FILTER}))
          ) all_in_one WHERE {FILTER}                                                
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROUTE" comment="PODS.ROUTE" schema="PODS" table="ROUTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH lpus 
  AS (SELECT DISTINCT sp.series_id
            ,lpu.srv_district_id 
            ,lpu.description  srv_district_lbl         
        FROM pods.srv_district_gcl lpu
             JOIN pods.location l
               ON l.srv_district_gcl = lpu.srv_district_id
             JOIN pods.station_point sp
               ON sp.location_id = l.location_id)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS}) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG,all_in_one.DESCRIPTION
            ,all_in_one.STATION_END,all_in_one.OPERATING_STATUS_GCL,all_in_one.TYPE_LBL 
            FROM (
SELECT r.route_id ID
      ,lpus.SRV_DISTRICT_ID
      ,lpus.SRV_DISTRICT_LBL
      ,r.type_cl ROUTE_TYPE_CL
      ,rt.description ROUTE_TYPE_LBL
      ,r.line_id LINE_ID
      ,r.description DESCRIPTION
      ,ln.description LINE_ID_LBL 
      ,s.station_begin STATION_BEG
      ,s.station_end STATION_END     
      ,r.operating_status_gcl
      ,ref1.description operating_status_lbl 
      ,rt.description TYPE_LBL
  FROM pods.route r
       JOIN pods.route_type_cl rt
         ON r.type_cl = rt.code
       JOIN pods.line ln
         ON r.line_id = ln.line_id
       JOIN pods.series s
         ON r.route_id = s.route_id  
       JOIN lpus
         ON lpus.series_id = s.series_id  
       JOIN pods.operating_status_gcl ref1
         ON r.operating_status_gcl = ref1.code   
WHERE r.current_indicator_lf = 'Y'
  AND r.type_cl  IN ({ROUTE_TYPE_FILTER}) 
  AND r.line_id  IN ({LINE_ID_FILTER})
  AND SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})
) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}           
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROUTE_CNT" comment="PODS.ROUTE" schema="PODS" table="ROUTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
          WITH lpus
          AS (SELECT DISTINCT sp.series_id
          ,lpu.srv_district_id
          ,lpu.description  srv_district_lbl
          FROM pods.srv_district_gcl lpu
          JOIN pods.location l
          ON l.srv_district_gcl = lpu.srv_district_id
          JOIN pods.station_point sp
          ON sp.location_id = l.location_id)
          SELECT COUNT(*) CNT
          FROM (
          SELECT r.route_id ID
          ,lpus.SRV_DISTRICT_ID
          ,lpus.SRV_DISTRICT_LBL
          ,r.type_cl ROUTE_TYPE_CL
          ,rt.description ROUTE_TYPE_LBL
          ,r.description DESCRIPTION 
          ,r.line_id LINE_ID
          ,ln.description LINE_ID_LBL
          ,s.station_begin STATION_BEG
          ,s.station_end STATION_END
          ,r.operating_status_gcl
          ,ref1.description operating_status_lbl
          FROM pods.route r
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON r.line_id = ln.line_id
          JOIN pods.series s
          ON r.route_id = s.route_id
          JOIN lpus
          ON lpus.series_id = s.series_id
          JOIN pods.operating_status_gcl ref1
          ON r.operating_status_gcl = ref1.code
          WHERE r.current_indicator_lf = 'Y'
  AND r.type_cl  IN ({ROUTE_TYPE_FILTER}) 
  AND r.line_id  IN ({LINE_ID_FILTER})
  AND SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})
) all_in_one WHERE {FILTER}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SRV_DISTRICT_GCL" comment="PODS.SRV_DISTRICT_GCL" schema="PODS" table="SRV_DISTRICT_GCL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS}) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.SRV_DISTRICT_LBL 
            FROM ( 
SELECT SRV_DISTRICT_ID ID
      ,SRV_DISTRICT_ID
      ,DESCRIPTION SRV_DISTRICT_LBL
  FROM  pods.srv_district_gcl lpu
 WHERE  SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})  
) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}           
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SRV_DISTRICT_GCL_CNT" comment="PODS.SRV_DISTRICT_GCL" schema="PODS" table="SRV_DISTRICT_GCL">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
SELECT COUNT(*) CNT FROM (
SELECT SRV_DISTRICT_ID ID
      ,SRV_DISTRICT_ID
      ,description SRV_DISTRICT_LBL
  FROM  pods.srv_district_gcl lpu
 WHERE  SRV_DISTRICT_ID IN ({LPU_ACCESS_FILTER})  
) all_in_one WHERE {FILTER}           
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA_FEATURE" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)     
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
            ,all_in_one.WELD_NUMBER,all_in_one.ABSOLUTE_ODOMETER,all_in_one.ANOMALY_TYPE_CL,all_in_one.ANOMALY_EXTENSION_CL,all_in_one.LENGTH
            ,all_in_one.WIDTH,all_in_one.AVERAGE_DEPTH,all_in_one.ORIENTATION_DEG,all_in_one.NOMINAL_WALL_THICKNESS
            ,all_in_one.DESCRIPTION
            ,all_in_one.FEATURE_DESCRIPTION,all_in_one.ILI_INSPECTION_ID
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.CALIBRATED_MEASURE  
                      ,f.OVALITY  
                      ,f.SEAM_ORIENTATION  
                      ,f.MILEPOST  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.DATE_COLLECTED  
                      ,f.US_WELD_NUMBER  
                      ,f.ILI_DATA_ID  
                      ,f.ILI_INSPECTION_ID
                      ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                      ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                      FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                           LEFT OUTER JOIN  centerline c   
                             ON c.event_id = f.event_id
                           LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                             ON f.ANOMALY_TYPE_CL = ref1.CODE
                           LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2 
                             ON f.ANOMALY_EXTENSION_CL = ref2.CODE 
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND ref1.category_cl = 2
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA_FEATURE_CNT" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)                                    
  
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.CALIBRATED_MEASURE  
                      ,f.OVALITY  
                      ,f.SEAM_ORIENTATION  
                      ,f.MILEPOST  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.DATE_COLLECTED  
                      ,f.US_WELD_NUMBER  
                      ,f.ILI_DATA_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN  centerline c   
                            ON c.event_id = f.event_id
                          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                            ON f.ANOMALY_TYPE_CL = ref1.CODE
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND ref1.category_cl = 2
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}              
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA_JUNCTION" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
            ,all_in_one.WELD_NUMBER,all_in_one.ABSOLUTE_ODOMETER,all_in_one.ANOMALY_TYPE_CL,all_in_one.ANOMALY_EXTENSION_CL,all_in_one.LENGTH
            ,all_in_one.WIDTH,all_in_one.AVERAGE_DEPTH,all_in_one.ORIENTATION_DEG,all_in_one.NOMINAL_WALL_THICKNESS
            ,all_in_one.DESCRIPTION
            ,all_in_one.FEATURE_DESCRIPTION,all_in_one.ILI_INSPECTION_ID
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.CALIBRATED_MEASURE  
                      ,f.OVALITY  
                      ,f.SEAM_ORIENTATION  
                      ,f.MILEPOST  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.DATE_COLLECTED  
                      ,f.US_WELD_NUMBER  
                      ,f.ILI_DATA_ID  
                      ,f.ILI_INSPECTION_ID
                      ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                      ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                     FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN  centerline c   
                            ON c.event_id = f.event_id
                          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                            ON f.ANOMALY_TYPE_CL = ref1.CODE
                          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2 
                            ON f.ANOMALY_EXTENSION_CL = ref2.CODE 
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND f.anomaly_type_cl = 5001
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_DATA_JUNCTION_CNT" comment="PODS.ILI_DATA" schema="PODS" table="ILI_DATA">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.ILI_DATA_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,info.ILI_INSPECTION_LBL
                      ,C.STATION  
                      ,f.WELD_NUMBER  
                      ,f.ABSOLUTE_ODOMETER  
                      ,f.ANOMALY_TYPE_CL  
                      ,f.ANOMALY_EXTENSION_CL  
                      ,f.LENGTH  
                      ,f.WIDTH  
                      ,f.AVERAGE_DEPTH  
                      ,f.ORIENTATION_DEG  
                      ,f.MEASURED_WALL_THICKNESS  
                      ,f.NOMINAL_WALL_THICKNESS  
                      ,f.CALIBRATED_MEASURE  
                      ,f.OVALITY  
                      ,f.SEAM_ORIENTATION  
                      ,f.MILEPOST  
                      ,f.DESCRIPTION  
                      ,f.FEATURE_DESCRIPTION  
                      ,f.DATE_COLLECTED  
                      ,f.US_WELD_NUMBER  
                      ,f.ILI_DATA_ID  
                      ,f.ILI_INSPECTION_ID
                     FROM PODS.ILI_DATA f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                          LEFT OUTER JOIN  centerline c   
                            ON c.event_id = f.event_id
                          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1 
                            ON f.ANOMALY_TYPE_CL = ref1.CODE
                WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                  AND f.anomaly_type_cl = 5001
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}              
          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STATUS_RANGE" comment="PODS.STATUS_RANGE" schema="PODS" table="STATUS_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION_BEG
            ,all_in_one.STATION_END,all_in_one.OPERATING_STATUS_GCL,all_in_one.DESCRIPTION 
            FROM (
               SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.OPERATING_STATUS_GCL  
                      ,f.DESCRIPTION  
                      ,ref1.DESCRIPTION OPERATING_STATUS_LBL
                     FROM centerline c 
                          JOIN PODS.STATUS_RANGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.OPERATING_STATUS_GCL ref1 
                        ON f.OPERATING_STATUS_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STATUS_RANGE_CNT" comment="PODS.STATUS_RANGE" schema="PODS" table="STATUS_RANGE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                               SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION_BEG
                      ,C.STATION_END    
                      ,f.OPERATING_STATUS_GCL  
                      ,f.DESCRIPTION  
                      ,ref1.DESCRIPTION OPERATING_STATUS_LBL
                     FROM centerline c 
                          JOIN PODS.STATUS_RANGE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.OPERATING_STATUS_GCL ref1 
                        ON f.OPERATING_STATUS_GCL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_PIPE_SYSTEM_CL" comment="PODS.PIPE_SYSTEM_CL" schema="PODS" table="PIPE_SYSTEM_CL">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
                <query>
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
                    ,all_in_one.ID,all_in_one.DESCRIPTION
                    FROM (
                    SELECT f.pipe_system_id ID
                    ,F.DESCRIPTION
                    FROM pods.pipe_system_cl f
                    WHERE (f.pipe_system_id = 0 AND 0 IN ({LPU_ACCESS_FILTER}))
                    OR (NOT EXISTS (SELECT 1 FROM pods.pipe_system_boundary psb WHERE f.pipe_system_id = psb.pipe_system_id)
                    AND 0 IN ({LPU_ACCESS_FILTER}) )
                    OR EXISTS (SELECT 1
                    FROM pods.pipe_system_boundary psb
                    JOIN pods.line ln
                    ON ln.line_id = psb.line_id
                    JOIN pods.route r
                    ON r.line_id = ln.line_id
                    JOIN pods.series s
                    ON s.route_id = r.route_id
                    JOIN pods.station_point sp
                    ON sp.series_id = s.series_id
                    JOIN pods.location lc
                    ON sp.location_id = lc.location_id
                    WHERE psb.pipe_system_id = f.pipe_system_id
                    AND psb.title_event_indicator_lf = 'Y'
                    AND sp.station BETWEEN psb.km_begin AND psb.km_end
                    AND sp.type_cl IN ('ST_POINT_TYPE_01','ST_POINT_TYPE_02','ST_POINT_TYPE_03')
                    AND CASE WHEN ln.LINE_ID IS NULL THEN 0 ELSE ln.LINE_ID END  IN ({LINE_ID_FILTER})
                    AND CASE WHEN lc.srv_district_gcl IS NULL THEN 0 ELSE lc.srv_district_gcl END IN ({LPU_ACCESS_FILTER}))
                    ) all_in_one WHERE {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_PIPE_SYSTEM_CL_CNT" comment="PODS.PIPE_SYSTEM_CL" schema="PODS" table="PIPE_SYSTEM_CL">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    SELECT COUNT(*) CNT
                    FROM (SELECT f.pipe_system_id ID
                    ,F.DESCRIPTION
                    FROM pods.pipe_system_cl f
                    WHERE (f.pipe_system_id = 0 AND 0 IN ({LPU_ACCESS_FILTER}))
                    OR (NOT EXISTS (SELECT 1 FROM pods.pipe_system_boundary psb WHERE f.pipe_system_id = psb.pipe_system_id)
                    AND 0 IN ({LPU_ACCESS_FILTER}) )
                    OR EXISTS (SELECT 1
                    FROM pods.pipe_system_boundary psb
                    JOIN pods.line ln
                    ON ln.line_id = psb.line_id
                    JOIN pods.route r
                    ON r.line_id = ln.line_id
                    JOIN pods.series s
                    ON s.route_id = r.route_id
                    JOIN pods.station_point sp
                    ON sp.series_id = s.series_id
                    JOIN pods.location lc
                    ON sp.location_id = lc.location_id
                    WHERE psb.pipe_system_id = f.pipe_system_id
                    AND psb.title_event_indicator_lf = 'Y'
                    AND sp.station BETWEEN psb.km_begin AND psb.km_end
                    AND sp.type_cl IN ('ST_POINT_TYPE_01','ST_POINT_TYPE_02','ST_POINT_TYPE_03')
                    AND CASE WHEN ln.LINE_ID IS NULL THEN 0 ELSE ln.LINE_ID END  IN ({LINE_ID_FILTER})
                    AND CASE WHEN lc.srv_district_gcl IS NULL THEN 0 ELSE lc.srv_district_gcl END IN ({LPU_ACCESS_FILTER}))) all_in_one
                    WHERE {FILTER}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_CP_FOREIGN_LINE_CROSSING" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="NULL"/>
        <var name="LINE_ID_FILTER" default="NULL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
        WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                               FROM(SELECT entity_id geographic_entity_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.geographic_entity ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.DESCRIPTION
            FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION OWNER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                     FROM PODS.FOREIGN_LINE_CROSSING f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                          JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE 
                          LEFT OUTER JOIN PODS.OUTSIDE_COMPANY_CL ref2 
                            ON f.OWNER_CL = ref2.CODE
                          LEFT OUTER JOIN PODS.CROSSING_MATERIAL_CL ref3 
                           ON f.MATERIAL_CL = ref3.CODE 
                WHERE f.type_cl IN ('FL_CROSS_TYPE_11','FL_CROSS_TYPE_12')
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_CP_FOREIGN_LINE_CROSSING_CNT" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="NULL"/>
        <var name="LINE_ID_FILTER" default="NULL"/>
        <query>
            WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                               FROM(SELECT entity_id geographic_entity_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.geographic_entity ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                                                     
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                     FROM PODS.FOREIGN_LINE_CROSSING f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                      JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE f.type_cl IN ('FL_CROSS_TYPE_11','FL_CROSS_TYPE_12')
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_CLUSTER" comment="PODS.ILI_CLUSTER" schema="PODS" table="ILI_CLUSTER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)  
SELECT {COLUMNS_FILTER} FROM (
  SELECT ROW_NUMBER ()
                  OVER (ORDER BY {ORDER_COLUMNS}) RWN,
all_in_one.ID,
                all_in_one.SRV_DISTRICT_ID,
                all_in_one.STATION,
                all_in_one.DESCRIPTION,                              
                all_in_one.CREATE_DATE,                              
                all_in_one.AVG_BPR_CALCULATED,                       
                all_in_one.AVG_BPR_PIG,                              
                all_in_one.AVG_BPR_VARIANCE,                         
                all_in_one.AVG_DEPTH,                                
                all_in_one.AVG_LENGTH,                               
                all_in_one.AVG_MAX_DIAMETER,                         
                all_in_one.AVG_MIN_DIAMETER,                        
                all_in_one.AVG_ORIENTATION,                          
                all_in_one.AVG_RPR_CALCULATED,                       
                all_in_one.AVG_RPR_PIG,                              
                all_in_one.AVG_RPR_VARIANCE,                         
                all_in_one.AVG_WIDTH,                                
                all_in_one.R85_BURST_PRESSURE,                       
                all_in_one.EFFECTIVE_LENGTH,                         
                all_in_one.EFFECTIVE_WIDTH,                          
                all_in_one.EFFECTIVE_AREA,                           
                all_in_one.SAFETY_FACTOR,                            
                all_in_one.ANOMALY_COUNT,                            
                all_in_one.MAX_WALL_LOSS,                            
                all_in_one.ILI_INSPECTION_ID
                ,all_in_one.cluster_comment
                ,all_in_one.r_595_2011_repair_method
                ,all_in_one.r_595_2011_depth_abrasion
                ,all_in_one.r_595_2011_square_abrasion
                ,all_in_one.r_595_2011_length_pipe_repair
                ,all_in_one.r_595_2011_comment
                ,all_in_one.sto_112_2007_assurance_factor
                ,all_in_one.sto_112_2007_destruct_pressure
                ,all_in_one.sto_112_2007_allow_pressure
                ,all_in_one.sto_112_2007_performance_eval
                ,all_in_one.sto_173_2007_critical_pressure
                ,all_in_one.sto_173_2007_danger_degree
                ,all_in_one.sto_173_2007_safe_pressure
                ,all_in_one.sto_292_2007_danger_rank
                ,all_in_one.sto_401_2009_fail_probability
		,all_in_one.r_620_2011_date_repair
		,all_in_one.sto_112_2007_work_press_koef
		,all_in_one.sto_112_2007_compress_strength
		,all_in_one.sto_112_2007_length_koef
		,all_in_one.ltg_thickness_measured
		,all_in_one.ltg_corrosion_speed
		,all_in_one.ltg_time_from_last_repair
		,all_in_one.ltg_thickness_to_destroy
		,all_in_one.ltg_residual_life
		,all_in_one.ltg_min_thickness_allow
		,all_in_one.ltg_actual_res_thickness
		,all_in_one.ltg_probab_corrosion_speed
		,all_in_one.ltg_depth_to_destroy
		,all_in_one.ltg_time_to_destroy
		,all_in_one.ltg_repair_method
		,all_in_one.pipe_params 
          FROM (SELECT f.ILI_CLUSTER_ID ID,
                       coalesce(C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                       coalesce(C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                      info.ILI_INSPECTION_LBL,
                       C.STATION, 
                       f.DESCRIPTION,                              
                       f.CREATE_DATE,                              
                       f.AVG_BPR_CALCULATED,                       
                       f.AVG_BPR_PIG,                              
                       f.AVG_BPR_VARIANCE,                         
                       f.AVG_DEPTH,                                
                       f.AVG_LENGTH,                               
                       f.AVG_MAX_DIAMETER,                         
                       f.AVG_MIN_DIAMETER,                        
                       f.AVG_ORIENTATION,                          
                       f.AVG_RPR_CALCULATED,                       
                       f.AVG_RPR_PIG,                              
                       f.AVG_RPR_VARIANCE,                         
                       f.AVG_WIDTH,                                
                       f.R85_BURST_PRESSURE,                       
                       f.EFFECTIVE_LENGTH,                         
                       f.EFFECTIVE_WIDTH,                          
                       f.EFFECTIVE_AREA,                           
                       f.SAFETY_FACTOR,                            
                       f.ANOMALY_COUNT,                            
                       f.MAX_WALL_LOSS,                            
                       f.ILI_INSPECTION_ID,                        
                       f.ILI_CLUSTER_ID
                       ,calc.cluster_comment
                      ,calc.r_595_2011_repair_method
                      ,calc.r_595_2011_depth_abrasion
                      ,calc.r_595_2011_square_abrasion
                      ,calc.r_595_2011_length_pipe_repair
                      ,calc.r_595_2011_comment
                      ,calc.sto_112_2007_assurance_factor
                      ,calc.sto_112_2007_destruct_pressure
                      ,calc.sto_112_2007_allow_pressure
                      ,calc.sto_112_2007_performance_eval
                      ,calc.sto_173_2007_critical_pressure
                      ,calc.sto_173_2007_danger_degree
                      ,calc.sto_173_2007_safe_pressure
                      ,calc.sto_292_2007_danger_rank
                      ,calc.sto_401_2009_fail_probability 
		      ,calc2.r_620_2011_date_test
			, calc2.r_620_2011_date_repair
			,calc2.sto_112_2007_work_press_koef
			, calc2.sto_112_2007_compress_strength
			,calc2.sto_112_2007_length_koef
			, calc2.ltg_thickness_measured
			,calc2.ltg_corrosion_speed
			,calc2.ltg_time_from_last_repair
			,calc2.ltg_thickness_to_destroy
			,calc2.ltg_residual_life
			,calc2.ltg_min_thickness_allow
			,calc2.ltg_actual_res_thickness
			,calc2.ltg_probab_corrosion_speed
			,calc2.ltg_depth_to_destroy
			,calc2.ltg_time_to_destroy
			,calc2.ltg_repair_method
			,calc2.pipe_params                          
                  FROM PODS.ILI_CLUSTER f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                       LEFT OUTER JOIN centerline c   
                         ON c.event_id = f.event_id
                       LEFT OUTER JOIN pods.sto_ili_cluster_calc calc
                         ON calc.ili_cluster_id = f.ili_cluster_id
                       LEFT OUTER JOIN pods.sto_ili_cluster_calc_adv calc2
                         ON calc2.ili_cluster_id = f.ili_cluster_id

                 WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} ) sorted
 WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}       
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ILI_CLUSTER_CNT" comment="PODS.ILI_CLUSTER" schema="PODS" table="ILI_CLUSTER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y'), 
     report_info AS (SELECT i.ili_inspection_id
                       ,ln.line_id   
                       ,r.type_cl ROUTE_TYPE_CL
                       ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                       ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                       ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                       FROM pods.ili_inspection i 
                             JOIN pods.ili_inspection_range ir
                               ON i.ili_inspection_id = ir.ili_inspection_id 
                             JOIN pods.event_range er
                               ON er.event_id = ir.event_id
                             JOIN pods.ili_tool_vendor_cl iv
                               ON i.tool_vendor_cl = iv.code
                             JOIN pods.station_point sp
                               ON sp.station_id = er.station_id_begin
                             JOIN pods.series s
                               ON s.series_id = sp.series_id
                             JOIN pods.route r
                               ON r.route_id = s.route_id
                             JOIN pods.route_type_cl rt
                               ON r.type_cl = rt.code
                             JOIN pods.line ln
                               ON ln.line_id = r.line_id
                             JOIN pods.line_type_cl lt
                               ON ln.type_cl = lt.code)  
SELECT count(*) CNT
          FROM (SELECT f.ILI_CLUSTER_ID ID,
                       C.SRV_DISTRICT_ID,
                       C.SRV_DISTRICT_LBL,
                      info.ILI_INSPECTION_LBL,
                       C.STATION, 
                       f.DESCRIPTION,                              
                       f.CREATE_DATE,                              
                       f.AVG_BPR_CALCULATED,                       
                       f.AVG_BPR_PIG,                              
                       f.AVG_BPR_VARIANCE,                         
                       f.AVG_DEPTH,                                
                       f.AVG_LENGTH,                               
                       f.AVG_MAX_DIAMETER,                         
                       f.AVG_MIN_DIAMETER,                        
                       f.AVG_ORIENTATION,                          
                       f.AVG_RPR_CALCULATED,                       
                       f.AVG_RPR_PIG,                              
                       f.AVG_RPR_VARIANCE,                         
                       f.AVG_WIDTH,                                
                       f.R85_BURST_PRESSURE,                       
                       f.EFFECTIVE_LENGTH,                         
                       f.EFFECTIVE_WIDTH,                          
                       f.EFFECTIVE_AREA,                           
                       f.SAFETY_FACTOR,                            
                       f.ANOMALY_COUNT,                            
                       f.MAX_WALL_LOSS,                            
                       f.ILI_INSPECTION_ID,                        
                       f.ILI_CLUSTER_ID
                       ,calc.cluster_comment
                      ,calc.r_595_2011_repair_method
                      ,calc.r_595_2011_depth_abrasion
                      ,calc.r_595_2011_square_abrasion
                      ,calc.r_595_2011_length_pipe_repair
                      ,calc.r_595_2011_comment
                      ,calc.sto_112_2007_assurance_factor
                      ,calc.sto_112_2007_destruct_pressure
                      ,calc.sto_112_2007_allow_pressure
                      ,calc.sto_112_2007_performance_eval
                      ,calc.sto_173_2007_critical_pressure
                      ,calc.sto_173_2007_danger_degree
                      ,calc.sto_173_2007_safe_pressure
                      ,calc.sto_292_2007_danger_rank
                      ,calc.sto_401_2009_fail_probability                           
                  FROM PODS.ILI_CLUSTER f
                          JOIN report_info info 
                            ON info.ili_inspection_id = f.ili_inspection_id
                       LEFT OUTER JOIN centerline c   
                         ON c.event_id = f.event_id
                       LEFT OUTER JOIN pods.sto_ili_cluster_calc calc
                         ON calc.ili_cluster_id = f.ili_cluster_id
                 WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE_CP_BLOCK" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.NAME
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                          LEFT OUTER JOIN PODS.STRUCTURE_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE
                WHERE f.type_cl = 'STRUCT_TYPE_16'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE_CP_BLOCK_CNT" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,f.OCCUPANCY_CATEGORY_GCL  
                      ,f.CONTACT_ID
                       FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                WHERE f.type_cl = 'STRUCT_TYPE_16'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE_CP_TRANS" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.NAME
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                      LEFT OUTER JOIN PODS.STRUCTURE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                WHERE f.type_cl = 'STRUCT_TYPE_17'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}               
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STRUCTURE_CP_TRANS_CNT" comment="PODS.STRUCTURE" schema="PODS" table="STRUCTURE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
          WITH  lpu_info AS (SELECT offline_id,srv_district_id,srv_district_lbl
                               FROM(SELECT offline_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.offline_event oe
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = oe.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id
                                       WHERE oe.current_indicator_lf = 'Y') d
                              WHERE rwn = 1)                                       
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.OFFLINE_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.NAME  
                      ,f.OCCUPANT_COUNT  
                      ,f.OCCUPANCY_CATEGORY_GCL  
                      ,f.CONTACT_ID
                       FROM PODS.STRUCTURE f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.offline_id = f.offline_id 
                WHERE f.type_cl = 'STRUCT_TYPE_17'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}          
         </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE_LINK" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400059')
                  AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE_LINK_CNT" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400059')
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FOREIGN_LINE_CROSSING_LINK" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="NULL"/>
        <var name="LINE_ID_FILTER" default="NULL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
        WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                               FROM(SELECT entity_id geographic_entity_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.geographic_entity ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                         
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID
            ,all_in_one.DESCRIPTION 
            FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION OWNER_LBL
                      ,ref3.DESCRIPTION MATERIAL_LBL
                     FROM PODS.FOREIGN_LINE_CROSSING f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                          JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                            ON f.TYPE_CL = ref1.CODE 
                          LEFT OUTER JOIN PODS.OUTSIDE_COMPANY_CL ref2 
                            ON f.OWNER_CL = ref2.CODE
                          LEFT OUTER JOIN PODS.CROSSING_MATERIAL_CL ref3 
                           ON f.MATERIAL_CL = ref3.CODE 
                WHERE f.type_cl = 'FL_CROSS_TYPE_13'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_FOREIGN_LINE_CROSSING_LINK_CNT" comment="PODS.FOREIGN_LINE_CROSSING" schema="PODS" table="FOREIGN_LINE_CROSSING">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="NULL"/>
        <var name="LINE_ID_FILTER" default="NULL"/>
        <query>
            WITH lpu_info AS (SELECT geographic_entity_id,srv_district_id,srv_district_lbl
                               FROM(SELECT entity_id geographic_entity_id
                                          ,lpu.srv_district_id
                                          ,lpu.description srv_district_lbl
                                          ,ROW_NUMBER() OVER (PARTITION BY p.shape_id ORDER BY p.hole_fl,v.sequence_no) RWN 
                                      FROM pods.geographic_entity ge
                                           LEFT OUTER JOIN pods.part p
                                             ON p.shape_id = ge.shape_id
                                           LEFT OUTER JOIN pods.vertex v
                                             ON v.part_id = p.part_id
                                           LEFT OUTER JOIN pods.location l
                                             ON l.location_id = v.location_id  
                                           JOIN pods.srv_district_gcl lpu
                                              ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END  = lpu.srv_district_id) d
                              WHERE rwn = 1 )                                                                     
      SELECT COUNT(*) CNT
            FROM (
                SELECT DISTINCT f.GEOGRAPHIC_ENTITY_ID ID
                      ,lpu.SRV_DISTRICT_ID
                      ,lpu.SRV_DISTRICT_LBL
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.FOREIGN_DIAMETER  
                      ,f.MATERIAL_CL  
                      ,f.LINE_BELOW_GROUND_LF  
                      ,f.OWNER_CL  
                      ,f.WIDTH
                     FROM PODS.FOREIGN_LINE_CROSSING f  
                          LEFT OUTER JOIN lpu_info lpu
                            ON lpu.geographic_entity_id = f.geographic_entity_id 
                      JOIN PODS.FOREIGN_LINE_CROSSING_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE f.type_cl = 'FL_CROSS_TYPE_13'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE {FILTER}
          </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE_FUND" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID
            ,all_in_one.TYPE_CL,all_in_one.DESCRIPTION
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      ,ref1.DESCRIPTION TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400014')
                  AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_SHEET_NOTE_FUND_CNT" comment="PODS.SHEET_NOTE" schema="PODS" table="SHEET_NOTE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SOURCE_NUMBER
                      FROM centerline c 
                          JOIN PODS.SHEET_NOTE f 
                            ON c.event_id = f.event_id
                      JOIN PODS.SHEET_NOTE_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE 
                WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                  AND f.TYPE_CL IN ('C1400014')
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.MARKER_TYPE_GCL,all_in_one.DESCRIPTION,all_in_one.MARKER_NUMBER,all_in_one.SIGN_TYPE_CL,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION SIGN_TYPE_LBL
                      ,ref2.DESCRIPTION MARKER_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.MARKER_SIGN_TYPE_CL ref1 
                        ON f.SIGN_TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.MARKER_TYPE_GCL ref2 
                        ON f.MARKER_TYPE_GCL = ref2.CODE 
                WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_01'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER_CNT" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                  WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_01'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER_POINT" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.MARKER_TYPE_GCL,all_in_one.DESCRIPTION,all_in_one.MARKER_NUMBER,all_in_one.SIGN_TYPE_CL,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION SIGN_TYPE_LBL
                      ,ref2.DESCRIPTION MARKER_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.MARKER_SIGN_TYPE_CL ref1 
                        ON f.SIGN_TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.MARKER_TYPE_GCL ref2 
                        ON f.MARKER_TYPE_GCL = ref2.CODE 
                WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_06'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER_POINT_CNT" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                  WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_06'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER_KM" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.ROUTE_TYPE_CL,all_in_one.LINE_ID,all_in_one.STATION
            ,all_in_one.MARKER_TYPE_GCL,all_in_one.DESCRIPTION,all_in_one.MARKER_NUMBER,all_in_one.SIGN_TYPE_CL,all_in_one.DATE_INSTALLED
             
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                      ,ref1.DESCRIPTION SIGN_TYPE_LBL
                      ,ref2.DESCRIPTION MARKER_TYPE_LBL
                     FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.MARKER_SIGN_TYPE_CL ref1 
                        ON f.SIGN_TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.MARKER_TYPE_GCL ref2 
                        ON f.MARKER_TYPE_GCL = ref2.CODE 
                WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_05'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_MARKER_KM_CNT" comment="PODS.MARKER" schema="PODS" table="MARKER">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <query>
              
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                    WHERE er.current_indicator_lf = 'Y')
      SELECT COUNT(*) CNT
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,C.STATION  
                      ,f.MARKER_TYPE_GCL  
                      ,f.DESCRIPTION  
                      ,f.MARKER_NUMBER  
                      ,f.SIGN_TYPE_CL  
                      ,f.DATE_INSTALLED
                       FROM centerline c 
                          JOIN PODS.MARKER f 
                            ON c.event_id = f.event_id
                  WHERE f.MARKER_TYPE_GCL = 'MARKER_TYPE_05'
                  AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_REPAIR_METHOD" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
	  ,all_in_one.ID,all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.R_595_2011_REPAIR_METHOD, all_in_one.R_595_2011_DEPTH_ABRASION, all_in_one.R_595_2011_SQUARE_ABRASION, all_in_one.R_595_2011_LENGTH_PIPE_REPAIR, all_in_one.R_595_2011_COMMENT, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG,all_in_one.pipe_params
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.r_595_2011_repair_method
          ,calc.r_595_2011_depth_abrasion
          ,calc.r_595_2011_square_abrasion
          ,calc.r_595_2011_length_pipe_repair
          ,calc.r_595_2011_comment
          ,calc_adv.pipe_params
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc calc
          ON f.ili_data_id = calc.ili_data_id and calc.r_595_2011_repair_method is not null
          LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
          ON f.ili_data_id = calc_adv.ili_data_id 
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_REPAIR_METHOD_CNT" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT COUNT(*) CNT
                    FROM (
                    SELECT all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
                    ,all_in_one.WELD_NUMBER,all_in_one.ABSOLUTE_ODOMETER,all_in_one.ANOMALY_TYPE_CL,all_in_one.ANOMALY_EXTENSION_CL,all_in_one.LENGTH
                    ,all_in_one.WIDTH,all_in_one.AVERAGE_DEPTH,all_in_one.ORIENTATION_DEG,all_in_one.NOMINAL_WALL_THICKNESS
                    ,all_in_one.DESCRIPTION
                    ,all_in_one.FEATURE_DESCRIPTION,all_in_one.BPR_PIG,all_in_one.ILI_INSPECTION_ID
                    ,all_in_one.RPR_CALCULATED,all_in_one.BPR_CALCULATED,all_in_one.BPR_VARIANCE,all_in_one.RPR_VARIANCE,all_in_one.cluster_comment
                    ,all_in_one.r_595_2011_repair_method,all_in_one.r_595_2011_depth_abrasion,all_in_one.r_595_2011_square_abrasion
                    ,all_in_one.r_595_2011_length_pipe_repair,all_in_one.r_595_2011_comment
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.r_595_2011_repair_method
                    ,calc.r_595_2011_depth_abrasion
                    ,calc.r_595_2011_square_abrasion
                    ,calc.r_595_2011_length_pipe_repair
                    ,calc.r_595_2011_comment
                    ,calc_adv.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.r_595_2011_repair_method is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
                    ON f.ili_data_id = calc_adv.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_PERFORMANCE_EVAL" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.STO_112_2007_PERFORMANCE_EVAL,all_in_one.sto_112_2007_work_press_koef,all_in_one.sto_112_2007_compress_strength,all_in_one.sto_112_2007_length_koef, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG,all_in_one.pipe_params
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.sto_112_2007_assurance_factor
          ,calc.sto_112_2007_destruct_pressure
          ,calc.sto_112_2007_allow_pressure
          ,calc.sto_112_2007_performance_eval
	  ,calc2.sto_112_2007_work_press_koef
	  ,calc2.sto_112_2007_compress_strength
	  ,calc2.sto_112_2007_length_koef
          ,calc2.pipe_params
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc calc
          ON f.ili_data_id = calc.ili_data_id and calc.sto_112_2007_performance_eval is not null
          LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc2
          ON f.ili_data_id = calc2.ili_data_id 
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_PERFORMANCE_EVAL_CNT" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT count(*) CNT FROM (
                    SELECT all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.STATION
                    ,all_in_one.WELD_NUMBER,all_in_one.ABSOLUTE_ODOMETER,all_in_one.ANOMALY_TYPE_CL,all_in_one.ANOMALY_EXTENSION_CL,all_in_one.LENGTH
                    ,all_in_one.WIDTH,all_in_one.AVERAGE_DEPTH,all_in_one.ORIENTATION_DEG,all_in_one.NOMINAL_WALL_THICKNESS
                    ,all_in_one.DESCRIPTION
                    ,all_in_one.FEATURE_DESCRIPTION,all_in_one.BPR_PIG,all_in_one.ILI_INSPECTION_ID
                    ,all_in_one.RPR_CALCULATED,all_in_one.BPR_CALCULATED,all_in_one.BPR_VARIANCE,all_in_one.RPR_VARIANCE,all_in_one.cluster_comment
                    ,all_in_one.sto_112_2007_assurance_factor
                    ,all_in_one.sto_112_2007_destruct_pressure,all_in_one.sto_112_2007_allow_pressure,all_in_one.sto_112_2007_performance_eval
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.sto_112_2007_assurance_factor
                    ,calc.sto_112_2007_destruct_pressure
                    ,calc.sto_112_2007_allow_pressure
                    ,calc.sto_112_2007_performance_eval
                    ,calc2.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.sto_112_2007_performance_eval is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc2
                    ON f.ili_data_id = calc2.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_DANGER_DEGREE" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.STO_173_2007_DANGER_DEGREE, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG,all_in_one.pipe_params
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.sto_173_2007_critical_pressure
          ,calc.sto_173_2007_danger_degree
          ,calc.sto_173_2007_safe_pressure
          ,calc_adv.pipe_params
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc calc
          ON f.ili_data_id = calc.ili_data_id and calc.sto_173_2007_danger_degree is not null
          LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
          ON f.ili_data_id = calc_adv.ili_data_id 
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_DANGER_DEGREE_CNT" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.sto_173_2007_critical_pressure
                    ,calc.sto_173_2007_danger_degree
                    ,calc.sto_173_2007_safe_pressure
                    ,calc_adv.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.sto_173_2007_danger_degree is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
                    ON f.ili_data_id = calc_adv.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_DANGER_RANK" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.STO_292_2007_DANGER_RANK, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG,all_in_one.pipe_params
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.sto_292_2007_danger_rank
          ,calc_adv.pipe_params
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc calc
          ON f.ili_data_id = calc.ili_data_id and calc.sto_292_2007_danger_rank is not null
          LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
          ON f.ili_data_id = calc_adv.ili_data_id 
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_DANGER_RANK_CNT" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.sto_292_2007_danger_rank
                    ,calc_adv.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.sto_292_2007_danger_rank is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
                    ON f.ili_data_id = calc_adv.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_FAIL_PROBABILITY" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
                    ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.STO_401_2009_FAIL_PROBABILITY, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG,all_in_one.pipe_params
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.sto_401_2009_fail_probability
                    ,calc_adv.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.sto_401_2009_fail_probability is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
                    ON f.ili_data_id = calc_adv.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_FAIL_PROBABILITY_CNT" comment="PODS.STO_ILI_DATA_CALC" schema="PODS" table="STO_ILI_DATA_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station
                    ,er.event_id
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    WHERE er.current_indicator_lf = 'Y'),
                    report_info AS (SELECT i.ili_inspection_id
                    ,ln.line_id
                    ,r.type_cl ROUTE_TYPE_CL
                    ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
                    ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
                    ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
                    FROM pods.ili_inspection i
                    JOIN pods.ili_inspection_range ir
                    ON i.ili_inspection_id = ir.ili_inspection_id
                    JOIN pods.event_range er
                    ON er.event_id = ir.event_id
                    JOIN pods.ili_tool_vendor_cl iv
                    ON i.tool_vendor_cl = iv.code
                    JOIN pods.station_point sp
                    ON sp.station_id = er.station_id_begin
                    JOIN pods.series s
                    ON s.series_id = sp.series_id
                    JOIN pods.route r
                    ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt
                    ON r.type_cl = rt.code
                    JOIN pods.line ln
                    ON ln.line_id = r.line_id
                    JOIN pods.line_type_cl lt
                    ON ln.type_cl = lt.code)
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_DATA_ID ID
                    ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                    ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                    ,info.ILI_INSPECTION_LBL
                    ,C.STATION
                    ,f.WELD_NUMBER
                    ,f.ABSOLUTE_ODOMETER
                    ,f.ANOMALY_TYPE_CL
                    ,f.ANOMALY_EXTENSION_CL
                    ,f.LENGTH
                    ,f.WIDTH
                    ,f.AVERAGE_DEPTH
                    ,f.ORIENTATION_DEG
                    ,f.NOMINAL_WALL_THICKNESS
                    ,f.DESCRIPTION
                    ,f.FEATURE_DESCRIPTION
                    ,f.BPR_PIG
                    ,f.RPR_CALCULATED
                    ,f.BPR_CALCULATED
                    ,f.BPR_VARIANCE
                    ,f.RPR_VARIANCE
                    ,f.ILI_INSPECTION_ID
                    ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
                    ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
                    ,calc.cluster_comment
                    ,calc.sto_401_2009_fail_probability
                    ,calc_adv.pipe_params
                    FROM PODS.ILI_DATA f
                    JOIN report_info info
                    ON info.ili_inspection_id = f.ili_inspection_id
                    LEFT OUTER JOIN  centerline c
                    ON c.event_id = f.event_id
                    LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
                    ON f.ANOMALY_TYPE_CL = ref1.CODE
                    LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
                    ON f.ANOMALY_EXTENSION_CL = ref2.CODE
                    JOIN pods.sto_ili_data_calc calc
                    ON f.ili_data_id = calc.ili_data_id and calc.sto_401_2009_fail_probability is not null
                    LEFT OUTER JOIN pods.sto_ili_data_calc_adv calc_adv
                    ON f.ili_data_id = calc_adv.ili_data_id
                    WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
                    AND ref1.category_cl = 1
                    ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_292_2007_DAMAGE_CORROSION, all_in_one.STO_292_2007_DAMAGE_CRACK, all_in_one.STO_292_2007_DAMAGE_MECHANICAL, all_in_one.STO_292_2007_DAMAGE_DENT, all_in_one.STO_292_2007_DAMAGE_DUTY_VAR, all_in_one.STO_292_2007_VALUE_PIPE, all_in_one.STO_292_2007_VALUE_WELD, all_in_one.STO_292_2007_VALUE_CONDITION

                    FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_VALUE_CONDITION_CNT" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE calc.ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_DANGER_DEG" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN, all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_DANGER_DEG_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE calc.ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_SEGMENT_CATEGORY_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select *  FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE calc.ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
  <data id="PODS_STO_100_TIME_TO_CRIT_DEPTH_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_REGULAR' and c.length=100
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE calc.ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>

  <data id="PODS_STO_VALVE_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT *
  FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_292_2007_DAMAGE_CORROSION, all_in_one.STO_292_2007_DAMAGE_CRACK, all_in_one.STO_292_2007_DAMAGE_MECHANICAL, all_in_one.STO_292_2007_DAMAGE_DENT, all_in_one.STO_292_2007_DAMAGE_DUTY_VAR, all_in_one.STO_292_2007_VALUE_PIPE, all_in_one.STO_292_2007_VALUE_WELD, all_in_one.STO_292_2007_VALUE_CONDITION

          FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                       NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END,
                       calc.sto_292_2007_damage_mechanical,
                       calc.sto_292_2007_value_weld,
                       calc.sto_292_2007_damage_crack,
                       calc.sto_292_2007_damage_corrosion,
                       calc.sto_292_2007_damage_dent,
                       calc.sto_292_2007_value_pipe,
                       calc.sto_292_2007_damage_duty_var,
                       calc.sto_292_2007_bad_pipe_count,
                       calc.sto_292_2007_value_condition,
                       calc.priority_cond,
                       calc.priority_time_exp,
                       calc.priority_probab,
                       calc.priority_time_fai,
                       calc.priority_summary
                  FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
 	WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_VALUE_CONDITION_CNT" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT COUNT(*) CNT
            FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                       NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
		       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END,
                       calc.sto_292_2007_damage_mechanical,
                       calc.sto_292_2007_value_weld,
                       calc.sto_292_2007_damage_crack,
                       calc.sto_292_2007_damage_corrosion,
                       calc.sto_292_2007_damage_dent,
                       calc.sto_292_2007_value_pipe,
                       calc.sto_292_2007_damage_duty_var,
                       calc.sto_292_2007_bad_pipe_count,
                       calc.sto_292_2007_value_condition,
                       calc.priority_cond,
                       calc.priority_time_exp,
                       calc.priority_probab,
                       calc.priority_time_fai,
                       calc.priority_summary
                  FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) 
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_DANGER_DEG" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT *
  FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN, all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
          FROM (SELECT NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END,
		       calc.*
                      FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
 	WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_DANGER_DEG_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT COUNT(*) CNT
            FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                       NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
		       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END
                  FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) 
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT *
  FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

          FROM (SELECT NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END,
		       calc.*
                      FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
 	WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_SEGMENT_CATEGORY_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT COUNT(*) CNT
            FROM (select *  FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                       NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
		       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END
                  FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) 
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT *
  FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

          FROM (SELECT NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END,
		       calc.*
                      FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
         WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
 	WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,ser.station_begin insp_station_beg
                                         ,ser.station_end insp_station_end
                                         ,er.event_id
                                         ,er.length
                                         ,er.feature_id
                                         ,er.current_indicator_lf
                                         ,ll.description line_id_lbl
                                         ,ll.line_id
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                          join pods.series ser on spb.series_id=ser.series_id
                                          join pods.line ll on ser.line_id=ll.line_id
                                          join pods.route r on ser.route_id=r.route_id
                                    WHERE er.current_indicator_lf = 'Y')
SELECT COUNT(*) CNT
            FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                       NVL (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
		       NVL (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                       CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
		       calc.event_id id,
                       C.STATION_BEG,
                       C.STATION_END
                  FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) 
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_VALUE_CONDITION" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_292_2007_DAMAGE_CORROSION, all_in_one.STO_292_2007_DAMAGE_CRACK, all_in_one.STO_292_2007_DAMAGE_MECHANICAL, all_in_one.STO_292_2007_DAMAGE_DENT, all_in_one.STO_292_2007_DAMAGE_DUTY_VAR, all_in_one.STO_292_2007_VALUE_PIPE, all_in_one.STO_292_2007_VALUE_WELD, all_in_one.STO_292_2007_VALUE_CONDITION
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
          ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_292_2007_damage_mechanical
          ,calc.sto_292_2007_value_weld
          ,calc.sto_292_2007_damage_crack
          ,calc.sto_292_2007_damage_corrosion
          ,calc.sto_292_2007_damage_dent
          ,calc.sto_292_2007_value_pipe
          ,calc.sto_292_2007_damage_duty_var
          ,calc.sto_292_2007_bad_pipe_count
          ,calc.sto_292_2007_value_condition
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_VALUE_CONDITION_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
          ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_292_2007_damage_mechanical
          ,calc.sto_292_2007_value_weld
          ,calc.sto_292_2007_damage_crack
          ,calc.sto_292_2007_damage_corrosion
          ,calc.sto_292_2007_damage_dent
          ,calc.sto_292_2007_value_pipe
          ,calc.sto_292_2007_damage_duty_var
          ,calc.sto_292_2007_bad_pipe_count
          ,calc.sto_292_2007_value_condition
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_TIME_LIMIT_EXPL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_TIME_LIMIT_EXPL_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_MIN_UNIT_COST_YKM" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_MIN_UNIT_COST_YKM_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_FAILURE_PROBABLY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_FAILURE_PROBABLY_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_OP_REP_PIPE_COUNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_OP_REP_PIPE_COUNT_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_MEAN_TIME_FAIL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_MEAN_TIME_FAIL_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
 WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.sto_401_2003_op_rep_pipe_count
          ,calc.sto_401_2003_time_limit_expl
          ,calc.sto_401_2003_mean_time_fail
	  ,calc.STO_401_2003_FAILURE_PROBABLY
          ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
	  ,calc.STO_401_2003_MIN_UNIT_COST_YKM
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_PROJECTED_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
	SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
	  ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_PROJECTED_SCC_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
	  SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_NEXT_INSP_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_NEXT_INSP_SCC_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_PROJECTED_COR" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
 WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_PROJECTED_COR_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
 WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_NEXT_INSP" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_NEXT_INSP_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
          ,calc.priority_cond
          ,calc.priority_time_exp
          ,calc.priority_probab
          ,calc.priority_time_fai
          ,calc.priority_summary
          ,calc.STO_095_2007_PROJECTED_SCC
	  ,calc.STO_095_2007_PROJECTED_COR
          ,calc.sto_095_2007_next_insp_scc
          ,calc.sto_095_2007_next_insp
          ,calc.sto_095_2007_next_comp_insp
          FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_DANGER_DEG" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
          FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>

<data id="PODS_STO_RANGE_DANGER_DEG_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
          FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_STO_RANGE_SEGMENT_CATEGORY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
         ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
          FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>

 <data id="PODS_STO_RANGE_SEGMENT_CATEGORY_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
         ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
	  FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_STO_RANGE_TIME_TO_CRIT_DEPTH" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
          ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
          FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_RANGE_TIME_TO_CRIT_DEPTH_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
WITH centerline
       AS (SELECT 
                  r.route_id,
                  r.description route_id_lbl,
                  r.type_cl route_type_cl,
                  rt.description route_type_lbl,
                  LN.line_id,
                  LN.description line_id_lbl,
                  LN.type_cl line_type_cl,
                  lt.description line_type_lbl,
                  spb.station station_beg,
                  spe.station station_end,
		  s.station_begin insp_station_beg,
                  s.station_end insp_station_end,
                  er.event_id,
                  er.feature_id,
		  er.current_indicator_lf,
                  er.length
             FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                  JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                  JOIN pods.series s ON s.series_id = spb.series_id
                  JOIN pods.route r ON r.route_id = s.route_id
                  JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                  JOIN pods.line LN ON LN.line_id = r.line_id
                  JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                  AND er.current_indicator_lf = 'Y')
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
          ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
	  calc.event_id id
	  ,C.STATION_BEG
          ,C.STATION_END
	  ,calc.DANGER_DEG
	  ,calc.DANGER_DEG_SEGMENT_TYPE
	  ,calc.SEGMENT_CATEGORY
	  ,calc.CORR_TIME_TO_CRITICAL_DEPTH
	  ,calc.SEGMENT_INTENSIVE_DEG_RATE
	  ,calc.CORR_AVER_SPEED
	  ,calc.CORR_CRITICAL_DEPTH
          FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

 <data id="PODS_ROAD_ENTITY" comment="PODS.ROAD_ENTITY" schema="PODS" table="ROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.TYPE_CL,all_in_one.DESCRIPTION,all_in_one.WIDTH,all_in_one.SURFACE_CL 
            FROM (
                SELECT f.geographic_entity_id ID
                      ,f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SURFACE_CL
                      ,ref1.DESCRIPTION TYPE_LBL
                      ,ref2.DESCRIPTION SURFACE_LBL
                     FROM PODS.ROAD f 
                      JOIN PODS.ROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                      LEFT OUTER JOIN PODS.ROAD_SURFACE_CL ref2 
                        ON f.SURFACE_CL = ref2.CODE 
                WHERE f.EVENT_ID&lt;=0
       
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
            </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_ROAD_ENTITY_CNT" comment="PODS.ROAD_ENTITY" schema="PODS" table="ROAD">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <query>
              
      SELECT COUNT(*) CNT
            FROM (
                SELECT f.TYPE_CL  
                      ,f.DESCRIPTION  
                      ,f.WIDTH  
                      ,f.SURFACE_CL
                       FROM PODS.ROAD f 

                      JOIN PODS.ROAD_TYPE_CL ref1 
                        ON f.TYPE_CL = ref1.CODE
                 WHERE f.EVENT_ID&lt;=0
          ) all_in_one WHERE {FILTER}
          
            </query>
      </dbQuery>
    </select>
  </data>

  <data id="INFOTEH_REPAIR" comment="GIS_INTEGRATION50.INFOTEH_REPAIR" schema="GIS_INTEGRATION50" table="INFOTEH_REPAIR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
	  ,all_in_one.ID,all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.DESCR, all_in_one.DATE_REPAIR, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.NEW_DIAM_THICK, all_in_one.COMMENTS, all_in_one.ANOMALY_TYPE_CL
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
	  ,calc.DESCR
	  ,calc.DATE_REPAIR
	  ,calc.LENGTH
	  ,calc.WIDTH
	  ,calc.NEW_DIAM_THICK
	  ,calc.COMMENTS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN GIS_INTEGRATION50.INFOTEH_REPAIR calc
          ON f.ili_data_id = calc.ili_data_id
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>


  <data id="INFOTEH_REPAIR_CNT" comment="GIS_INTEGRATION50.INFOTEH_REPAIR" schema="GIS_INTEGRATION50" table="INFOTEH_REPAIR">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT COUNT(*) CNT
            FROM (
          SELECT all_in_one.ID,all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.DESCR, all_in_one.DATE_REPAIR, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.NEW_DIAM_THICK, all_in_one.COMMENTS, all_in_one.ANOMALY_TYPE_CL
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
	  ,calc.DESCR
	  ,calc.DATE_REPAIR
	  ,calc.LENGTH
	  ,calc.WIDTH
	  ,calc.NEW_DIAM_THICK
	  ,calc.COMMENTS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN GIS_INTEGRATION50.INFOTEH_REPAIR calc
          ON f.ili_data_id = calc.ili_data_id
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>


  <data id="INFOTEH_EXCAVATE" comment="GIS_INTEGRATION50.INFOTEH_EXCAVATE" schema="GIS_INTEGRATION50" table="INFOTEH_EXCAVATE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
	  ,all_in_one.ID,all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.LENGTH ,all_in_one.WIDTH, all_in_one.DEF_TYPE, all_in_one.DATE_EXCAVATE, all_in_one.EXTERN_COATING, all_in_one.ORIENT, all_in_one.PIPE, all_in_one.ANOMALY_TYPE_CL
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
	  ,calc.LENGTH
       	  ,calc.WIDTH
	  ,calc.DEF_TYPE
	  ,calc.DATE_EXCAVATE
	  ,calc.EXTERN_COATING
	  ,calc.ORIENT
	  ,calc.PIPE
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN GIS_INTEGRATION50.INFOTEH_EXCAVATE calc
          ON f.ili_data_id = calc.ili_data_id
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>


  <data id="INFOTEH_EXCAVATE_CNT" comment="GIS_INTEGRATION50.INFOTEH_EXCAVATE" schema="GIS_INTEGRATION50" table="INFOTEH_EXCAVATE">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT COUNT(*) CNT
            FROM (
          SELECT all_in_one.ID,all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.LENGTH ,all_in_one.WIDTH, all_in_one.DEF_TYPE, all_in_one.DATE_EXCAVATE, all_in_one.EXTERN_COATING, all_in_one.ORIENT, all_in_one.PIPE, all_in_one.ANOMALY_TYPE_CL
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
	  ,calc.LENGTH
       	  ,calc.WIDTH
	  ,calc.DEF_TYPE
	  ,calc.DATE_EXCAVATE
	  ,calc.EXTERN_COATING
	  ,calc.ORIENT
	  ,calc.PIPE
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN GIS_INTEGRATION50.INFOTEH_EXCAVATE calc
          ON f.ili_data_id = calc.ili_data_id
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

<data id="PODS_STO_DATE_TEST" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER,  all_in_one.R_620_2011_DATE_REPAIR,all_in_one.R_620_2011_DATE_TEST, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.R_620_2011_DATE_TEST
 	  ,calc.R_620_2011_DATE_REPAIR
          ,calc.PIPE_PARAMS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.R_620_2011_DATE_TEST is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_STO_DATE_TEST_CNT" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.R_620_2011_DATE_TEST
 	  ,calc.R_620_2011_DATE_REPAIR
          ,calc.PIPE_PARAMS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.R_620_2011_DATE_TEST is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>


<data id="PODS_STO_DATE_REPAIR" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER, all_in_one.R_620_2011_DATE_REPAIR,all_in_one.R_620_2011_DATE_TEST, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.R_620_2011_DATE_REPAIR
          ,calc.R_620_2011_DATE_TEST
          ,calc.PIPE_PARAMS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.R_620_2011_DATE_REPAIR is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_STO_DATE_REPAIR_CNT" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.R_620_2011_DATE_REPAIR
          ,calc.R_620_2011_DATE_TEST
          ,calc.PIPE_PARAMS
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.R_620_2011_DATE_REPAIR is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

<data id="PODS_LTG_KOCHETKOVA" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
        <var name="COLUMNS_FILTER" default="*"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN
          ,all_in_one.ID, all_in_one.ili_inspection_id,all_in_one.SRV_DISTRICT_ID,SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION, all_in_one.WELD_NUMBER,all_in_one.LTG_THICKNESS_MEASURED  ,all_in_one.LTG_CORROSION_SPEED,all_in_one.LTG_TIME_FROM_LAST_REPAIR,all_in_one.LTG_THICKNESS_TO_DESTROY,all_in_one.LTG_RESIDUAL_LIFE,all_in_one.LTG_MIN_THICKNESS_ALLOW,all_in_one.LTG_ACTUAL_RES_THICKNESS,all_in_one.LTG_PROBAB_CORROSION_SPEED,all_in_one.LTG_DEPTH_TO_DESTROY,all_in_one.LTG_TIME_TO_DESTROY,all_in_one.LTG_REPAIR_METHOD, all_in_one.FEATURE_DESCRIPTION, all_in_one.ANOMALY_TYPE_CL, all_in_one.LENGTH, all_in_one.WIDTH, all_in_one.AVERAGE_DEPTH, all_in_one.ORIENTATION_DEG, all_in_one.PIPE_PARAMS
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.LTG_THICKNESS_MEASURED        
	  ,calc.LTG_CORROSION_SPEED           
	  ,calc.LTG_TIME_FROM_LAST_REPAIR     
	  ,calc.LTG_THICKNESS_TO_DESTROY      
	  ,calc.LTG_RESIDUAL_LIFE             
	  ,calc.LTG_MIN_THICKNESS_ALLOW       
	  ,calc.LTG_ACTUAL_RES_THICKNESS      
	  ,calc.LTG_PROBAB_CORROSION_SPEED    
	  ,calc.LTG_DEPTH_TO_DESTROY          
	  ,calc.LTG_TIME_TO_DESTROY           
	  ,calc.LTG_REPAIR_METHOD
          ,calc.PIPE_PARAMS         
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.LTG_TIME_TO_DESTROY is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_LTG_KOCHETKOVA_CNT" comment="PODS.STO_ILI_DATA_CALC_ADV" schema="PODS" table="STO_ILI_DATA_CALC_ADV">
    <select>
      <dbQuery>
        <var name="FILTER" default="1=1"/>
	<var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <query>
          WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
          ,lpu.description srv_district_lbl
          ,spb.station
          ,er.event_id
          FROM pods.event_range er
          JOIN pods.station_point spb
          ON spb.station_id = er.station_id_begin
          JOIN pods.location l
          ON l.location_id = spb.location_id
          JOIN pods.srv_district_gcl lpu
          ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
          WHERE er.current_indicator_lf = 'Y'),
          report_info AS (SELECT i.ili_inspection_id
          ,ln.line_id
          ,r.type_cl ROUTE_TYPE_CL
          ,CASE WHEN sp.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  rt.description END ||' '
          ||CASE WHEN sp.line_id = 0 THEN ir.DESCRIPTION ELSE ln.description END
          ||' ('||s.station_begin||' - ' ||s.station_end||'), ' || to_char(i.begin_date,'DD.MM.YY') ||', ' ||iv.description ILI_INSPECTION_LBL
          FROM pods.ili_inspection i
          JOIN pods.ili_inspection_range ir
          ON i.ili_inspection_id = ir.ili_inspection_id
          JOIN pods.event_range er
          ON er.event_id = ir.event_id
          JOIN pods.ili_tool_vendor_cl iv
          ON i.tool_vendor_cl = iv.code
          JOIN pods.station_point sp
          ON sp.station_id = er.station_id_begin
          JOIN pods.series s
          ON s.series_id = sp.series_id
          JOIN pods.route r
          ON r.route_id = s.route_id
          JOIN pods.route_type_cl rt
          ON r.type_cl = rt.code
          JOIN pods.line ln
          ON ln.line_id = r.line_id
          JOIN pods.line_type_cl lt
          ON ln.type_cl = lt.code)
          SELECT count(*) CNT FROM (
          SELECT *
          FROM (
          SELECT f.ILI_DATA_ID ID
          ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
          ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
          ,info.ILI_INSPECTION_LBL
          ,C.STATION
          ,f.WELD_NUMBER
          ,f.ABSOLUTE_ODOMETER
          ,f.ANOMALY_TYPE_CL
          ,f.ANOMALY_EXTENSION_CL
          ,f.LENGTH
          ,f.WIDTH
          ,f.AVERAGE_DEPTH
          ,f.ORIENTATION_DEG
          ,f.NOMINAL_WALL_THICKNESS
          ,f.DESCRIPTION
          ,f.FEATURE_DESCRIPTION
          ,f.BPR_PIG
          ,f.RPR_CALCULATED
          ,f.BPR_CALCULATED
          ,f.BPR_VARIANCE
          ,f.RPR_VARIANCE
          ,f.ILI_INSPECTION_ID
          ,ref1.DESCRIPTION ANOMALY_TYPE_LBL
          ,ref2.DESCRIPTION ANOMALY_EXTENSION_LBL
          ,calc.cluster_comment
          ,calc.LTG_THICKNESS_MEASURED        
	  ,calc.LTG_CORROSION_SPEED           
	  ,calc.LTG_TIME_FROM_LAST_REPAIR     
	  ,calc.LTG_THICKNESS_TO_DESTROY      
	  ,calc.LTG_RESIDUAL_LIFE             
	  ,calc.LTG_MIN_THICKNESS_ALLOW       
	  ,calc.LTG_ACTUAL_RES_THICKNESS      
	  ,calc.LTG_PROBAB_CORROSION_SPEED    
	  ,calc.LTG_DEPTH_TO_DESTROY          
	  ,calc.LTG_TIME_TO_DESTROY           
	  ,calc.LTG_REPAIR_METHOD 
          ,calc.PIPE_PARAMS  
          FROM PODS.ILI_DATA f
          JOIN report_info info
          ON info.ili_inspection_id = f.ili_inspection_id
          LEFT OUTER JOIN  centerline c
          ON c.event_id = f.event_id
          LEFT OUTER JOIN PODS.ILI_ANOMALY_TYPE_CL ref1
          ON f.ANOMALY_TYPE_CL = ref1.CODE
          LEFT OUTER JOIN PODS.ANOMALY_EXTENSION_CL ref2
          ON f.ANOMALY_EXTENSION_CL = ref2.CODE
          JOIN pods.sto_ili_data_calc_adv calc
          ON f.ili_data_id = calc.ili_data_id and calc.LTG_TIME_TO_DESTROY is not null
          WHERE coalesce(SRV_DISTRICT_ID,0) IN ({LPU_ACCESS_FILTER})
          AND ref1.category_cl = 1
          ) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

  <data id="PODS_STO_PIPE_SEGMENT_PARAMS" comment="PODS.STO_PIPE_SEGMENT_PARAMS" schema="PODS" table="STO_PIPE_SEGMENT_PARAMS">
    <select>
      <dbQuery>
 	<var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
          SELECT {COLUMNS_FILTER} FROM (
          SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN 
            ,all_in_one.ID,all_in_one.SRV_DISTRICT_ID,all_in_one.SRV_DISTRICT_LBL,all_in_one.ROUTE_TYPE_CL,all_in_one.ROUTE_TYPE_LBL,all_in_one.LINE_ID,all_in_one.LINE_ID_LBL,all_in_one.route_id,all_in_one.STATION_BEG,all_in_one.STATION_END,all_in_one.dot_class_rating_cl
,all_in_one.nominal_diameter_gcl,all_in_one.nominal_wall_thickness_gcl,all_in_one.pipe_long_seam_gcl,all_in_one.pipe_segment_material_cl,all_in_one.pipe_segment_manufacturer_cl,all_in_one.TYPE_SCL,all_in_one.where_coating_applied_gcl,all_in_one.project_pressure,all_in_one.test_pressure
,all_in_one.work_pressure,all_in_one.date_begin_exploitation,all_in_one.date_last_ili,all_in_one.cost_repair,all_in_one.cost_replace_pipe,all_in_one.cost_ili_1_km,all_in_one.cost_excavate,all_in_one.cost_capital_repair,all_in_one.comments,all_in_one.create_date,all_in_one.MANUFACTURER_LBL
,all_in_one.DOT_CLASS_RATING_LBL,all_in_one.PIPE_LONG_SEAM_LBL,all_in_one.NOMINAL_DIAMETER_LBL,all_in_one.NOMINAL_WALL_THICKNESS_LBL,all_in_one.SEGMENT_LBL,all_in_one.COAT_TYPE_LBL,all_in_one.WHERE_COAT_LBL
            FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,f.route_id
                      ,C.STATION_BEG
         	      ,C.STATION_END
                      ,f.dot_class_rating_cl
                      ,f.nominal_diameter_gcl
                      ,f.nominal_wall_thickness_gcl
                      ,f.pipe_long_seam_gcl
                      ,f.pipe_segment_material_cl
                      ,f.pipe_segment_manufacturer_cl
                      ,coalesce(f.coat_code, 'UNKNOWN')||'@'||coalesce(f.coat_subcode, 'NONE') TYPE_SCL
                      ,f.where_coating_applied_gcl 
                      ,f.project_pressure
                      ,f.test_pressure
                      ,f.work_pressure
                      ,f.date_begin_exploitation
                      ,f.date_last_ili
                      ,f.cost_repair
                      ,f.cost_replace_pipe
                      ,f.cost_ili_1_km
                      ,f.cost_excavate
                      ,f.cost_capital_repair
                      ,f.comments
                      ,f.create_date
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION DOT_CLASS_RATING_LBL
                      ,ref3.DESCRIPTION PIPE_LONG_SEAM_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref5.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref6.DESCRIPTION SEGMENT_LBL
                      ,ref7.DESCRIPTION COAT_TYPE_LBL
                      ,ref8.DESCRIPTION WHERE_COAT_LBL
                     FROM centerline c 
                          JOIN PODS.STO_PIPE_SEGMENT_PARAMS f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIPE_SEGMENT_MANUFACTURER_CL ref1 
                        ON f.pipe_segment_manufacturer_cl = ref1.CODE
                      LEFT OUTER JOIN PODS.dot_class_rating_cl ref2 
                        ON f.dot_class_rating_cl = ref2.CODE
                      LEFT OUTER JOIN PODS.pipe_long_seam_gcl ref3 
                        ON f.pipe_long_seam_gcl = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                      LEFT OUTER JOIN PODS.pipe_segment_material_cl ref6 
                        ON f.pipe_segment_material_cl = ref6.CODE 
                      LEFT OUTER JOIN PODS.WHERE_COATING_APPLIED_GCL ref7 
                        ON f.WHERE_COATING_APPLIED_GCL = ref7.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref8 
                        ON f.coat_code = ref8.CODE AND f.coat_subcode = ref8.SUBCODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER}) sorted
          WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
        </query>
      </dbQuery>
    </select>
  </data>
  <data id="PODS_STO_PIPE_SEGMENT_PARAMS_CNT" comment="PODS.STO_PIPE_SEGMENT_PARAMS" schema="PODS" table="STO_PIPE_SEGMENT_PARAMS">
 <select>
      <dbQuery>
 	<var name="FILTER" default="1=1"/>
        <var name="ORDER_COLUMNS" default="ID"/>
        <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
        <var name="ROUTE_TYPE_FILTER" default="SELECT code FROM pods.route_type_cl"/>
        <var name="LINE_ID_FILTER" default="SELECT line_id FROM pods.line"/>
        <var name="LOW_LIMIT" default="1"/>
        <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/><var name="COLUMNS_FILTER" default="*"/>
        <query>
               WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                                         ,lpu.description srv_district_lbl
                                         ,r.route_id
                                         ,r.description route_id_lbl
                                         ,r.type_cl route_type_cl
                                         ,rt.description route_type_lbl
                                         ,ln.line_id
                                         ,ln.description line_id_lbl
                                         ,ln.type_cl line_type_cl
                                         ,lt.description line_type_lbl
                                         ,spb.station station_beg
                                         ,spe.station station_end
                                         ,er.event_id
                                     FROM pods.event_range er
                                          JOIN pods.station_point spb
                                            ON spb.station_id = er.station_id_begin
                                          JOIN pods.station_point spe
                                            ON spe.station_id = er.station_id_end
                                          JOIN pods.location l
                                            ON l.location_id = spb.location_id
                                          JOIN pods.series s
                                            ON s.series_id = spb.series_id
                                          JOIN pods.route r
                                            ON r.route_id = s.route_id
                                          JOIN pods.route_type_cl rt
                                            ON r.type_cl = rt.code
                                          JOIN pods.line ln
                                            ON ln.line_id = r.line_id
                                          JOIN pods.line_type_cl lt
                                            ON ln.type_cl = lt.code
                                          JOIN pods.srv_district_gcl lpu
                                            ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                                   WHERE er.current_indicator_lf = 'Y')
           SELECT count(*) CNT FROM (
          SELECT *  FROM (
                SELECT C.EVENT_ID ID
                      ,coalesce(C.SRV_DISTRICT_ID,0) SRV_DISTRICT_ID
                      ,coalesce(C.SRV_DISTRICT_LBL,'Неизвестно') SRV_DISTRICT_LBL
                      ,C.ROUTE_TYPE_CL
                      ,C.ROUTE_TYPE_LBL
                      ,C.LINE_ID
                      ,C.LINE_ID_LBL
                      ,f.route_id
                      ,C.STATION_BEG
                      ,C.STATION_END
                      ,f.dot_class_rating_cl
                      ,f.nominal_diameter_gcl
                      ,f.nominal_wall_thickness_gcl
                      ,f.pipe_long_seam_gcl
                      ,f.pipe_segment_material_cl
                      ,f.pipe_segment_manufacturer_cl
                      ,coalesce(f.coat_code, 'UNKNOWN')||'@'||coalesce(f.coat_subcode, 'NONE') TYPE_SCL
                      ,f.where_coating_applied_gcl 
                      ,f.project_pressure
                      ,f.test_pressure
                      ,f.work_pressure
                      ,f.date_begin_exploitation
                      ,f.date_last_ili
                      ,f.cost_repair
                      ,f.cost_replace_pipe
                      ,f.cost_ili_1_km
                      ,f.cost_excavate
                      ,f.cost_capital_repair
                      ,f.comments
                      ,f.create_date
                      ,ref1.DESCRIPTION MANUFACTURER_LBL
                      ,ref2.DESCRIPTION DOT_CLASS_RATING_LBL
                      ,ref3.DESCRIPTION PIPE_LONG_SEAM_LBL
                      ,ref4.DESCRIPTION NOMINAL_DIAMETER_LBL
                      ,ref5.DESCRIPTION NOMINAL_WALL_THICKNESS_LBL
                      ,ref6.DESCRIPTION SEGMENT_LBL
                      ,ref7.DESCRIPTION COAT_TYPE_LBL
                      ,ref8.DESCRIPTION WHERE_COAT_LBL
                     FROM centerline c 
                          JOIN PODS.STO_PIPE_SEGMENT_PARAMS f 
                            ON c.event_id = f.event_id
                      LEFT OUTER JOIN PODS.PIPE_SEGMENT_MANUFACTURER_CL ref1 
                        ON f.pipe_segment_manufacturer_cl = ref1.CODE
                      LEFT OUTER JOIN PODS.dot_class_rating_cl ref2 
                        ON f.dot_class_rating_cl = ref2.CODE
                      LEFT OUTER JOIN PODS.pipe_long_seam_gcl ref3 
                        ON f.pipe_long_seam_gcl = ref3.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_DIAMETER_GCL ref4 
                        ON f.NOMINAL_DIAMETER_GCL = ref4.CODE
                      LEFT OUTER JOIN PODS.NOMINAL_WALL_THICKNESS_GCL ref5 
                        ON f.NOMINAL_WALL_THICKNESS_GCL = ref5.CODE 
                      LEFT OUTER JOIN PODS.pipe_segment_material_cl ref6 
                        ON f.pipe_segment_material_cl = ref6.CODE 
                      LEFT OUTER JOIN PODS.WHERE_COATING_APPLIED_GCL ref7 
                        ON f.WHERE_COATING_APPLIED_GCL = ref7.CODE
                      LEFT OUTER JOIN PODS.COATING_TYPE_SCL ref8 
                        ON f.coat_code = ref8.CODE AND f.coat_subcode = ref8.SUBCODE
                 WHERE CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})
                  AND ROUTE_TYPE_CL IN ({ROUTE_TYPE_FILTER})
                 AND CASE WHEN LINE_ID IS NULL THEN 0 ELSE LINE_ID END  IN ({LINE_ID_FILTER})
          ) all_in_one WHERE {FILTER})
        </query>
      </dbQuery>
    </select>
  </data>

</root>
