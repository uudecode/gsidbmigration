<root version="6.0.2.3">

    <data id="PODS_STO_VALVE_VALUE_CONDITION" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_292_2007_DAMAGE_CORROSION, all_in_one.STO_292_2007_DAMAGE_CRACK, all_in_one.STO_292_2007_DAMAGE_MECHANICAL, all_in_one.STO_292_2007_DAMAGE_DENT, all_in_one.STO_292_2007_DAMAGE_DUTY_VAR, all_in_one.STO_292_2007_VALUE_PIPE, all_in_one.STO_292_2007_VALUE_WELD, all_in_one.STO_292_2007_VALUE_CONDITION

                    FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_VALUE_CONDITION_CNT" comment="PODS.STO_ILI_INSPECTION_CALC" schema="PODS" table="STO_ILI_INSPECTION_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.sto_292_2007_damage_mechanical,
                    calc.sto_292_2007_value_weld,
                    calc.sto_292_2007_damage_crack,
                    calc.sto_292_2007_damage_corrosion,
                    calc.sto_292_2007_damage_dent,
                    calc.sto_292_2007_value_pipe,
                    calc.sto_292_2007_damage_duty_var,
                    calc.sto_292_2007_bad_pipe_count,
                    calc.sto_292_2007_value_condition,
                    calc.priority_cond,
                    calc.priority_time_exp,
                    calc.priority_probab,
                    calc.priority_time_fai,
                    calc.priority_summary
                    FROM centerline c JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DANGER_DEG" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN, all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_DANGER_DEG_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_SEGMENT_CATEGORY" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_SEGMENT_CATEGORY_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select *  FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT *
                    FROM (SELECT ROW_NUMBER () OVER (ORDER BY {ORDER_COLUMNS}) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.SRV_DISTRICT_ID, all_in_one.SRV_DISTRICT_LBL, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH

                    FROM (SELECT coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END,
                    calc.*
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one
                    WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_VALVE_TIME_TO_CRIT_DEPTH_CNT" comment="PODS.STO_EHZ_CALC" schema="PODS" table="STO_EHZ_CALC">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline AS (SELECT lpu.SRV_DISTRICT_ID
                    ,lpu.description srv_district_lbl
                    ,spb.station station_beg
                    ,spe.station station_end
                    ,ser.station_begin insp_station_beg
                    ,ser.station_end insp_station_end
                    ,er.event_id
                    ,er.length
                    ,er.feature_id
                    ,er.current_indicator_lf
                    ,ll.description line_id_lbl
                    ,ll.line_id
                    ,r.route_id
                    ,r.description route_id_lbl
                    FROM pods.event_range er
                    JOIN pods.station_point spb
                    ON spb.station_id = er.station_id_begin
                    JOIN pods.station_point spe
                    ON spe.station_id = er.station_id_end
                    JOIN pods.location l
                    ON l.location_id = spb.location_id
                    JOIN pods.srv_district_gcl lpu
                    ON CASE WHEN l.srv_district_gcl IS NULL THEN 0 ELSE l.srv_district_gcl END = lpu.srv_district_id
                    join pods.series ser on spb.series_id=ser.series_id
                    join pods.line ll on ser.line_id=ll.line_id
                    join pods.route r on ser.route_id=r.route_id
                    WHERE er.current_indicator_lf = 'Y')
                    SELECT COUNT(*) CNT
                    FROM (select * FROM (SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID,
                    coalesce (C.SRV_DISTRICT_ID, 0) SRV_DISTRICT_ID,
                    coalesce (C.SRV_DISTRICT_LBL, 'Неизвестно') SRV_DISTRICT_LBL,
                    CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id,
                    C.STATION_BEG,
                    C.STATION_END
                    FROM centerline c JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_PER_OBJ'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER} AND CASE WHEN SRV_DISTRICT_ID IS NULL THEN 0 ELSE SRV_DISTRICT_ID END IN ({LPU_ACCESS_FILTER})) all_in_one ) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_VALUE_CONDITION" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_292_2007_DAMAGE_CORROSION, all_in_one.STO_292_2007_DAMAGE_CRACK, all_in_one.STO_292_2007_DAMAGE_MECHANICAL, all_in_one.STO_292_2007_DAMAGE_DENT, all_in_one.STO_292_2007_DAMAGE_DUTY_VAR, all_in_one.STO_292_2007_VALUE_PIPE, all_in_one.STO_292_2007_VALUE_WELD, all_in_one.STO_292_2007_VALUE_CONDITION
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_292_2007_damage_mechanical
                    ,calc.sto_292_2007_value_weld
                    ,calc.sto_292_2007_damage_crack
                    ,calc.sto_292_2007_damage_corrosion
                    ,calc.sto_292_2007_damage_dent
                    ,calc.sto_292_2007_value_pipe
                    ,calc.sto_292_2007_damage_duty_var
                    ,calc.sto_292_2007_bad_pipe_count
                    ,calc.sto_292_2007_value_condition
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_VALUE_CONDITION_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_292_2007_damage_mechanical
                    ,calc.sto_292_2007_value_weld
                    ,calc.sto_292_2007_damage_crack
                    ,calc.sto_292_2007_damage_corrosion
                    ,calc.sto_292_2007_damage_dent
                    ,calc.sto_292_2007_value_pipe
                    ,calc.sto_292_2007_damage_duty_var
                    ,calc.sto_292_2007_bad_pipe_count
                    ,calc.sto_292_2007_value_condition
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_TIME_LIMIT_EXPL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_TIME_LIMIT_EXPL_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OPTIM_TIM_BFR_ILI_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MIN_UNIT_COST_YKM" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MIN_UNIT_COST_YKM_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_FAILURE_PROBABLY" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_FAILURE_PROBABLY_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OP_REP_PIPE_COUNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_OP_REP_PIPE_COUNT_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MEAN_TIME_FAIL" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_401_2003_TIME_LIMIT_EXPL, all_in_one.STO_401_2003_OPTIM_TIM_BFR_ILI, all_in_one.STO_401_2003_MIN_UNIT_COST_YKM, all_in_one.STO_401_2003_FAILURE_PROBABLY, all_in_one.STO_401_2003_OP_REP_PIPE_COUNT, all_in_one.STO_401_2003_MEAN_TIME_FAIL
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_MEAN_TIME_FAIL_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.sto_401_2003_op_rep_pipe_count
                    ,calc.sto_401_2003_time_limit_expl
                    ,calc.sto_401_2003_mean_time_fail
                    ,calc.STO_401_2003_FAILURE_PROBABLY
                    ,calc.STO_401_2003_OPTIM_TIM_BFR_ILI
                    ,calc.STO_401_2003_MIN_UNIT_COST_YKM
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_SCC_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP_SCC" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP_SCC_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_COR" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_PROJECTED_COR_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.STO_095_2007_PROJECTED_SCC, all_in_one.STO_095_2007_NEXT_INSP_SCC, all_in_one.STO_095_2007_PROJECTED_COR, all_in_one.STO_095_2007_NEXT_INSP
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_NEXT_INSP_CNT" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT count(*) CNT FROM (
                    SELECT *
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.priority_cond
                    ,calc.priority_time_exp
                    ,calc.priority_probab
                    ,calc.priority_time_fai
                    ,calc.priority_summary
                    ,calc.STO_095_2007_PROJECTED_SCC
                    ,calc.STO_095_2007_PROJECTED_COR
                    ,calc.sto_095_2007_next_insp_scc
                    ,calc.sto_095_2007_next_insp
                    ,calc.sto_095_2007_next_comp_insp
                    FROM centerline c LEFT OUTER JOIN pods.sto_ili_inspection_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) x01
                </query>
            </dbQuery>
        </select>
    </data>
    <data id="PODS_STO_RANGE_DANGER_DEG" comment="PODS.ILI_INSPECTION" schema="PODS" table="ILI_INSPECTION">
        <select>
            <dbQuery>
                <var name="FILTER" default="1=1"/>
                <var name="ORDER_COLUMNS" default="ID"/>
                <var name="ILI_INSP_FILTER" default="SELECT ILI_INSPECTION_ID FROM PODS.ILI_INSPECTION"/>
                <var name="LPU_ACCESS_FILTER" default="SELECT srv_district_id FROM PODS.SRV_DISTRICT_GCL"/>
                <var name="LOW_LIMIT" default="1"/>
                <var name="HIGH_LIMIT" default="FLOAT8 '+infinity'"/>
                <var name="COLUMNS_FILTER" default="*"/>
                <query>
                    WITH centerline
                    AS (SELECT
                    r.route_id,
                    r.description route_id_lbl,
                    r.type_cl route_type_cl,
                    rt.description route_type_lbl,
                    LN.line_id,
                    LN.description line_id_lbl,
                    LN.type_cl line_type_cl,
                    lt.description line_type_lbl,
                    spb.station station_beg,
                    spe.station station_end,
                    s.station_begin insp_station_beg,
                    s.station_end insp_station_end,
                    er.event_id,
                    er.feature_id,
                    er.current_indicator_lf,
                    er.length
                    FROM pods.event_range er JOIN pods.station_point spb ON spb.station_id =er.station_id_begin
                    JOIN pods.station_point spe ON spe.station_id = er.station_id_end
                    JOIN pods.series s ON s.series_id = spb.series_id
                    JOIN pods.route r ON r.route_id = s.route_id
                    JOIN pods.route_type_cl rt ON r.type_cl = rt.code
                    JOIN pods.line LN ON LN.line_id = r.line_id
                    JOIN pods.line_type_cl lt ON LN.type_cl = lt.code
                    AND er.current_indicator_lf = 'Y')
                    SELECT {COLUMNS_FILTER} FROM (
                    SELECT ROW_NUMBER() OVER (ORDER BY {ORDER_COLUMNS} ) RWN,all_in_one.ID, all_in_one.ILI_INSPECTION_ID, all_in_one.ILI_INSPECTION_LBL, all_in_one.STATION_BEG, all_in_one.STATION_END, all_in_one.DANGER_DEG, all_in_one.DANGER_DEG_SEGMENT_TYPE, all_in_one.SEGMENT_CATEGORY, all_in_one.CORR_TIME_TO_CRITICAL_DEPTH, all_in_one.SEGMENT_INTENSIVE_DEG_RATE, all_in_one.CORR_AVER_SPEED, all_in_one.CORR_CRITICAL_DEPTH
                    FROM (
                    SELECT f.ILI_INSPECTION_ID ILI_INSPECTION_ID
                    ,CASE WHEN c.line_id = 0 THEN 'Отчет не рассчитан. ' ELSE  '' END||CASE WHEN c.line_id = 0 THEN c.route_id_lbl ELSE c.line_id_lbl END||' ('||c.insp_station_beg||'-' ||c.insp_station_end||'),' || to_char(f.begin_date,'DD.MM.YY')|| (select iv.description from pods.ili_tool_vendor_cl iv where f.tool_vendor_cl=iv.code) ILI_INSPECTION_LBL,
                    calc.event_id id
                    ,C.STATION_BEG
                    ,C.STATION_END
                    ,calc.DANGER_DEG
                    ,calc.DANGER_DEG_SEGMENT_TYPE
                    ,calc.SEGMENT_CATEGORY
                    ,calc.CORR_TIME_TO_CRITICAL_DEPTH
                    ,calc.SEGMENT_INTENSIVE_DEG_RATE
                    ,calc.CORR_AVER_SPEED
                    ,calc.CORR_CRITICAL_DEPTH
                    FROM centerline c LEFT OUTER JOIN pods.sto_ehz_calc calc ON c.event_id = calc.event_id and c.current_indicator_lf='Y' and c.feature_id='INTERVAL_LAN_REC'
                    JOIN pods.ili_inspection f ON calc.ili_inspection_id = f.ili_inspection_id) all_in_one WHERE ILI_INSPECTION_ID IN ({ILI_INSP_FILTER}) AND {FILTER}) sorted
                    WHERE RWN BETWEEN {LOW_LIMIT}  AND {HIGH_LIMIT}
                </query>
            </dbQuery>
        </select>
    </data>


</root>
