<root version="6.0.2.0">
    <data id="DOCUMENT_LIST" comment="Запросы для получения списка прикрепленных документов по SYS_FULL_ID объекта; для вставки в LNK_GATE; для удаления из LNK_GATE">
        <select>
            <dbQuery idField="ID">
                <param name="SYS_FULL_ID" type="String" direction="Input" />
                <query>
                    WITH s_gate AS (SELECT gate_id,substr(left_obj_id,15) obj_id
                    FROM WEB50.LNK_GATE WHERE left_obj_id like 'WEB50_LIB_DOC/%'
                    UNION  SELECT gate_id,substr(right_obj_id,15) obj_id
                    FROM WEB50.LNK_GATE WHERE right_obj_id like 'WEB50_LIB_DOC/%')
                    SELECT sg.GATE_ID,lg.LEFT_OBJ_ID,lg.RIGHT_OBJ_ID,lg.CTIME,usr.LOGIN AS USERNAME,ld.DESCR AS CATEGORY,ld.NAME AS DESCR,ld.DOC_ID AS DOC_ID,ld.DOC_TYPE_ID AS DOC_TYPE_ID,ldv.DOC_VERSION_ID AS DOC_VERSION_ID,ldv.FILE_NAME AS FILE_NAME
                    FROM s_gate sg
                    JOIN WEB50.LNK_GATE lg ON sg.GATE_ID = lg.GATE_ID
                    JOIN WEB50.B_USER_PRIVATE usr ON usr.USER_ID=lg.CUSER_ID
                    JOIN WEB50.LIB_DOC ld ON ld.DOC_ID::text = sg.OBJ_ID
                    JOIN WEB50.LIB_DOC_TYPE_REF ldtr ON ld.DOC_TYPE_ID = ldtr.DOC_TYPE_ID
                    LEFT OUTER JOIN WEB50.LIB_DOC_VERSION ldv ON ldv.DOC_ID = ld.DOC_ID
                    WHERE lg.LNK_TYPE_ID='3' AND (lg.LEFT_OBJ_ID=:SYS_FULL_ID or lg.RIGHT_OBJ_ID=:SYS_FULL_ID)
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
                <param name="ID" type="Int64" direction="Output" />
                <param name="USER_ID" type="Int64" direction="Input" />
                <param name="LEFT_OBJ_ID" type="String" direction="Input" />
                <param name="RIGHT_OBJ_ID" type="String" direction="Input" />
                <query>
                    DECLARE v_same_id NUMBER;
                    BEGIN
                    /* не добавляем связь, если уже существует точно такая же, или если пытаемся добавить связь видеозаписи с треком, когда у этой видеозаписи уже есть связь с другим треком */
                    SELECT COUNT(*) INTO v_same_id FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID=:LEFT_OBJ_ID AND
                    (RIGHT_OBJ_ID=:RIGHT_OBJ_ID OR (LEFT_OBJ_ID in (select 'WEB50_LIB_DOC/'||TO_NUMBER(doc_id) FROM WEB50.LIB_DOC WHERE DOC_TYPE_ID=41) AND RIGHT_OBJ_ID LIKE 'WEB50_POI_TRACK/%' AND :RIGHT_OBJ_ID LIKE 'WEB50_POI_TRACK/%'));
                    IF (v_same_id &gt; 0)
                    THEN
                    RAISE_APPLICATION_ERROR(-20701,'Невозможно добавить связь. Такая связь уже существует.');
                    ELSE
                    INSERT INTO WEB50.LNK_GATE (LEFT_OBJ_ID,RIGHT_OBJ_ID,LNK_TYPE_ID,CTIME,CUSER_ID,MTIME,MUSER_ID)
                    VALUES (:LEFT_OBJ_ID,:RIGHT_OBJ_ID,3,sysdate,:USER_ID,NULL,NULL) RETURNING GATE_ID INTO :ID;
                    END IF;
                    END;
                </query>
            </dbCommand>
        </insert>
        <delete>
            <dbCommand>
                <param name="GATE_ID" type="Int64" direction="Input" />
                <query>
                    BEGIN   DELETE FROM WEB50.LNK_GATE WHERE GATE_ID=:GATE_ID;   END;
                </query>
            </dbCommand>
        </delete>
    </data>
    <!-- Запросы для работы с новостной лентой комментариев и прикрепленных документов -->
    <data id="LIB_DOC_COMMENTS_LIST" comment="Запросы для получения списка прикрепленных документов и комментариев по SYS_FULL_ID объекта для новостной ленты; для вставки в WEB50_LIB_DOC, LNK_GATE; для удаления из LNK_GATE">
        <select>
            <dbQuery idField="ID">
                <param name="SYS_OBJ_ID" type="Int64" direction="Input" />
                <param name="SYS_FULL_ID" type="String" direction="Input" />
                <param name="DB_TABLE_ID" type="String" direction="Input" />
                <query>
                    WITH s_gate AS (SELECT gate_id,substr(left_obj_id,15) obj_id
                    FROM WEB50.LNK_GATE WHERE left_obj_id like 'WEB50_LIB_DOC/%'
                    UNION  SELECT gate_id,substr(right_obj_id,15) obj_id
                    FROM WEB50.LNK_GATE WHERE right_obj_id like 'WEB50_LIB_DOC/%')
                    select * from (
                    SELECT a.COMMENTS_ID GATE_ID,
                    (a.COMMENTS_ID)::text LEFT_OBJ_ID,
                    b.TABLE_NAME || '/' || a.ID RIGHT_OBJ_ID,
                    a.CREATE_DATE CTIME,
                    a.pods_user USERNAME,
                    a.COMMENT_BY DESCR,
                    a.COMMENTS "name",
                    a.COMMENTS_ID DOC_ID,
                    -10 DOC_TYPE_ID,
                    a.COMMENTS_ID DOC_VERSION_ID,
                    NULL FILE_NAME,
                    NULL PARENT_NAME,
                    NULL TYPE_NAME,
                    NULL TYPE_DESCR,
                    NULL MUSER_ID,
                    NULL MTIME,
                    NULL MUSER
                    FROM    PODS.COMMENTS a
                    JOIN
                    PODS.PODS_TABLE b
                    ON a.TABLE_ID = b.TABLE_ID  WHERE a.ID=:SYS_OBJ_ID and b.TABLE_NAME=:DB_TABLE_ID
                    union all
                    SELECT sg.GATE_ID,lg.LEFT_OBJ_ID,lg.RIGHT_OBJ_ID,lg.CTIME,usr.LOGIN AS USERNAME,ld.DESCR AS DESCR,ld.NAME AS NAME,ld.DOC_ID AS DOC_ID,ld.DOC_TYPE_ID AS DOC_TYPE_ID,ldv.DOC_VERSION_ID AS DOC_VERSION_ID,ldv.FILE_NAME AS FILE_NAME
                    ,parentld.NAME AS PARENT_NAME,ldtr.NAME AS TYPE_NAME,ldtr.DESCR AS TYPE_DESCR,ld.MUSER_ID,ld.MTIME,musr.LOGIN AS MUSER
                    FROM s_gate sg
                    JOIN WEB50.LNK_GATE lg ON sg.GATE_ID = lg.GATE_ID
                    JOIN WEB50.B_USER_PRIVATE usr ON usr.USER_ID=lg.CUSER_ID
                    JOIN WEB50.LIB_DOC ld ON ld.DOC_ID = sg.OBJ_ID
                    JOIN WEB50.LIB_DOC_TYPE_REF ldtr ON ld.DOC_TYPE_ID = ldtr.DOC_TYPE_ID
                    LEFT OUTER JOIN WEB50.LIB_DOC_VERSION ldv ON ldv.DOC_ID = ld.DOC_ID
                    LEFT OUTER JOIN WEB50.B_USER_PRIVATE musr ON musr.USER_ID=ld.MUSER_ID
                    LEFT OUTER JOIN WEB50.LIB_DOC parentld ON parentld.DOC_ID=ld.PARENT_DOC_ID
                    WHERE lg.LNK_TYPE_ID='3' AND (lg.LEFT_OBJ_ID=:SYS_FULL_ID or lg.RIGHT_OBJ_ID=:SYS_FULL_ID) ) x01
                    order by CTIME
                </query>
            </dbQuery>
        </select>
        <insert>
            <dbCommand>
                <param name="ID" type="Int64" direction="Output" />
                <param name="USER_ID" type="Int64" direction="Input" />
                <param name="LEFT_OBJ_ID" type="String" direction="Input" />
                <param name="RIGHT_OBJ_ID" type="String" direction="Input" />
                <query>
                    DECLARE v_same_id NUMBER;
                    BEGIN
                    /* не добавляем связь, если уже существует точно такая же, или если пытаемся добавить связь видеозаписи с треком, когда у этой видеозаписи уже есть связь с другим треком */
                    SELECT COUNT(*) INTO v_same_id FROM WEB50.LNK_GATE WHERE LEFT_OBJ_ID=:LEFT_OBJ_ID AND
                    (RIGHT_OBJ_ID=:RIGHT_OBJ_ID OR (LEFT_OBJ_ID in (select 'WEB50_LIB_DOC/'||TO_NUMBER(doc_id) FROM WEB50.LIB_DOC WHERE DOC_TYPE_ID=41) AND RIGHT_OBJ_ID LIKE 'WEB50_POI_TRACK/%' AND :RIGHT_OBJ_ID LIKE 'WEB50_POI_TRACK/%'));
                    IF (v_same_id &gt; 0)
                    THEN
                    RAISE_APPLICATION_ERROR(-20701,'Невозможно добавить связь. Такая связь уже существует.');
                    ELSE
                    INSERT INTO WEB50.LNK_GATE (LEFT_OBJ_ID,RIGHT_OBJ_ID,LNK_TYPE_ID,CTIME,CUSER_ID,MTIME,MUSER_ID)
                    VALUES (:LEFT_OBJ_ID,:RIGHT_OBJ_ID,3,sysdate,:USER_ID,NULL,NULL) RETURNING GATE_ID INTO :ID;
                    END IF;
                    END;
                </query>
            </dbCommand>
        </insert>
        <delete>
            <dbCommand>
                <param name="GATE_ID" type="Int64" direction="Input" />
                <query>
                    BEGIN   DELETE FROM WEB50.LNK_GATE WHERE GATE_ID=:GATE_ID;   END;
                </query>
            </dbCommand>
        </delete>
    </data>


</root>